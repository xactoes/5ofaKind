                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module turnRollDisplay
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _turnRollDisplay
                                     12 	.globl _turnDisplay
                                     13 	.globl _rollDisplay
                                     14 	.globl _bcd2text
                                     15 	.globl _bcd_sub
                                     16 	.globl _uint2bcd
                                     17 	.globl _set_bkg_tile_xy
                                     18 	.globl _set_bkg_tiles
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _INITIALIZED
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _DABS (ABS)
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area _HOME
                                     38 	.area _GSINIT
                                     39 	.area _GSFINAL
                                     40 	.area _GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area _HOME
                                     45 	.area _HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area _CODE
                                     50 ;func/turnRollDisplay.c:12: void rollDisplay(){
                                     51 ;	---------------------------------
                                     52 ; Function rollDisplay
                                     53 ; ---------------------------------
      000000                         54 _rollDisplay::
                                     55 ;func/turnRollDisplay.c:13: len = 0;
      000000 AF                      56 	xor	a, a
      000001 21r00r00                57 	ld	hl, #_len
      000004 22                      58 	ld	(hl+), a
      000005 77                      59 	ld	(hl), a
                                     60 ;func/turnRollDisplay.c:14: bcd_sub(&rollBCD, &rollBCD);
      000006 11r00r00                61 	ld	de, #_rollBCD
      000009 D5                      62 	push	de
      00000A D5                      63 	push	de
      00000B CDr00r00                64 	call	_bcd_sub
      00000E E8 04                   65 	add	sp, #4
                                     66 ;func/turnRollDisplay.c:15: for(i = 0; i != 10; i++){
      000010 AF                      67 	xor	a, a
      000011 21r00r00                68 	ld	hl, #_i
      000014 22                      69 	ld	(hl+), a
      000015 77                      70 	ld	(hl), a
      000016                         71 00106$:
                                     72 ;func/turnRollDisplay.c:16: buf[i] = 0;
      000016 3Er00                   73 	ld	a, #<(_buf)
      000018 21r00r00                74 	ld	hl, #_i
      00001B 86                      75 	add	a, (hl)
      00001C 23                      76 	inc	hl
      00001D 4F                      77 	ld	c, a
      00001E 3Es00                   78 	ld	a, #>(_buf)
      000020 8E                      79 	adc	a, (hl)
                                     80 ;func/turnRollDisplay.c:15: for(i = 0; i != 10; i++){
      000021 2B                      81 	dec	hl
      000022 47                      82 	ld	b, a
      000023 AF                      83 	xor	a, a
      000024 02                      84 	ld	(bc), a
      000025 34                      85 	inc	(hl)
      000026 20 02                   86 	jr	NZ, 00130$
      000028 23                      87 	inc	hl
      000029 34                      88 	inc	(hl)
      00002A                         89 00130$:
      00002A 21r00r00                90 	ld	hl, #_i
      00002D 2A                      91 	ld	a, (hl+)
      00002E D6 0A                   92 	sub	a, #0x0a
      000030 B6                      93 	or	a, (hl)
      000031 20 E3                   94 	jr	NZ, 00106$
                                     95 ;func/turnRollDisplay.c:18: if(rollsLeft == 3 && turn != 1) return;
      000033 21r00r00                96 	ld	hl, #_rollsLeft
      000036 2A                      97 	ld	a, (hl+)
      000037 D6 03                   98 	sub	a, #0x03
      000039 B6                      99 	or	a, (hl)
      00003A 20 07                  100 	jr	NZ, 00103$
      00003C 21r00r00               101 	ld	hl, #_turn
      00003F 2A                     102 	ld	a, (hl+)
      000040 3D                     103 	dec	a
      000041 B6                     104 	or	a, (hl)
      000042 C0                     105 	ret	NZ
      000043                        106 00103$:
                                    107 ;func/turnRollDisplay.c:20: uint2bcd(rollsLeft, &rollBCD);
      000043 11r00r00               108 	ld	de, #_rollBCD
      000046 21r00r00               109 	ld	hl, #_rollsLeft
      000049 2A                     110 	ld	a, (hl+)
      00004A 4F                     111 	ld	c, a
      00004B 46                     112 	ld	b, (hl)
      00004C D5                     113 	push	de
      00004D C5                     114 	push	bc
      00004E CDr00r00               115 	call	_uint2bcd
      000051 E8 04                  116 	add	sp, #4
                                    117 ;func/turnRollDisplay.c:21: len = bcd2text(&rollBCD, 0x10, buf);
      000053 11r00r00               118 	ld	de, #_buf
      000056 D5                     119 	push	de
      000057 3E 10                  120 	ld	a, #0x10
      000059 F5                     121 	push	af
      00005A 33                     122 	inc	sp
      00005B 11r00r00               123 	ld	de, #_rollBCD
      00005E D5                     124 	push	de
      00005F CDr00r00               125 	call	_bcd2text
      000062 E8 05                  126 	add	sp, #5
      000064 21r00r00               127 	ld	hl, #_len
      000067 7B                     128 	ld	a, e
      000068 22                     129 	ld	(hl+), a
                                    130 ;func/turnRollDisplay.c:22: set_bkg_tiles(11, 5, len, 1, buf);
      000069 3E 00                  131 	ld	a, #0x00
      00006B 32                     132 	ld	(hl-), a
      00006C 01r00r00               133 	ld	bc, #_buf
      00006F 7E                     134 	ld	a, (hl)
      000070 C5                     135 	push	bc
      000071 26 01                  136 	ld	h, #0x01
                                    137 ;	spillPairReg hl
                                    138 ;	spillPairReg hl
      000073 E5                     139 	push	hl
      000074 33                     140 	inc	sp
      000075 67                     141 	ld	h, a
      000076 2E 05                  142 	ld	l, #0x05
      000078 E5                     143 	push	hl
      000079 3E 0B                  144 	ld	a, #0x0b
      00007B F5                     145 	push	af
      00007C 33                     146 	inc	sp
      00007D CDr00r00               147 	call	_set_bkg_tiles
      000080 E8 06                  148 	add	sp, #6
                                    149 ;func/turnRollDisplay.c:25: set_bkg_tile_xy(11, 5, 0x2C); // L
      000082 21 05 2C               150 	ld	hl, #0x2c05
      000085 E5                     151 	push	hl
      000086 3E 0B                  152 	ld	a, #0x0b
      000088 F5                     153 	push	af
      000089 33                     154 	inc	sp
      00008A CDr00r00               155 	call	_set_bkg_tile_xy
      00008D E8 03                  156 	add	sp, #3
                                    157 ;func/turnRollDisplay.c:26: set_bkg_tile_xy(12, 5, 0x45); // e
      00008F 21 05 45               158 	ld	hl, #0x4505
      000092 E5                     159 	push	hl
      000093 3E 0C                  160 	ld	a, #0x0c
      000095 F5                     161 	push	af
      000096 33                     162 	inc	sp
      000097 CDr00r00               163 	call	_set_bkg_tile_xy
      00009A E8 03                  164 	add	sp, #3
                                    165 ;func/turnRollDisplay.c:27: set_bkg_tile_xy(13, 5, 0x46); // f
      00009C 21 05 46               166 	ld	hl, #0x4605
      00009F E5                     167 	push	hl
      0000A0 3E 0D                  168 	ld	a, #0x0d
      0000A2 F5                     169 	push	af
      0000A3 33                     170 	inc	sp
      0000A4 CDr00r00               171 	call	_set_bkg_tile_xy
      0000A7 E8 03                  172 	add	sp, #3
                                    173 ;func/turnRollDisplay.c:28: set_bkg_tile_xy(14, 5, 0x54); // t
      0000A9 21 05 54               174 	ld	hl, #0x5405
      0000AC E5                     175 	push	hl
      0000AD 3E 0E                  176 	ld	a, #0x0e
      0000AF F5                     177 	push	af
      0000B0 33                     178 	inc	sp
      0000B1 CDr00r00               179 	call	_set_bkg_tile_xy
      0000B4 E8 03                  180 	add	sp, #3
                                    181 ;func/turnRollDisplay.c:29: set_bkg_tile_xy(15, 5, 0x1A); // :
      0000B6 21 05 1A               182 	ld	hl, #0x1a05
      0000B9 E5                     183 	push	hl
      0000BA 3E 0F                  184 	ld	a, #0x0f
      0000BC F5                     185 	push	af
      0000BD 33                     186 	inc	sp
      0000BE CDr00r00               187 	call	_set_bkg_tile_xy
      0000C1 E8 03                  188 	add	sp, #3
                                    189 ;func/turnRollDisplay.c:30: set_bkg_tile_xy(16, 5, 0x00); // blank
      0000C3 AF                     190 	xor	a, a
      0000C4 67                     191 	ld	h, a
      0000C5 2E 05                  192 	ld	l, #0x05
      0000C7 E5                     193 	push	hl
      0000C8 3E 10                  194 	ld	a, #0x10
      0000CA F5                     195 	push	af
      0000CB 33                     196 	inc	sp
      0000CC CDr00r00               197 	call	_set_bkg_tile_xy
      0000CF E8 03                  198 	add	sp, #3
                                    199 ;func/turnRollDisplay.c:31: set_bkg_tile_xy(17, 5, 0x00); // blank
      0000D1 AF                     200 	xor	a, a
      0000D2 67                     201 	ld	h, a
      0000D3 2E 05                  202 	ld	l, #0x05
      0000D5 E5                     203 	push	hl
      0000D6 3E 11                  204 	ld	a, #0x11
      0000D8 F5                     205 	push	af
      0000D9 33                     206 	inc	sp
      0000DA CDr00r00               207 	call	_set_bkg_tile_xy
      0000DD E8 03                  208 	add	sp, #3
                                    209 ;func/turnRollDisplay.c:33: }
      0000DF C9                     210 	ret
                                    211 ;func/turnRollDisplay.c:36: void turnDisplay(){
                                    212 ;	---------------------------------
                                    213 ; Function turnDisplay
                                    214 ; ---------------------------------
      0000E0                        215 _turnDisplay::
                                    216 ;func/turnRollDisplay.c:37: len = 0;
      0000E0 AF                     217 	xor	a, a
      0000E1 21r00r00               218 	ld	hl, #_len
      0000E4 22                     219 	ld	(hl+), a
      0000E5 77                     220 	ld	(hl), a
                                    221 ;func/turnRollDisplay.c:38: bcd_sub(&turnBCD, &turnBCD);
      0000E6 11r00r00               222 	ld	de, #_turnBCD
      0000E9 D5                     223 	push	de
      0000EA D5                     224 	push	de
      0000EB CDr00r00               225 	call	_bcd_sub
      0000EE E8 04                  226 	add	sp, #4
                                    227 ;func/turnRollDisplay.c:39: for(i = 0; i != 10; i++){
      0000F0 AF                     228 	xor	a, a
      0000F1 21r00r00               229 	ld	hl, #_i
      0000F4 22                     230 	ld	(hl+), a
      0000F5 77                     231 	ld	(hl), a
      0000F6                        232 00102$:
                                    233 ;func/turnRollDisplay.c:40: buf[i] = 0;
      0000F6 3Er00                  234 	ld	a, #<(_buf)
      0000F8 21r00r00               235 	ld	hl, #_i
      0000FB 86                     236 	add	a, (hl)
      0000FC 23                     237 	inc	hl
      0000FD 4F                     238 	ld	c, a
      0000FE 3Es00                  239 	ld	a, #>(_buf)
      000100 8E                     240 	adc	a, (hl)
                                    241 ;func/turnRollDisplay.c:39: for(i = 0; i != 10; i++){
      000101 2B                     242 	dec	hl
      000102 47                     243 	ld	b, a
      000103 AF                     244 	xor	a, a
      000104 02                     245 	ld	(bc), a
      000105 34                     246 	inc	(hl)
      000106 20 02                  247 	jr	NZ, 00116$
      000108 23                     248 	inc	hl
      000109 34                     249 	inc	(hl)
      00010A                        250 00116$:
      00010A 21r00r00               251 	ld	hl, #_i
      00010D 2A                     252 	ld	a, (hl+)
      00010E D6 0A                  253 	sub	a, #0x0a
      000110 B6                     254 	or	a, (hl)
      000111 20 E3                  255 	jr	NZ, 00102$
                                    256 ;func/turnRollDisplay.c:42: uint2bcd(turn, &turnBCD);
      000113 21r00r00               257 	ld	hl, #_turn
      000116 2A                     258 	ld	a, (hl+)
      000117 4F                     259 	ld	c, a
      000118 46                     260 	ld	b, (hl)
      000119 11r00r00               261 	ld	de, #_turnBCD
      00011C D5                     262 	push	de
      00011D C5                     263 	push	bc
      00011E CDr00r00               264 	call	_uint2bcd
      000121 E8 04                  265 	add	sp, #4
                                    266 ;func/turnRollDisplay.c:43: len = bcd2text(&turnBCD, 0x10, buf);
      000123 11r00r00               267 	ld	de, #_buf
      000126 D5                     268 	push	de
      000127 3E 10                  269 	ld	a, #0x10
      000129 F5                     270 	push	af
      00012A 33                     271 	inc	sp
      00012B 11r00r00               272 	ld	de, #_turnBCD
      00012E D5                     273 	push	de
      00012F CDr00r00               274 	call	_bcd2text
      000132 E8 05                  275 	add	sp, #5
      000134 21r00r00               276 	ld	hl, #_len
      000137 7B                     277 	ld	a, e
      000138 22                     278 	ld	(hl+), a
                                    279 ;func/turnRollDisplay.c:44: set_bkg_tiles(2, 5, len, 1, buf);
      000139 3E 00                  280 	ld	a, #0x00
      00013B 32                     281 	ld	(hl-), a
      00013C 7E                     282 	ld	a, (hl)
      00013D 11r00r00               283 	ld	de, #_buf
      000140 D5                     284 	push	de
      000141 26 01                  285 	ld	h, #0x01
                                    286 ;	spillPairReg hl
                                    287 ;	spillPairReg hl
      000143 E5                     288 	push	hl
      000144 33                     289 	inc	sp
      000145 67                     290 	ld	h, a
      000146 2E 05                  291 	ld	l, #0x05
      000148 E5                     292 	push	hl
      000149 3E 02                  293 	ld	a, #0x02
      00014B F5                     294 	push	af
      00014C 33                     295 	inc	sp
      00014D CDr00r00               296 	call	_set_bkg_tiles
      000150 E8 06                  297 	add	sp, #6
                                    298 ;func/turnRollDisplay.c:47: set_bkg_tile_xy(2, 5, 0x34); // T
      000152 21 05 34               299 	ld	hl, #0x3405
      000155 E5                     300 	push	hl
      000156 3E 02                  301 	ld	a, #0x02
      000158 F5                     302 	push	af
      000159 33                     303 	inc	sp
      00015A CDr00r00               304 	call	_set_bkg_tile_xy
      00015D E8 03                  305 	add	sp, #3
                                    306 ;func/turnRollDisplay.c:48: set_bkg_tile_xy(3, 5, 0x55); // u
      00015F 21 05 55               307 	ld	hl, #0x5505
      000162 E5                     308 	push	hl
      000163 3E 03                  309 	ld	a, #0x03
      000165 F5                     310 	push	af
      000166 33                     311 	inc	sp
      000167 CDr00r00               312 	call	_set_bkg_tile_xy
      00016A E8 03                  313 	add	sp, #3
                                    314 ;func/turnRollDisplay.c:49: set_bkg_tile_xy(4, 5, 0x52); // r
      00016C 21 05 52               315 	ld	hl, #0x5205
      00016F E5                     316 	push	hl
      000170 3E 04                  317 	ld	a, #0x04
      000172 F5                     318 	push	af
      000173 33                     319 	inc	sp
      000174 CDr00r00               320 	call	_set_bkg_tile_xy
      000177 E8 03                  321 	add	sp, #3
                                    322 ;func/turnRollDisplay.c:50: set_bkg_tile_xy(5, 5, 0x4E); // n
      000179 21 05 4E               323 	ld	hl, #0x4e05
      00017C E5                     324 	push	hl
      00017D 3E 05                  325 	ld	a, #0x05
      00017F F5                     326 	push	af
      000180 33                     327 	inc	sp
      000181 CDr00r00               328 	call	_set_bkg_tile_xy
      000184 E8 03                  329 	add	sp, #3
                                    330 ;func/turnRollDisplay.c:51: set_bkg_tile_xy(6, 5, 0x1A); // :
      000186 21 05 1A               331 	ld	hl, #0x1a05
      000189 E5                     332 	push	hl
      00018A 3E 06                  333 	ld	a, #0x06
      00018C F5                     334 	push	af
      00018D 33                     335 	inc	sp
      00018E CDr00r00               336 	call	_set_bkg_tile_xy
      000191 E8 03                  337 	add	sp, #3
                                    338 ;func/turnRollDisplay.c:52: set_bkg_tile_xy(7, 5, 0x00); // blank
      000193 AF                     339 	xor	a, a
      000194 67                     340 	ld	h, a
      000195 2E 05                  341 	ld	l, #0x05
      000197 E5                     342 	push	hl
      000198 3E 07                  343 	ld	a, #0x07
      00019A F5                     344 	push	af
      00019B 33                     345 	inc	sp
      00019C CDr00r00               346 	call	_set_bkg_tile_xy
      00019F E8 03                  347 	add	sp, #3
                                    348 ;func/turnRollDisplay.c:53: set_bkg_tile_xy(8, 5, 0x00); // blank
      0001A1 AF                     349 	xor	a, a
      0001A2 67                     350 	ld	h, a
      0001A3 2E 05                  351 	ld	l, #0x05
      0001A5 E5                     352 	push	hl
      0001A6 3E 08                  353 	ld	a, #0x08
      0001A8 F5                     354 	push	af
      0001A9 33                     355 	inc	sp
      0001AA CDr00r00               356 	call	_set_bkg_tile_xy
      0001AD E8 03                  357 	add	sp, #3
                                    358 ;func/turnRollDisplay.c:54: }
      0001AF C9                     359 	ret
                                    360 ;func/turnRollDisplay.c:57: void turnRollDisplay(){
                                    361 ;	---------------------------------
                                    362 ; Function turnRollDisplay
                                    363 ; ---------------------------------
      0001B0                        364 _turnRollDisplay::
                                    365 ;func/turnRollDisplay.c:58: rollDisplay();
      0001B0 CDr00r00               366 	call	_rollDisplay
                                    367 ;func/turnRollDisplay.c:59: turnDisplay();
                                    368 ;func/turnRollDisplay.c:60: }
      0001B3 C3rE0r00               369 	jp	_turnDisplay
                                    370 	.area _CODE
                                    371 	.area _INITIALIZER
                                    372 	.area _CABS (ABS)
