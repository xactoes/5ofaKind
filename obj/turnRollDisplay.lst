                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module turnRollDisplay
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _turnRollDisplay
                                     12 	.globl _turnDisplay
                                     13 	.globl _rollDisplay
                                     14 	.globl _bcd2text
                                     15 	.globl _bcd_sub
                                     16 	.globl _uint2bcd
                                     17 	.globl _set_bkg_tile_xy
                                     18 	.globl _set_bkg_tiles
                                     19 	.globl _wait_vbl_done
                                     20 ;--------------------------------------------------------
                                     21 ; special function registers
                                     22 ;--------------------------------------------------------
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _DATA
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _INITIALIZED
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area _DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; global & static initialisations
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _GSINIT
                                     40 	.area _GSFINAL
                                     41 	.area _GSINIT
                                     42 ;--------------------------------------------------------
                                     43 ; Home
                                     44 ;--------------------------------------------------------
                                     45 	.area _HOME
                                     46 	.area _HOME
                                     47 ;--------------------------------------------------------
                                     48 ; code
                                     49 ;--------------------------------------------------------
                                     50 	.area _CODE
                                     51 ;func/turnRollDisplay.c:12: void rollDisplay(){
                                     52 ;	---------------------------------
                                     53 ; Function rollDisplay
                                     54 ; ---------------------------------
      000000                         55 _rollDisplay::
                                     56 ;func/turnRollDisplay.c:13: len = 0;
      000000 AF                      57 	xor	a, a
      000001 21r00r00                58 	ld	hl, #_len
      000004 22                      59 	ld	(hl+), a
      000005 77                      60 	ld	(hl), a
                                     61 ;func/turnRollDisplay.c:14: bcd_sub(&rollBCD, &rollBCD);
      000006 11r00r00                62 	ld	de, #_rollBCD
      000009 D5                      63 	push	de
      00000A D5                      64 	push	de
      00000B CDr00r00                65 	call	_bcd_sub
      00000E E8 04                   66 	add	sp, #4
                                     67 ;func/turnRollDisplay.c:15: for(i = 0; i != 10; i++){
      000010 AF                      68 	xor	a, a
      000011 21r00r00                69 	ld	hl, #_i
      000014 22                      70 	ld	(hl+), a
      000015 77                      71 	ld	(hl), a
      000016                         72 00106$:
                                     73 ;func/turnRollDisplay.c:16: buf[i] = 0;
      000016 3Er00                   74 	ld	a, #<(_buf)
      000018 21r00r00                75 	ld	hl, #_i
      00001B 86                      76 	add	a, (hl)
      00001C 23                      77 	inc	hl
      00001D 4F                      78 	ld	c, a
      00001E 3Es00                   79 	ld	a, #>(_buf)
      000020 8E                      80 	adc	a, (hl)
                                     81 ;func/turnRollDisplay.c:15: for(i = 0; i != 10; i++){
      000021 2B                      82 	dec	hl
      000022 47                      83 	ld	b, a
      000023 AF                      84 	xor	a, a
      000024 02                      85 	ld	(bc), a
      000025 34                      86 	inc	(hl)
      000026 20 02                   87 	jr	NZ, 00130$
      000028 23                      88 	inc	hl
      000029 34                      89 	inc	(hl)
      00002A                         90 00130$:
      00002A 21r00r00                91 	ld	hl, #_i
      00002D 2A                      92 	ld	a, (hl+)
      00002E D6 0A                   93 	sub	a, #0x0a
      000030 B6                      94 	or	a, (hl)
      000031 20 E3                   95 	jr	NZ, 00106$
                                     96 ;func/turnRollDisplay.c:18: if(rollsLeft == 3 && turn != 1) return;
      000033 21r00r00                97 	ld	hl, #_rollsLeft
      000036 2A                      98 	ld	a, (hl+)
      000037 D6 03                   99 	sub	a, #0x03
      000039 B6                     100 	or	a, (hl)
      00003A 20 07                  101 	jr	NZ, 00103$
      00003C 21r00r00               102 	ld	hl, #_turn
      00003F 2A                     103 	ld	a, (hl+)
      000040 3D                     104 	dec	a
      000041 B6                     105 	or	a, (hl)
      000042 C0                     106 	ret	NZ
      000043                        107 00103$:
                                    108 ;func/turnRollDisplay.c:20: uint2bcd(rollsLeft, &rollBCD);
      000043 11r00r00               109 	ld	de, #_rollBCD
      000046 21r00r00               110 	ld	hl, #_rollsLeft
      000049 2A                     111 	ld	a, (hl+)
      00004A 4F                     112 	ld	c, a
      00004B 46                     113 	ld	b, (hl)
      00004C D5                     114 	push	de
      00004D C5                     115 	push	bc
      00004E CDr00r00               116 	call	_uint2bcd
      000051 E8 04                  117 	add	sp, #4
                                    118 ;func/turnRollDisplay.c:21: len = bcd2text(&rollBCD, 0x10, buf);
      000053 11r00r00               119 	ld	de, #_buf
      000056 D5                     120 	push	de
      000057 3E 10                  121 	ld	a, #0x10
      000059 F5                     122 	push	af
      00005A 33                     123 	inc	sp
      00005B 11r00r00               124 	ld	de, #_rollBCD
      00005E D5                     125 	push	de
      00005F CDr00r00               126 	call	_bcd2text
      000062 E8 05                  127 	add	sp, #5
      000064 21r00r00               128 	ld	hl, #_len
      000067 7B                     129 	ld	a, e
      000068 22                     130 	ld	(hl+), a
                                    131 ;func/turnRollDisplay.c:22: set_bkg_tiles(11, 5, len, 1, buf);
      000069 3E 00                  132 	ld	a, #0x00
      00006B 32                     133 	ld	(hl-), a
      00006C 01r00r00               134 	ld	bc, #_buf
      00006F 7E                     135 	ld	a, (hl)
      000070 C5                     136 	push	bc
      000071 26 01                  137 	ld	h, #0x01
                                    138 ;	spillPairReg hl
                                    139 ;	spillPairReg hl
      000073 E5                     140 	push	hl
      000074 33                     141 	inc	sp
      000075 67                     142 	ld	h, a
      000076 2E 05                  143 	ld	l, #0x05
      000078 E5                     144 	push	hl
      000079 3E 0B                  145 	ld	a, #0x0b
      00007B F5                     146 	push	af
      00007C 33                     147 	inc	sp
      00007D CDr00r00               148 	call	_set_bkg_tiles
      000080 E8 06                  149 	add	sp, #6
                                    150 ;func/turnRollDisplay.c:25: set_bkg_tile_xy(11, 5, 0x2C); // L
      000082 21 05 2C               151 	ld	hl, #0x2c05
      000085 E5                     152 	push	hl
      000086 3E 0B                  153 	ld	a, #0x0b
      000088 F5                     154 	push	af
      000089 33                     155 	inc	sp
      00008A CDr00r00               156 	call	_set_bkg_tile_xy
      00008D E8 03                  157 	add	sp, #3
                                    158 ;func/turnRollDisplay.c:26: set_bkg_tile_xy(12, 5, 0x45); // e
      00008F 21 05 45               159 	ld	hl, #0x4505
      000092 E5                     160 	push	hl
      000093 3E 0C                  161 	ld	a, #0x0c
      000095 F5                     162 	push	af
      000096 33                     163 	inc	sp
      000097 CDr00r00               164 	call	_set_bkg_tile_xy
      00009A E8 03                  165 	add	sp, #3
                                    166 ;func/turnRollDisplay.c:27: set_bkg_tile_xy(13, 5, 0x46); // f
      00009C 21 05 46               167 	ld	hl, #0x4605
      00009F E5                     168 	push	hl
      0000A0 3E 0D                  169 	ld	a, #0x0d
      0000A2 F5                     170 	push	af
      0000A3 33                     171 	inc	sp
      0000A4 CDr00r00               172 	call	_set_bkg_tile_xy
      0000A7 E8 03                  173 	add	sp, #3
                                    174 ;func/turnRollDisplay.c:28: set_bkg_tile_xy(14, 5, 0x54); // t
      0000A9 21 05 54               175 	ld	hl, #0x5405
      0000AC E5                     176 	push	hl
      0000AD 3E 0E                  177 	ld	a, #0x0e
      0000AF F5                     178 	push	af
      0000B0 33                     179 	inc	sp
      0000B1 CDr00r00               180 	call	_set_bkg_tile_xy
      0000B4 E8 03                  181 	add	sp, #3
                                    182 ;func/turnRollDisplay.c:29: set_bkg_tile_xy(15, 5, 0x1A); // :
      0000B6 21 05 1A               183 	ld	hl, #0x1a05
      0000B9 E5                     184 	push	hl
      0000BA 3E 0F                  185 	ld	a, #0x0f
      0000BC F5                     186 	push	af
      0000BD 33                     187 	inc	sp
      0000BE CDr00r00               188 	call	_set_bkg_tile_xy
      0000C1 E8 03                  189 	add	sp, #3
                                    190 ;func/turnRollDisplay.c:30: set_bkg_tile_xy(16, 5, 0x00); // blank
      0000C3 AF                     191 	xor	a, a
      0000C4 67                     192 	ld	h, a
      0000C5 2E 05                  193 	ld	l, #0x05
      0000C7 E5                     194 	push	hl
      0000C8 3E 10                  195 	ld	a, #0x10
      0000CA F5                     196 	push	af
      0000CB 33                     197 	inc	sp
      0000CC CDr00r00               198 	call	_set_bkg_tile_xy
      0000CF E8 03                  199 	add	sp, #3
                                    200 ;func/turnRollDisplay.c:31: set_bkg_tile_xy(17, 5, 0x00); // blank
      0000D1 AF                     201 	xor	a, a
      0000D2 67                     202 	ld	h, a
      0000D3 2E 05                  203 	ld	l, #0x05
      0000D5 E5                     204 	push	hl
      0000D6 3E 11                  205 	ld	a, #0x11
      0000D8 F5                     206 	push	af
      0000D9 33                     207 	inc	sp
      0000DA CDr00r00               208 	call	_set_bkg_tile_xy
      0000DD E8 03                  209 	add	sp, #3
                                    210 ;func/turnRollDisplay.c:33: }
      0000DF C9                     211 	ret
                                    212 ;func/turnRollDisplay.c:36: void turnDisplay(){
                                    213 ;	---------------------------------
                                    214 ; Function turnDisplay
                                    215 ; ---------------------------------
      0000E0                        216 _turnDisplay::
                                    217 ;func/turnRollDisplay.c:37: len = 0;
      0000E0 AF                     218 	xor	a, a
      0000E1 21r00r00               219 	ld	hl, #_len
      0000E4 22                     220 	ld	(hl+), a
      0000E5 77                     221 	ld	(hl), a
                                    222 ;func/turnRollDisplay.c:38: bcd_sub(&turnBCD, &turnBCD);
      0000E6 11r00r00               223 	ld	de, #_turnBCD
      0000E9 D5                     224 	push	de
      0000EA D5                     225 	push	de
      0000EB CDr00r00               226 	call	_bcd_sub
      0000EE E8 04                  227 	add	sp, #4
                                    228 ;func/turnRollDisplay.c:39: for(i = 0; i != 10; i++){
      0000F0 AF                     229 	xor	a, a
      0000F1 21r00r00               230 	ld	hl, #_i
      0000F4 22                     231 	ld	(hl+), a
      0000F5 77                     232 	ld	(hl), a
      0000F6                        233 00102$:
                                    234 ;func/turnRollDisplay.c:40: buf[i] = 0;
      0000F6 3Er00                  235 	ld	a, #<(_buf)
      0000F8 21r00r00               236 	ld	hl, #_i
      0000FB 86                     237 	add	a, (hl)
      0000FC 23                     238 	inc	hl
      0000FD 4F                     239 	ld	c, a
      0000FE 3Es00                  240 	ld	a, #>(_buf)
      000100 8E                     241 	adc	a, (hl)
                                    242 ;func/turnRollDisplay.c:39: for(i = 0; i != 10; i++){
      000101 2B                     243 	dec	hl
      000102 47                     244 	ld	b, a
      000103 AF                     245 	xor	a, a
      000104 02                     246 	ld	(bc), a
      000105 34                     247 	inc	(hl)
      000106 20 02                  248 	jr	NZ, 00116$
      000108 23                     249 	inc	hl
      000109 34                     250 	inc	(hl)
      00010A                        251 00116$:
      00010A 21r00r00               252 	ld	hl, #_i
      00010D 2A                     253 	ld	a, (hl+)
      00010E D6 0A                  254 	sub	a, #0x0a
      000110 B6                     255 	or	a, (hl)
      000111 20 E3                  256 	jr	NZ, 00102$
                                    257 ;func/turnRollDisplay.c:42: uint2bcd(turn, &turnBCD);
      000113 21r00r00               258 	ld	hl, #_turn
      000116 2A                     259 	ld	a, (hl+)
      000117 4F                     260 	ld	c, a
      000118 46                     261 	ld	b, (hl)
      000119 11r00r00               262 	ld	de, #_turnBCD
      00011C D5                     263 	push	de
      00011D C5                     264 	push	bc
      00011E CDr00r00               265 	call	_uint2bcd
      000121 E8 04                  266 	add	sp, #4
                                    267 ;func/turnRollDisplay.c:43: len = bcd2text(&turnBCD, 0x10, buf);
      000123 11r00r00               268 	ld	de, #_buf
      000126 D5                     269 	push	de
      000127 3E 10                  270 	ld	a, #0x10
      000129 F5                     271 	push	af
      00012A 33                     272 	inc	sp
      00012B 11r00r00               273 	ld	de, #_turnBCD
      00012E D5                     274 	push	de
      00012F CDr00r00               275 	call	_bcd2text
      000132 E8 05                  276 	add	sp, #5
      000134 21r00r00               277 	ld	hl, #_len
      000137 7B                     278 	ld	a, e
      000138 22                     279 	ld	(hl+), a
                                    280 ;func/turnRollDisplay.c:44: set_bkg_tiles(2, 5, len, 1, buf);
      000139 3E 00                  281 	ld	a, #0x00
      00013B 32                     282 	ld	(hl-), a
      00013C 7E                     283 	ld	a, (hl)
      00013D 11r00r00               284 	ld	de, #_buf
      000140 D5                     285 	push	de
      000141 26 01                  286 	ld	h, #0x01
                                    287 ;	spillPairReg hl
                                    288 ;	spillPairReg hl
      000143 E5                     289 	push	hl
      000144 33                     290 	inc	sp
      000145 67                     291 	ld	h, a
      000146 2E 05                  292 	ld	l, #0x05
      000148 E5                     293 	push	hl
      000149 3E 02                  294 	ld	a, #0x02
      00014B F5                     295 	push	af
      00014C 33                     296 	inc	sp
      00014D CDr00r00               297 	call	_set_bkg_tiles
      000150 E8 06                  298 	add	sp, #6
                                    299 ;func/turnRollDisplay.c:47: set_bkg_tile_xy(2, 5, 0x34); // T
      000152 21 05 34               300 	ld	hl, #0x3405
      000155 E5                     301 	push	hl
      000156 3E 02                  302 	ld	a, #0x02
      000158 F5                     303 	push	af
      000159 33                     304 	inc	sp
      00015A CDr00r00               305 	call	_set_bkg_tile_xy
      00015D E8 03                  306 	add	sp, #3
                                    307 ;func/turnRollDisplay.c:48: set_bkg_tile_xy(3, 5, 0x55); // u
      00015F 21 05 55               308 	ld	hl, #0x5505
      000162 E5                     309 	push	hl
      000163 3E 03                  310 	ld	a, #0x03
      000165 F5                     311 	push	af
      000166 33                     312 	inc	sp
      000167 CDr00r00               313 	call	_set_bkg_tile_xy
      00016A E8 03                  314 	add	sp, #3
                                    315 ;func/turnRollDisplay.c:49: set_bkg_tile_xy(4, 5, 0x52); // r
      00016C 21 05 52               316 	ld	hl, #0x5205
      00016F E5                     317 	push	hl
      000170 3E 04                  318 	ld	a, #0x04
      000172 F5                     319 	push	af
      000173 33                     320 	inc	sp
      000174 CDr00r00               321 	call	_set_bkg_tile_xy
      000177 E8 03                  322 	add	sp, #3
                                    323 ;func/turnRollDisplay.c:50: set_bkg_tile_xy(5, 5, 0x4E); // n
      000179 21 05 4E               324 	ld	hl, #0x4e05
      00017C E5                     325 	push	hl
      00017D 3E 05                  326 	ld	a, #0x05
      00017F F5                     327 	push	af
      000180 33                     328 	inc	sp
      000181 CDr00r00               329 	call	_set_bkg_tile_xy
      000184 E8 03                  330 	add	sp, #3
                                    331 ;func/turnRollDisplay.c:51: set_bkg_tile_xy(6, 5, 0x1A); // :
      000186 21 05 1A               332 	ld	hl, #0x1a05
      000189 E5                     333 	push	hl
      00018A 3E 06                  334 	ld	a, #0x06
      00018C F5                     335 	push	af
      00018D 33                     336 	inc	sp
      00018E CDr00r00               337 	call	_set_bkg_tile_xy
      000191 E8 03                  338 	add	sp, #3
                                    339 ;func/turnRollDisplay.c:52: set_bkg_tile_xy(7, 5, 0x00); // blank
      000193 AF                     340 	xor	a, a
      000194 67                     341 	ld	h, a
      000195 2E 05                  342 	ld	l, #0x05
      000197 E5                     343 	push	hl
      000198 3E 07                  344 	ld	a, #0x07
      00019A F5                     345 	push	af
      00019B 33                     346 	inc	sp
      00019C CDr00r00               347 	call	_set_bkg_tile_xy
      00019F E8 03                  348 	add	sp, #3
                                    349 ;func/turnRollDisplay.c:53: set_bkg_tile_xy(8, 5, 0x00); // blank
      0001A1 AF                     350 	xor	a, a
      0001A2 67                     351 	ld	h, a
      0001A3 2E 05                  352 	ld	l, #0x05
      0001A5 E5                     353 	push	hl
      0001A6 3E 08                  354 	ld	a, #0x08
      0001A8 F5                     355 	push	af
      0001A9 33                     356 	inc	sp
      0001AA CDr00r00               357 	call	_set_bkg_tile_xy
      0001AD E8 03                  358 	add	sp, #3
                                    359 ;func/turnRollDisplay.c:54: }
      0001AF C9                     360 	ret
                                    361 ;func/turnRollDisplay.c:57: void turnRollDisplay(){
                                    362 ;	---------------------------------
                                    363 ; Function turnRollDisplay
                                    364 ; ---------------------------------
      0001B0                        365 _turnRollDisplay::
                                    366 ;func/turnRollDisplay.c:58: rollDisplay();
      0001B0 CDr00r00               367 	call	_rollDisplay
                                    368 ;func/turnRollDisplay.c:59: turnDisplay();
      0001B3 CDrE0r00               369 	call	_turnDisplay
                                    370 ;func/turnRollDisplay.c:60: wait_vbl_done();
                                    371 ;func/turnRollDisplay.c:61: }
      0001B6 C3r00r00               372 	jp	_wait_vbl_done
                                    373 	.area _CODE
                                    374 	.area _INITIALIZER
                                    375 	.area _CABS (ABS)
