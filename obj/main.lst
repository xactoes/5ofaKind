                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _playCursor
                                     13 	.globl _playCursorSelect
                                     14 	.globl _playCursorB
                                     15 	.globl _playCursorA
                                     16 	.globl _rollCheck
                                     17 	.globl _toggleDi
                                     18 	.globl _playCursorRight
                                     19 	.globl _playCursorLeft
                                     20 	.globl _rollTracker
                                     21 	.globl _newTurn
                                     22 	.globl _initGame
                                     23 	.globl _initDi
                                     24 	.globl _moveDiceStruct
                                     25 	.globl _diceToRoll
                                     26 	.globl _setDiFace
                                     27 	.globl _setDiceValues
                                     28 	.globl _turnRollDisplay
                                     29 	.globl _spriteFlip
                                     30 	.globl _scoreDisplay
                                     31 	.globl _rollDi
                                     32 	.globl _cardView
                                     33 	.globl _cardCursor
                                     34 	.globl _betterDelay
                                     35 	.globl _printf
                                     36 	.globl _set_sprite_data
                                     37 	.globl _set_bkg_tiles
                                     38 	.globl _set_bkg_data
                                     39 	.globl _waitpadup
                                     40 	.globl _joypad
                                     41 ;--------------------------------------------------------
                                     42 ; special function registers
                                     43 ;--------------------------------------------------------
                                     44 ;--------------------------------------------------------
                                     45 ; ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _DATA
                                     48 ;--------------------------------------------------------
                                     49 ; ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area _INITIALIZED
                                     52 ;--------------------------------------------------------
                                     53 ; absolute external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area _DABS (ABS)
                                     56 ;--------------------------------------------------------
                                     57 ; global & static initialisations
                                     58 ;--------------------------------------------------------
                                     59 	.area _HOME
                                     60 	.area _GSINIT
                                     61 	.area _GSFINAL
                                     62 	.area _GSINIT
                                     63 ;--------------------------------------------------------
                                     64 ; Home
                                     65 ;--------------------------------------------------------
                                     66 	.area _HOME
                                     67 	.area _HOME
                                     68 ;--------------------------------------------------------
                                     69 ; code
                                     70 ;--------------------------------------------------------
                                     71 	.area _CODE
                                     72 ;src/main.c:29: void setDiceValues(){
                                     73 ;	---------------------------------
                                     74 ; Function setDiceValues
                                     75 ; ---------------------------------
      000000                         76 _setDiceValues::
                                     77 ;src/main.c:30: diceValues[0] = Di1.face;
      000000 21r0Er00                78 	ld	hl, #(_Di1 + 14)
      000003 2A                      79 	ld	a, (hl+)
      000004 4F                      80 	ld	c, a
      000005 46                      81 	ld	b, (hl)
      000006 21r00r00                82 	ld	hl, #_diceValues
      000009 79                      83 	ld	a, c
      00000A 22                      84 	ld	(hl+), a
      00000B 70                      85 	ld	(hl), b
                                     86 ;src/main.c:31: diceValues[1] = Di2.face;
      00000C 21r0Er00                87 	ld	hl, #(_Di2 + 14)
      00000F 2A                      88 	ld	a, (hl+)
      000010 4F                      89 	ld	c, a
      000011 46                      90 	ld	b, (hl)
      000012 21r02r00                91 	ld	hl, #(_diceValues + 2)
      000015 79                      92 	ld	a, c
      000016 22                      93 	ld	(hl+), a
      000017 70                      94 	ld	(hl), b
                                     95 ;src/main.c:32: diceValues[2] = Di3.face;
      000018 21r0Er00                96 	ld	hl, #(_Di3 + 14)
      00001B 2A                      97 	ld	a, (hl+)
      00001C 4F                      98 	ld	c, a
      00001D 46                      99 	ld	b, (hl)
      00001E 21r04r00               100 	ld	hl, #(_diceValues + 4)
      000021 79                     101 	ld	a, c
      000022 22                     102 	ld	(hl+), a
      000023 70                     103 	ld	(hl), b
                                    104 ;src/main.c:33: diceValues[3] = Di4.face;
      000024 21r0Er00               105 	ld	hl, #(_Di4 + 14)
      000027 2A                     106 	ld	a, (hl+)
      000028 4F                     107 	ld	c, a
      000029 46                     108 	ld	b, (hl)
      00002A 21r06r00               109 	ld	hl, #(_diceValues + 6)
      00002D 79                     110 	ld	a, c
      00002E 22                     111 	ld	(hl+), a
      00002F 70                     112 	ld	(hl), b
                                    113 ;src/main.c:34: diceValues[4] = Di5.face;
      000030 21r0Er00               114 	ld	hl, #(_Di5 + 14)
      000033 2A                     115 	ld	a, (hl+)
      000034 4F                     116 	ld	c, a
      000035 46                     117 	ld	b, (hl)
      000036 21r08r00               118 	ld	hl, #(_diceValues + 8)
      000039 79                     119 	ld	a, c
      00003A 22                     120 	ld	(hl+), a
      00003B 70                     121 	ld	(hl), b
                                    122 ;src/main.c:35: }
      00003C C9                     123 	ret
                                    124 ;src/main.c:38: void setDiFace(struct DiceStruct * diSprite){
                                    125 ;	---------------------------------
                                    126 ; Function setDiFace
                                    127 ; ---------------------------------
      00003D                        128 _setDiFace::
      00003D 3B                     129 	dec	sp
                                    130 ;src/main.c:39: rollDi();
      00003E CDr00r00               131 	call	_rollDi
                                    132 ;src/main.c:40: for(i = 0; i != 4; i++){
      000041 AF                     133 	xor	a, a
      000042 21r00r00               134 	ld	hl, #_i
      000045 22                     135 	ld	(hl+), a
      000046 77                     136 	ld	(hl), a
      000047 F8 03                  137 	ldhl	sp,	#3
      000049 2A                     138 	ld	a, (hl+)
      00004A 4F                     139 	ld	c, a
      00004B 46                     140 	ld	b, (hl)
      00004C                        141 00103$:
                                    142 ;src/main.c:41: set_sprite_tile(diSprite->spriteID[i], currentFace[i]);
      00004C 21r00r00               143 	ld	hl, #_i
      00004F 2A                     144 	ld	a, (hl+)
      000050 5F                     145 	ld	e, a
      000051 56                     146 	ld	d, (hl)
      000052 CB 23                  147 	sla	e
      000054 CB 12                  148 	rl	d
      000056 21r00r00               149 	ld	hl, #_currentFace
      000059 19                     150 	add	hl, de
      00005A 7E                     151 	ld	a, (hl)
      00005B F8 00                  152 	ldhl	sp,	#0
      00005D 77                     153 	ld	(hl), a
      00005E 6B                     154 	ld	l, e
      00005F 62                     155 	ld	h, d
      000060 09                     156 	add	hl, bc
                                    157 ;/opt/gbdk/include/gb/gb.h:1326: shadow_OAM[nb].tile=tile;
      000061 6E                     158 	ld	l, (hl)
                                    159 ;	spillPairReg hl
                                    160 ;	spillPairReg hl
      000062 26 00                  161 	ld	h, #0x00
                                    162 ;	spillPairReg hl
                                    163 ;	spillPairReg hl
      000064 29                     164 	add	hl, hl
      000065 29                     165 	add	hl, hl
      000066 11r00r00               166 	ld	de, #_shadow_OAM
      000069 19                     167 	add	hl, de
      00006A 23                     168 	inc	hl
      00006B 23                     169 	inc	hl
      00006C 5D                     170 	ld	e, l
      00006D 54                     171 	ld	d, h
      00006E F8 00                  172 	ldhl	sp,	#0
      000070 7E                     173 	ld	a, (hl)
      000071 12                     174 	ld	(de), a
                                    175 ;src/main.c:40: for(i = 0; i != 4; i++){
      000072 21r00r00               176 	ld	hl, #_i
      000075 34                     177 	inc	(hl)
      000076 20 02                  178 	jr	NZ, 00118$
      000078 23                     179 	inc	hl
      000079 34                     180 	inc	(hl)
      00007A                        181 00118$:
      00007A 21r00r00               182 	ld	hl, #_i
      00007D 2A                     183 	ld	a, (hl+)
      00007E D6 04                  184 	sub	a, #0x04
      000080 B6                     185 	or	a, (hl)
      000081 20 C9                  186 	jr	NZ, 00103$
                                    187 ;src/main.c:43: diSprite->face = diFaceBuf;
      000083 21 0E 00               188 	ld	hl, #0x000e
      000086 09                     189 	add	hl, bc
      000087 4D                     190 	ld	c, l
      000088 44                     191 	ld	b, h
      000089 21r00r00               192 	ld	hl, #_diFaceBuf
      00008C 2A                     193 	ld	a, (hl+)
      00008D 02                     194 	ld	(bc), a
      00008E 03                     195 	inc	bc
      00008F 7E                     196 	ld	a, (hl)
      000090 02                     197 	ld	(bc), a
                                    198 ;src/main.c:44: setDiceValues();
      000091 33                     199 	inc	sp
      000092 C3r00r00               200 	jp	_setDiceValues
                                    201 ;src/main.c:45: }
      000095 33                     202 	inc	sp
      000096 C9                     203 	ret
                                    204 ;src/main.c:48: void diceToRoll(){
                                    205 ;	---------------------------------
                                    206 ; Function diceToRoll
                                    207 ; ---------------------------------
      000097                        208 _diceToRoll::
                                    209 ;src/main.c:49: if(rollsLeft > 0){
      000097 21r01r00               210 	ld	hl, #_rollsLeft + 1
      00009A 3A                     211 	ld	a, (hl-)
      00009B B6                     212 	or	a, (hl)
      00009C C8                     213 	ret	Z
                                    214 ;src/main.c:50: rollsLeft -= 1;
      00009D 2A                     215 	ld	a, (hl+)
      00009E 5F                     216 	ld	e, a
      00009F 3A                     217 	ld	a, (hl-)
      0000A0 57                     218 	ld	d, a
      0000A1 1B                     219 	dec	de
      0000A2 7B                     220 	ld	a, e
      0000A3 22                     221 	ld	(hl+), a
      0000A4 72                     222 	ld	(hl), d
                                    223 ;src/main.c:51: for(j = 0; j != 5; j++){
      0000A5 AF                     224 	xor	a, a
      0000A6 21r00r00               225 	ld	hl, #_j
      0000A9 22                     226 	ld	(hl+), a
      0000AA 77                     227 	ld	(hl), a
      0000AB                        228 00128$:
                                    229 ;src/main.c:52: betterDelay(6);
      0000AB 11 06 00               230 	ld	de, #0x0006
      0000AE D5                     231 	push	de
      0000AF CDr00r00               232 	call	_betterDelay
      0000B2 E1                     233 	pop	hl
                                    234 ;src/main.c:53: if(j == 0){
      0000B3 21r01r00               235 	ld	hl, #_j + 1
      0000B6 3A                     236 	ld	a, (hl-)
      0000B7 B6                     237 	or	a, (hl)
      0000B8 20 10                  238 	jr	NZ, 00123$
                                    239 ;src/main.c:54: if(Di1.inPlay == 1){
      0000BA FAr10r00               240 	ld	a, (#(_Di1 + 16) + 0)
      0000BD 3D                     241 	dec	a
      0000BE 20 6B                  242 	jr	NZ, 00129$
                                    243 ;src/main.c:55: setDiFace(&Di1);
      0000C0 11r00r00               244 	ld	de, #_Di1
      0000C3 D5                     245 	push	de
      0000C4 CDr3Dr00               246 	call	_setDiFace
      0000C7 E1                     247 	pop	hl
      0000C8 18 61                  248 	jr	00129$
      0000CA                        249 00123$:
                                    250 ;src/main.c:59: else if(j == 1){
      0000CA 21r00r00               251 	ld	hl, #_j
      0000CD 2A                     252 	ld	a, (hl+)
      0000CE 3D                     253 	dec	a
      0000CF B6                     254 	or	a, (hl)
      0000D0 20 10                  255 	jr	NZ, 00120$
                                    256 ;src/main.c:60: if(Di2.inPlay == 1){
      0000D2 FAr10r00               257 	ld	a, (#(_Di2 + 16) + 0)
      0000D5 3D                     258 	dec	a
      0000D6 20 53                  259 	jr	NZ, 00129$
                                    260 ;src/main.c:61: setDiFace(&Di2);
      0000D8 11r00r00               261 	ld	de, #_Di2
      0000DB D5                     262 	push	de
      0000DC CDr3Dr00               263 	call	_setDiFace
      0000DF E1                     264 	pop	hl
      0000E0 18 49                  265 	jr	00129$
      0000E2                        266 00120$:
                                    267 ;src/main.c:65: else if(j == 2){
      0000E2 21r00r00               268 	ld	hl, #_j
      0000E5 2A                     269 	ld	a, (hl+)
      0000E6 D6 02                  270 	sub	a, #0x02
      0000E8 B6                     271 	or	a, (hl)
      0000E9 20 10                  272 	jr	NZ, 00117$
                                    273 ;src/main.c:66: if(Di3.inPlay == 1){
      0000EB FAr10r00               274 	ld	a, (#(_Di3 + 16) + 0)
      0000EE 3D                     275 	dec	a
      0000EF 20 3A                  276 	jr	NZ, 00129$
                                    277 ;src/main.c:67: setDiFace(&Di3);
      0000F1 11r00r00               278 	ld	de, #_Di3
      0000F4 D5                     279 	push	de
      0000F5 CDr3Dr00               280 	call	_setDiFace
      0000F8 E1                     281 	pop	hl
      0000F9 18 30                  282 	jr	00129$
      0000FB                        283 00117$:
                                    284 ;src/main.c:71: else if(j == 3){
      0000FB 21r00r00               285 	ld	hl, #_j
      0000FE 2A                     286 	ld	a, (hl+)
      0000FF D6 03                  287 	sub	a, #0x03
      000101 B6                     288 	or	a, (hl)
      000102 20 10                  289 	jr	NZ, 00114$
                                    290 ;src/main.c:72: if(Di4.inPlay == 1){
      000104 FAr10r00               291 	ld	a, (#(_Di4 + 16) + 0)
      000107 3D                     292 	dec	a
      000108 20 21                  293 	jr	NZ, 00129$
                                    294 ;src/main.c:73: setDiFace(&Di4);
      00010A 11r00r00               295 	ld	de, #_Di4
      00010D D5                     296 	push	de
      00010E CDr3Dr00               297 	call	_setDiFace
      000111 E1                     298 	pop	hl
      000112 18 17                  299 	jr	00129$
      000114                        300 00114$:
                                    301 ;src/main.c:77: else if(j == 4){
      000114 21r00r00               302 	ld	hl, #_j
      000117 2A                     303 	ld	a, (hl+)
      000118 D6 04                  304 	sub	a, #0x04
      00011A B6                     305 	or	a, (hl)
      00011B 20 0E                  306 	jr	NZ, 00129$
                                    307 ;src/main.c:78: if(Di5.inPlay == 1){
      00011D FAr10r00               308 	ld	a, (#(_Di5 + 16) + 0)
      000120 3D                     309 	dec	a
      000121 20 08                  310 	jr	NZ, 00129$
                                    311 ;src/main.c:79: setDiFace(&Di5);
      000123 11r00r00               312 	ld	de, #_Di5
      000126 D5                     313 	push	de
      000127 CDr3Dr00               314 	call	_setDiFace
      00012A E1                     315 	pop	hl
      00012B                        316 00129$:
                                    317 ;src/main.c:51: for(j = 0; j != 5; j++){
      00012B 21r00r00               318 	ld	hl, #_j
      00012E 34                     319 	inc	(hl)
      00012F 20 02                  320 	jr	NZ, 00210$
      000131 23                     321 	inc	hl
      000132 34                     322 	inc	(hl)
      000133                        323 00210$:
      000133 21r00r00               324 	ld	hl, #_j
      000136 2A                     325 	ld	a, (hl+)
      000137 D6 05                  326 	sub	a, #0x05
      000139 B6                     327 	or	a, (hl)
      00013A C2rABr00               328 	jp	NZ,00128$
                                    329 ;src/main.c:85: }
      00013D C9                     330 	ret
                                    331 ;src/main.c:88: void moveDiceStruct(struct DiceStruct * diSprite, unsigned int x, unsigned int y){
                                    332 ;	---------------------------------
                                    333 ; Function moveDiceStruct
                                    334 ; ---------------------------------
      00013E                        335 _moveDiceStruct::
      00013E E8 FA                  336 	add	sp, #-6
                                    337 ;src/main.c:89: move_sprite(diSprite->spriteID[0], x, y);
      000140 F8 0C                  338 	ldhl	sp,	#12
      000142 7E                     339 	ld	a, (hl)
      000143 F8 00                  340 	ldhl	sp,	#0
      000145 77                     341 	ld	(hl), a
      000146 2A                     342 	ld	a, (hl+)
      000147 77                     343 	ld	(hl), a
      000148 F8 0A                  344 	ldhl	sp,	#10
      00014A 7E                     345 	ld	a, (hl)
      00014B F8 02                  346 	ldhl	sp,	#2
      00014D 77                     347 	ld	(hl), a
      00014E 2A                     348 	ld	a, (hl+)
      00014F 77                     349 	ld	(hl), a
      000150 F8 08                  350 	ldhl	sp,	#8
      000152 7E                     351 	ld	a, (hl)
      000153 F8 04                  352 	ldhl	sp,	#4
      000155 77                     353 	ld	(hl), a
      000156 F8 09                  354 	ldhl	sp,	#9
      000158 7E                     355 	ld	a, (hl)
      000159 F8 05                  356 	ldhl	sp,	#5
      00015B 32                     357 	ld	(hl-), a
      00015C 2A                     358 	ld	a, (hl+)
      00015D 5F                     359 	ld	e, a
      00015E 56                     360 	ld	d, (hl)
      00015F 1A                     361 	ld	a, (de)
                                    362 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000160 6F                     363 	ld	l, a
      000161 11r00r00               364 	ld	de, #_shadow_OAM+0
                                    365 ;	spillPairReg hl
                                    366 ;	spillPairReg hl
      000164 26 00                  367 	ld	h, #0x00
                                    368 ;	spillPairReg hl
                                    369 ;	spillPairReg hl
      000166 29                     370 	add	hl, hl
      000167 29                     371 	add	hl, hl
      000168 19                     372 	add	hl, de
      000169 4D                     373 	ld	c, l
      00016A 44                     374 	ld	b, h
                                    375 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00016B F8 01                  376 	ldhl	sp,	#1
      00016D 2A                     377 	ld	a, (hl+)
      00016E 23                     378 	inc	hl
      00016F 02                     379 	ld	(bc), a
      000170 03                     380 	inc	bc
                                    381 ;src/main.c:90: move_sprite(diSprite->spriteID[1], x + 8, y);
      000171 3A                     382 	ld	a, (hl-)
      000172 02                     383 	ld	(bc), a
      000173 2A                     384 	ld	a, (hl+)
      000174 23                     385 	inc	hl
      000175 C6 08                  386 	add	a, #0x08
      000177 4F                     387 	ld	c, a
      000178 41                     388 	ld	b, c
      000179 2A                     389 	ld	a, (hl+)
      00017A 5F                     390 	ld	e, a
      00017B 56                     391 	ld	d, (hl)
      00017C 13                     392 	inc	de
      00017D 13                     393 	inc	de
      00017E 1A                     394 	ld	a, (de)
                                    395 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00017F 6F                     396 	ld	l, a
                                    397 ;	spillPairReg hl
                                    398 ;	spillPairReg hl
      000180 26 00                  399 	ld	h, #0x00
                                    400 ;	spillPairReg hl
                                    401 ;	spillPairReg hl
      000182 29                     402 	add	hl, hl
      000183 29                     403 	add	hl, hl
      000184 11r00r00               404 	ld	de, #_shadow_OAM
      000187 19                     405 	add	hl, de
      000188 5D                     406 	ld	e, l
      000189 54                     407 	ld	d, h
                                    408 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00018A F8 00                  409 	ldhl	sp,	#0
      00018C 7E                     410 	ld	a, (hl)
      00018D 12                     411 	ld	(de), a
      00018E 13                     412 	inc	de
      00018F 78                     413 	ld	a, b
      000190 12                     414 	ld	(de), a
                                    415 ;src/main.c:91: move_sprite(diSprite->spriteID[2], x, y + 8);
      000191 7E                     416 	ld	a, (hl)
      000192 C6 08                  417 	add	a, #0x08
      000194 47                     418 	ld	b, a
      000195 F8 03                  419 	ldhl	sp,	#3
      000197 78                     420 	ld	a, b
      000198 22                     421 	ld	(hl+), a
      000199 2A                     422 	ld	a, (hl+)
      00019A 5F                     423 	ld	e, a
      00019B 56                     424 	ld	d, (hl)
      00019C 21 04 00               425 	ld	hl, #0x0004
      00019F 19                     426 	add	hl, de
      0001A0 5D                     427 	ld	e, l
      0001A1 54                     428 	ld	d, h
      0001A2 1A                     429 	ld	a, (de)
                                    430 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0001A3 6F                     431 	ld	l, a
                                    432 ;	spillPairReg hl
                                    433 ;	spillPairReg hl
      0001A4 26 00                  434 	ld	h, #0x00
                                    435 ;	spillPairReg hl
                                    436 ;	spillPairReg hl
      0001A6 29                     437 	add	hl, hl
      0001A7 29                     438 	add	hl, hl
      0001A8 11r00r00               439 	ld	de, #_shadow_OAM
      0001AB 19                     440 	add	hl, de
      0001AC 5D                     441 	ld	e, l
      0001AD 54                     442 	ld	d, h
                                    443 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0001AE F8 03                  444 	ldhl	sp,	#3
      0001B0 3A                     445 	ld	a, (hl-)
      0001B1 12                     446 	ld	(de), a
      0001B2 13                     447 	inc	de
      0001B3 7E                     448 	ld	a, (hl)
      0001B4 12                     449 	ld	(de), a
                                    450 ;src/main.c:92: move_sprite(diSprite->spriteID[3], x + 8, y + 8);
      0001B5 F8 04                  451 	ldhl	sp,#4
      0001B7 2A                     452 	ld	a, (hl+)
      0001B8 5F                     453 	ld	e, a
      0001B9 56                     454 	ld	d, (hl)
      0001BA 21 06 00               455 	ld	hl, #0x0006
      0001BD 19                     456 	add	hl, de
      0001BE 5D                     457 	ld	e, l
      0001BF 54                     458 	ld	d, h
      0001C0 1A                     459 	ld	a, (de)
                                    460 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0001C1 6F                     461 	ld	l, a
                                    462 ;	spillPairReg hl
                                    463 ;	spillPairReg hl
      0001C2 26 00                  464 	ld	h, #0x00
                                    465 ;	spillPairReg hl
                                    466 ;	spillPairReg hl
      0001C4 29                     467 	add	hl, hl
      0001C5 29                     468 	add	hl, hl
      0001C6 11r00r00               469 	ld	de, #_shadow_OAM
      0001C9 19                     470 	add	hl, de
                                    471 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0001CA 78                     472 	ld	a, b
      0001CB 22                     473 	ld	(hl+), a
      0001CC 71                     474 	ld	(hl), c
                                    475 ;src/main.c:92: move_sprite(diSprite->spriteID[3], x + 8, y + 8);
                                    476 ;src/main.c:93: }
      0001CD E8 06                  477 	add	sp, #6
      0001CF C9                     478 	ret
                                    479 ;src/main.c:97: void initDi(struct DiceStruct * diSprite, unsigned int spot){
                                    480 ;	---------------------------------
                                    481 ; Function initDi
                                    482 ; ---------------------------------
      0001D0                        483 _initDi::
      0001D0 E8 F6                  484 	add	sp, #-10
                                    485 ;src/main.c:98: for(i = 0; i != 4; i++){
      0001D2 AF                     486 	xor	a, a
      0001D3 21r00r00               487 	ld	hl, #_i
      0001D6 22                     488 	ld	(hl+), a
      0001D7 77                     489 	ld	(hl), a
      0001D8 F8 0C                  490 	ldhl	sp,	#12
      0001DA 7E                     491 	ld	a, (hl)
      0001DB F8 00                  492 	ldhl	sp,	#0
      0001DD 77                     493 	ld	(hl), a
      0001DE F8 0D                  494 	ldhl	sp,	#13
      0001E0 7E                     495 	ld	a, (hl)
      0001E1 F8 01                  496 	ldhl	sp,	#1
      0001E3 77                     497 	ld	(hl), a
      0001E4 F8 0E                  498 	ldhl	sp,#14
      0001E6 2A                     499 	ld	a, (hl+)
      0001E7 5F                     500 	ld	e, a
      0001E8 56                     501 	ld	d, (hl)
      0001E9 21 01 00               502 	ld	hl, #0x0001
      0001EC 7B                     503 	ld	a, e
      0001ED 95                     504 	sub	a, l
      0001EE 5F                     505 	ld	e, a
      0001EF 7A                     506 	ld	a, d
      0001F0 9C                     507 	sbc	a, h
      0001F1 F8 03                  508 	ldhl	sp,	#3
      0001F3 32                     509 	ld	(hl-), a
      0001F4 73                     510 	ld	(hl), e
      0001F5 2A                     511 	ld	a, (hl+)
      0001F6 23                     512 	inc	hl
      0001F7 32                     513 	ld	(hl-), a
      0001F8 2A                     514 	ld	a, (hl+)
      0001F9 23                     515 	inc	hl
      0001FA 77                     516 	ld	(hl), a
      0001FB 3E 02                  517 	ld	a, #0x02
      0001FD                        518 00116$:
      0001FD F8 04                  519 	ldhl	sp,	#4
      0001FF CB 26                  520 	sla	(hl)
      000201 23                     521 	inc	hl
      000202 CB 16                  522 	rl	(hl)
      000204 3D                     523 	dec	a
      000205 20 F6                  524 	jr	NZ, 00116$
      000207                        525 00102$:
                                    526 ;src/main.c:102: diSprite->position = spot;
      000207 D1                     527 	pop	de
      000208 D5                     528 	push	de
      000209 21 0C 00               529 	ld	hl, #0x000c
      00020C 19                     530 	add	hl, de
      00020D 4D                     531 	ld	c, l
      00020E 44                     532 	ld	b, h
      00020F F8 0E                  533 	ldhl	sp,	#14
      000211 2A                     534 	ld	a, (hl+)
      000212 02                     535 	ld	(bc), a
      000213 03                     536 	inc	bc
      000214 7E                     537 	ld	a, (hl)
      000215 02                     538 	ld	(bc), a
                                    539 ;src/main.c:105: spriteNumber = (4 * (spot - 1) ) + i;
      000216 F8 04                  540 	ldhl	sp,#4
      000218 2A                     541 	ld	a, (hl+)
      000219 5F                     542 	ld	e, a
      00021A 56                     543 	ld	d, (hl)
      00021B 21r00r00               544 	ld	hl, #_i
      00021E 2A                     545 	ld	a,	(hl+)
      00021F 66                     546 	ld	h, (hl)
      000220 6F                     547 	ld	l, a
      000221 19                     548 	add	hl, de
      000222 4D                     549 	ld	c, l
      000223 44                     550 	ld	b, h
                                    551 ;src/main.c:108: diSprite->spriteID[i] = spriteNumber;
      000224 21r00r00               552 	ld	hl, #_i
      000227 2A                     553 	ld	a, (hl+)
      000228 56                     554 	ld	d, (hl)
      000229 87                     555 	add	a, a
      00022A CB 12                  556 	rl	d
      00022C 5F                     557 	ld	e, a
      00022D E1                     558 	pop	hl
      00022E E5                     559 	push	hl
      00022F 19                     560 	add	hl, de
      000230 5D                     561 	ld	e, l
      000231 54                     562 	ld	d, h
      000232 79                     563 	ld	a, c
      000233 12                     564 	ld	(de), a
      000234 13                     565 	inc	de
      000235 78                     566 	ld	a, b
      000236 12                     567 	ld	(de), a
                                    568 ;src/main.c:111: diSprite->x = diStartPosition[0] + ( (diSprite->position - 1) * diSpacing);
      000237 D1                     569 	pop	de
      000238 D5                     570 	push	de
      000239 21 08 00               571 	ld	hl, #0x0008
      00023C 19                     572 	add	hl, de
      00023D E5                     573 	push	hl
      00023E 7D                     574 	ld	a, l
      00023F F8 08                  575 	ldhl	sp,	#8
      000241 77                     576 	ld	(hl), a
      000242 E1                     577 	pop	hl
      000243 7C                     578 	ld	a, h
      000244 F8 07                  579 	ldhl	sp,	#7
      000246 77                     580 	ld	(hl), a
      000247 21r00r00               581 	ld	hl, #_diStartPosition
      00024A 2A                     582 	ld	a, (hl+)
      00024B 4F                     583 	ld	c, a
      00024C 46                     584 	ld	b, (hl)
      00024D 21r00r00               585 	ld	hl, #_diSpacing
      000250 2A                     586 	ld	a, (hl+)
      000251 5F                     587 	ld	e, a
      000252 56                     588 	ld	d, (hl)
      000253 C5                     589 	push	bc
      000254 D5                     590 	push	de
      000255 F8 06                  591 	ldhl	sp,	#6
      000257 2A                     592 	ld	a, (hl+)
      000258 5F                     593 	ld	e, a
      000259 56                     594 	ld	d, (hl)
      00025A D5                     595 	push	de
      00025B CDr00r00               596 	call	__mulint
      00025E E8 04                  597 	add	sp, #4
      000260 6B                     598 	ld	l, e
                                    599 ;	spillPairReg hl
                                    600 ;	spillPairReg hl
      000261 62                     601 	ld	h, d
                                    602 ;	spillPairReg hl
                                    603 ;	spillPairReg hl
      000262 C1                     604 	pop	bc
      000263 09                     605 	add	hl, bc
      000264 4D                     606 	ld	c, l
      000265 44                     607 	ld	b, h
      000266 F8 06                  608 	ldhl	sp,	#6
      000268 2A                     609 	ld	a,	(hl+)
      000269 66                     610 	ld	h, (hl)
      00026A 6F                     611 	ld	l, a
      00026B 79                     612 	ld	a, c
      00026C 22                     613 	ld	(hl+), a
      00026D 70                     614 	ld	(hl), b
                                    615 ;src/main.c:112: diSprite->y = diStartPosition[1];
      00026E D1                     616 	pop	de
      00026F D5                     617 	push	de
      000270 21 0A 00               618 	ld	hl, #0x000a
      000273 19                     619 	add	hl, de
      000274 4D                     620 	ld	c, l
      000275 44                     621 	ld	b, h
      000276 11r02r00               622 	ld	de, #(_diStartPosition + 2)
      000279 1A                     623 	ld	a, (de)
      00027A F8 08                  624 	ldhl	sp,	#8
      00027C 22                     625 	ld	(hl+), a
      00027D 13                     626 	inc	de
      00027E 1A                     627 	ld	a, (de)
      00027F 32                     628 	ld	(hl-), a
      000280 59                     629 	ld	e, c
      000281 50                     630 	ld	d, b
      000282 2A                     631 	ld	a, (hl+)
      000283 12                     632 	ld	(de), a
      000284 13                     633 	inc	de
      000285 7E                     634 	ld	a, (hl)
      000286 12                     635 	ld	(de), a
                                    636 ;src/main.c:98: for(i = 0; i != 4; i++){
      000287 21r00r00               637 	ld	hl, #_i
      00028A 34                     638 	inc	(hl)
      00028B 20 02                  639 	jr	NZ, 00118$
      00028D 23                     640 	inc	hl
      00028E 34                     641 	inc	(hl)
      00028F                        642 00118$:
      00028F 21r00r00               643 	ld	hl, #_i
      000292 2A                     644 	ld	a, (hl+)
      000293 D6 04                  645 	sub	a, #0x04
      000295 B6                     646 	or	a, (hl)
      000296 C2r07r02               647 	jp	NZ,00102$
                                    648 ;src/main.c:115: diSprite->inPlay = 1;
      000299 D1                     649 	pop	de
      00029A D5                     650 	push	de
      00029B 21 10 00               651 	ld	hl, #0x0010
      00029E 19                     652 	add	hl, de
      00029F 36 01                  653 	ld	(hl), #0x01
                                    654 ;src/main.c:118: moveDiceStruct(diSprite, diSprite->x, diSprite->y);
      0002A1 69                     655 	ld	l, c
      0002A2 60                     656 	ld	h, b
      0002A3 2A                     657 	ld	a, (hl+)
      0002A4 4F                     658 	ld	c, a
      0002A5 46                     659 	ld	b, (hl)
      0002A6 F8 06                  660 	ldhl	sp,#6
      0002A8 2A                     661 	ld	a, (hl+)
      0002A9 5F                     662 	ld	e, a
      0002AA 56                     663 	ld	d, (hl)
      0002AB 1A                     664 	ld	a, (de)
      0002AC 6F                     665 	ld	l, a
                                    666 ;	spillPairReg hl
                                    667 ;	spillPairReg hl
      0002AD 13                     668 	inc	de
      0002AE 1A                     669 	ld	a, (de)
      0002AF 67                     670 	ld	h, a
                                    671 ;	spillPairReg hl
                                    672 ;	spillPairReg hl
      0002B0 C5                     673 	push	bc
      0002B1 E5                     674 	push	hl
      0002B2 F8 04                  675 	ldhl	sp,	#4
      0002B4 2A                     676 	ld	a, (hl+)
      0002B5 5F                     677 	ld	e, a
      0002B6 56                     678 	ld	d, (hl)
      0002B7 D5                     679 	push	de
      0002B8 CDr3Er01               680 	call	_moveDiceStruct
      0002BB E8 06                  681 	add	sp, #6
                                    682 ;src/main.c:121: setDiFace(diSprite);
      0002BD F8 0C                  683 	ldhl	sp,	#12
      0002BF 2A                     684 	ld	a, (hl+)
      0002C0 5F                     685 	ld	e, a
      0002C1 56                     686 	ld	d, (hl)
      0002C2 D5                     687 	push	de
      0002C3 CDr3Dr00               688 	call	_setDiFace
      0002C6 E1                     689 	pop	hl
                                    690 ;src/main.c:122: }
      0002C7 E8 0A                  691 	add	sp, #10
      0002C9 C9                     692 	ret
                                    693 ;src/main.c:125: void initGame(){
                                    694 ;	---------------------------------
                                    695 ; Function initGame
                                    696 ; ---------------------------------
      0002CA                        697 _initGame::
                                    698 ;src/main.c:126: set_sprite_data(0, 6, Sprites);
      0002CA 11r00r00               699 	ld	de, #_Sprites
      0002CD D5                     700 	push	de
      0002CE 21 00 06               701 	ld	hl, #0x600
      0002D1 E5                     702 	push	hl
      0002D2 CDr00r00               703 	call	_set_sprite_data
      0002D5 E8 04                  704 	add	sp, #4
                                    705 ;src/main.c:127: set_sprite_tile(cursor, 5);
      0002D7 21r00r00               706 	ld	hl, #_cursor
      0002DA 2A                     707 	ld	a, (hl+)
      0002DB 5F                     708 	ld	e, a
      0002DC 7E                     709 	ld	a, (hl)
                                    710 ;/opt/gbdk/include/gb/gb.h:1326: shadow_OAM[nb].tile=tile;
      0002DD 01r00r00               711 	ld	bc, #_shadow_OAM+0
      0002E0 6B                     712 	ld	l, e
                                    713 ;	spillPairReg hl
                                    714 ;	spillPairReg hl
      0002E1 26 00                  715 	ld	h, #0x00
                                    716 ;	spillPairReg hl
                                    717 ;	spillPairReg hl
      0002E3 29                     718 	add	hl, hl
      0002E4 29                     719 	add	hl, hl
      0002E5 09                     720 	add	hl, bc
      0002E6 23                     721 	inc	hl
      0002E7 23                     722 	inc	hl
      0002E8 36 05                  723 	ld	(hl), #0x05
                                    724 ;src/main.c:128: set_bkg_data(0, 128, backgroundData);
      0002EA 11r00r00               725 	ld	de, #_backgroundData
      0002ED D5                     726 	push	de
      0002EE 21 00 80               727 	ld	hl, #0x8000
      0002F1 E5                     728 	push	hl
      0002F2 CDr00r00               729 	call	_set_bkg_data
      0002F5 E8 04                  730 	add	sp, #4
                                    731 ;src/main.c:129: set_bkg_tiles(0, 0, 20, 32, backgroundMap);
      0002F7 11r00r00               732 	ld	de, #_backgroundMap
      0002FA D5                     733 	push	de
      0002FB 21 14 20               734 	ld	hl, #0x2014
      0002FE E5                     735 	push	hl
      0002FF AF                     736 	xor	a, a
      000300 0F                     737 	rrca
      000301 F5                     738 	push	af
      000302 CDr00r00               739 	call	_set_bkg_tiles
      000305 E8 06                  740 	add	sp, #6
                                    741 ;src/main.c:130: viewMode = 0;
      000307 21r00r00               742 	ld	hl, #_viewMode
      00030A 36 00                  743 	ld	(hl), #0x00
                                    744 ;src/main.c:132: SHOW_BKG;
      00030C F0r00                  745 	ldh	a, (_LCDC_REG + 0)
      00030E F6 01                  746 	or	a, #0x01
      000310 E0r00                  747 	ldh	(_LCDC_REG + 0), a
                                    748 ;src/main.c:134: initDi(&Di1, 1);
      000312 11 01 00               749 	ld	de, #0x0001
      000315 D5                     750 	push	de
      000316 11r00r00               751 	ld	de, #_Di1
      000319 D5                     752 	push	de
      00031A CDrD0r01               753 	call	_initDi
      00031D E8 04                  754 	add	sp, #4
                                    755 ;src/main.c:135: initDi(&Di2, 2);
      00031F 11 02 00               756 	ld	de, #0x0002
      000322 D5                     757 	push	de
      000323 11r00r00               758 	ld	de, #_Di2
      000326 D5                     759 	push	de
      000327 CDrD0r01               760 	call	_initDi
      00032A E8 04                  761 	add	sp, #4
                                    762 ;src/main.c:136: initDi(&Di3, 3);
      00032C 11 03 00               763 	ld	de, #0x0003
      00032F D5                     764 	push	de
      000330 11r00r00               765 	ld	de, #_Di3
      000333 D5                     766 	push	de
      000334 CDrD0r01               767 	call	_initDi
      000337 E8 04                  768 	add	sp, #4
                                    769 ;src/main.c:137: initDi(&Di4, 4);
      000339 11 04 00               770 	ld	de, #0x0004
      00033C D5                     771 	push	de
      00033D 11r00r00               772 	ld	de, #_Di4
      000340 D5                     773 	push	de
      000341 CDrD0r01               774 	call	_initDi
      000344 E8 04                  775 	add	sp, #4
                                    776 ;src/main.c:138: initDi(&Di5, 5);
      000346 11 05 00               777 	ld	de, #0x0005
      000349 D5                     778 	push	de
      00034A 11r00r00               779 	ld	de, #_Di5
      00034D D5                     780 	push	de
      00034E CDrD0r01               781 	call	_initDi
      000351 E8 04                  782 	add	sp, #4
                                    783 ;src/main.c:139: spriteFlip();
      000353 CDr00r00               784 	call	_spriteFlip
                                    785 ;src/main.c:142: cursorIndex = 0;
      000356 AF                     786 	xor	a, a
      000357 21r00r00               787 	ld	hl, #_cursorIndex
      00035A 22                     788 	ld	(hl+), a
      00035B 77                     789 	ld	(hl), a
                                    790 ;src/main.c:143: cursorPosition[0] = 16;
      00035C 21r00r00               791 	ld	hl, #_cursorPosition
      00035F 3E 10                  792 	ld	a, #0x10
      000361 22                     793 	ld	(hl+), a
      000362 36 00                  794 	ld	(hl), #0x00
                                    795 ;src/main.c:144: cursorPosition[1] = 144;
      000364 01r02r00               796 	ld	bc, #_cursorPosition + 2
      000367 69                     797 	ld	l, c
      000368 60                     798 	ld	h, b
      000369 3E 90                  799 	ld	a, #0x90
      00036B 22                     800 	ld	(hl+), a
      00036C 36 00                  801 	ld	(hl), #0x00
                                    802 ;src/main.c:145: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      00036E 0A                     803 	ld	a, (bc)
      00036F 47                     804 	ld	b, a
      000370 21r00r00               805 	ld	hl, #_cursorPosition
      000373 4E                     806 	ld	c, (hl)
      000374 21r00r00               807 	ld	hl, #_cursor
      000377 2A                     808 	ld	a, (hl+)
      000378 5F                     809 	ld	e, a
      000379 56                     810 	ld	d, (hl)
                                    811 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00037A 6B                     812 	ld	l, e
                                    813 ;	spillPairReg hl
                                    814 ;	spillPairReg hl
      00037B 26 00                  815 	ld	h, #0x00
                                    816 ;	spillPairReg hl
                                    817 ;	spillPairReg hl
      00037D 29                     818 	add	hl, hl
      00037E 29                     819 	add	hl, hl
      00037F 11r00r00               820 	ld	de, #_shadow_OAM
      000382 19                     821 	add	hl, de
                                    822 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000383 78                     823 	ld	a, b
      000384 22                     824 	ld	(hl+), a
      000385 71                     825 	ld	(hl), c
                                    826 ;src/main.c:147: scoreDisplay();
      000386 CDr00r00               827 	call	_scoreDisplay
                                    828 ;src/main.c:149: rollsLeft = 3;
      000389 21r00r00               829 	ld	hl, #_rollsLeft
      00038C 3E 03                  830 	ld	a, #0x03
      00038E 22                     831 	ld	(hl+), a
      00038F AF                     832 	xor	a, a
      000390 77                     833 	ld	(hl), a
                                    834 ;src/main.c:150: turn = 1;
      000391 21r00r00               835 	ld	hl, #_turn
      000394 3E 01                  836 	ld	a, #0x01
      000396 22                     837 	ld	(hl+), a
      000397 AF                     838 	xor	a, a
      000398 77                     839 	ld	(hl), a
                                    840 ;src/main.c:152: turnRollDisplay();
      000399 CDr00r00               841 	call	_turnRollDisplay
                                    842 ;src/main.c:154: SHOW_SPRITES;
      00039C F0r00                  843 	ldh	a, (_LCDC_REG + 0)
      00039E F6 02                  844 	or	a, #0x02
      0003A0 E0r00                  845 	ldh	(_LCDC_REG + 0), a
                                    846 ;src/main.c:155: }
      0003A2 C9                     847 	ret
                                    848 ;src/main.c:158: void newTurn(){
                                    849 ;	---------------------------------
                                    850 ; Function newTurn
                                    851 ; ---------------------------------
      0003A3                        852 _newTurn::
                                    853 ;src/main.c:159: turn++;
      0003A3 21r00r00               854 	ld	hl, #_turn
      0003A6 34                     855 	inc	(hl)
      0003A7 20 02                  856 	jr	NZ, 00138$
      0003A9 23                     857 	inc	hl
      0003AA 34                     858 	inc	(hl)
      0003AB                        859 00138$:
                                    860 ;src/main.c:160: rollsLeft = 3;
      0003AB 21r00r00               861 	ld	hl, #_rollsLeft
      0003AE 3E 03                  862 	ld	a, #0x03
      0003B0 22                     863 	ld	(hl+), a
      0003B1 AF                     864 	xor	a, a
      0003B2 77                     865 	ld	(hl), a
                                    866 ;src/main.c:161: turnRollDisplay();
      0003B3 CDr00r00               867 	call	_turnRollDisplay
                                    868 ;src/main.c:162: rollsEnabled = 1;
      0003B6 21r00r00               869 	ld	hl, #_rollsEnabled
      0003B9 36 01                  870 	ld	(hl), #0x01
                                    871 ;src/main.c:163: scorecardChangeA = 0;
      0003BB 21r00r00               872 	ld	hl, #_scorecardChangeA
      0003BE 36 00                  873 	ld	(hl), #0x00
                                    874 ;src/main.c:164: scorecardChangeB = 0;
      0003C0 21r00r00               875 	ld	hl, #_scorecardChangeB
      0003C3 36 00                  876 	ld	(hl), #0x00
                                    877 ;src/main.c:165: if(Di1.inPlay == 0){
      0003C5 21r10r00               878 	ld	hl, #_Di1 + 16
      0003C8 7E                     879 	ld	a, (hl)
      0003C9 B7                     880 	or	a, a
      0003CA 20 19                  881 	jr	NZ, 00102$
                                    882 ;src/main.c:166: Di1.inPlay = 1;
      0003CC 36 01                  883 	ld	(hl), #0x01
                                    884 ;src/main.c:167: moveDiceStruct(&Di1, Di1.x, rollPosY);
      0003CE 21r00r00               885 	ld	hl, #_rollPosY
      0003D1 2A                     886 	ld	a, (hl+)
      0003D2 4F                     887 	ld	c, a
      0003D3 46                     888 	ld	b, (hl)
      0003D4 21r08r00               889 	ld	hl, #_Di1 + 8
      0003D7 2A                     890 	ld	a,	(hl+)
      0003D8 66                     891 	ld	h, (hl)
                                    892 ;	spillPairReg hl
      0003D9 6F                     893 	ld	l, a
                                    894 ;	spillPairReg hl
                                    895 ;	spillPairReg hl
      0003DA C5                     896 	push	bc
      0003DB E5                     897 	push	hl
      0003DC 11r00r00               898 	ld	de, #_Di1
      0003DF D5                     899 	push	de
      0003E0 CDr3Er01               900 	call	_moveDiceStruct
      0003E3 E8 06                  901 	add	sp, #6
      0003E5                        902 00102$:
                                    903 ;src/main.c:169: if(Di2.inPlay == 0){
      0003E5 21r10r00               904 	ld	hl, #_Di2 + 16
      0003E8 7E                     905 	ld	a, (hl)
      0003E9 B7                     906 	or	a, a
      0003EA 20 19                  907 	jr	NZ, 00104$
                                    908 ;src/main.c:170: Di2.inPlay = 1;
      0003EC 36 01                  909 	ld	(hl), #0x01
                                    910 ;src/main.c:171: moveDiceStruct(&Di2, Di2.x, rollPosY);
      0003EE 21r00r00               911 	ld	hl, #_rollPosY
      0003F1 2A                     912 	ld	a, (hl+)
      0003F2 4F                     913 	ld	c, a
      0003F3 46                     914 	ld	b, (hl)
      0003F4 21r08r00               915 	ld	hl, #_Di2 + 8
      0003F7 2A                     916 	ld	a,	(hl+)
      0003F8 66                     917 	ld	h, (hl)
                                    918 ;	spillPairReg hl
      0003F9 6F                     919 	ld	l, a
                                    920 ;	spillPairReg hl
                                    921 ;	spillPairReg hl
      0003FA C5                     922 	push	bc
      0003FB E5                     923 	push	hl
      0003FC 11r00r00               924 	ld	de, #_Di2
      0003FF D5                     925 	push	de
      000400 CDr3Er01               926 	call	_moveDiceStruct
      000403 E8 06                  927 	add	sp, #6
      000405                        928 00104$:
                                    929 ;src/main.c:173: if(Di3.inPlay == 0){
      000405 21r10r00               930 	ld	hl, #_Di3 + 16
      000408 7E                     931 	ld	a, (hl)
      000409 B7                     932 	or	a, a
      00040A 20 19                  933 	jr	NZ, 00106$
                                    934 ;src/main.c:174: Di3.inPlay = 1;
      00040C 36 01                  935 	ld	(hl), #0x01
                                    936 ;src/main.c:175: moveDiceStruct(&Di3, Di3.x, rollPosY);
      00040E 21r00r00               937 	ld	hl, #_rollPosY
      000411 2A                     938 	ld	a, (hl+)
      000412 4F                     939 	ld	c, a
      000413 46                     940 	ld	b, (hl)
      000414 21r08r00               941 	ld	hl, #_Di3 + 8
      000417 2A                     942 	ld	a,	(hl+)
      000418 66                     943 	ld	h, (hl)
                                    944 ;	spillPairReg hl
      000419 6F                     945 	ld	l, a
                                    946 ;	spillPairReg hl
                                    947 ;	spillPairReg hl
      00041A C5                     948 	push	bc
      00041B E5                     949 	push	hl
      00041C 11r00r00               950 	ld	de, #_Di3
      00041F D5                     951 	push	de
      000420 CDr3Er01               952 	call	_moveDiceStruct
      000423 E8 06                  953 	add	sp, #6
      000425                        954 00106$:
                                    955 ;src/main.c:177: if(Di4.inPlay == 0){
      000425 21r10r00               956 	ld	hl, #_Di4 + 16
      000428 7E                     957 	ld	a, (hl)
      000429 B7                     958 	or	a, a
      00042A 20 19                  959 	jr	NZ, 00108$
                                    960 ;src/main.c:178: Di4.inPlay = 1;
      00042C 36 01                  961 	ld	(hl), #0x01
                                    962 ;src/main.c:179: moveDiceStruct(&Di4, Di4.x, rollPosY);
      00042E 21r00r00               963 	ld	hl, #_rollPosY
      000431 2A                     964 	ld	a, (hl+)
      000432 4F                     965 	ld	c, a
      000433 46                     966 	ld	b, (hl)
      000434 21r08r00               967 	ld	hl, #_Di4 + 8
      000437 2A                     968 	ld	a,	(hl+)
      000438 66                     969 	ld	h, (hl)
                                    970 ;	spillPairReg hl
      000439 6F                     971 	ld	l, a
                                    972 ;	spillPairReg hl
                                    973 ;	spillPairReg hl
      00043A C5                     974 	push	bc
      00043B E5                     975 	push	hl
      00043C 11r00r00               976 	ld	de, #_Di4
      00043F D5                     977 	push	de
      000440 CDr3Er01               978 	call	_moveDiceStruct
      000443 E8 06                  979 	add	sp, #6
      000445                        980 00108$:
                                    981 ;src/main.c:181: if(Di5.inPlay == 0){
      000445 21r10r00               982 	ld	hl, #_Di5 + 16
      000448 7E                     983 	ld	a, (hl)
      000449 B7                     984 	or	a, a
      00044A C0                     985 	ret	NZ
                                    986 ;src/main.c:182: Di5.inPlay = 1;
      00044B 36 01                  987 	ld	(hl), #0x01
                                    988 ;src/main.c:183: moveDiceStruct(&Di5, Di5.x, rollPosY);
      00044D 21r00r00               989 	ld	hl, #_rollPosY
      000450 2A                     990 	ld	a, (hl+)
      000451 4F                     991 	ld	c, a
      000452 46                     992 	ld	b, (hl)
      000453 21r08r00               993 	ld	hl, #_Di5 + 8
      000456 2A                     994 	ld	a,	(hl+)
      000457 66                     995 	ld	h, (hl)
                                    996 ;	spillPairReg hl
      000458 6F                     997 	ld	l, a
                                    998 ;	spillPairReg hl
                                    999 ;	spillPairReg hl
      000459 C5                    1000 	push	bc
      00045A E5                    1001 	push	hl
      00045B 11r00r00              1002 	ld	de, #_Di5
      00045E D5                    1003 	push	de
      00045F CDr3Er01              1004 	call	_moveDiceStruct
      000462 E8 06                 1005 	add	sp, #6
                                   1006 ;src/main.c:185: }
      000464 C9                    1007 	ret
                                   1008 ;src/main.c:187: void rollTracker(){
                                   1009 ;	---------------------------------
                                   1010 ; Function rollTracker
                                   1011 ; ---------------------------------
      000465                       1012 _rollTracker::
                                   1013 ;src/main.c:188: turnsPassed = 0;
      000465 AF                    1014 	xor	a, a
      000466 21r00r00              1015 	ld	hl, #_turnsPassed
      000469 22                    1016 	ld	(hl+), a
      00046A 77                    1017 	ld	(hl), a
                                   1018 ;src/main.c:189: if(rollsLeft == 0){
      00046B 21r01r00              1019 	ld	hl, #_rollsLeft + 1
      00046E 3A                    1020 	ld	a, (hl-)
                                   1021 ;src/main.c:191: for(i = 0; i != 14; i++){
      00046F B6                    1022 	or	a,(hl)
      000470 20 60                 1023 	jr	NZ, 00112$
      000472 21r00r00              1024 	ld	hl, #_i
      000475 22                    1025 	ld	(hl+), a
      000476 77                    1026 	ld	(hl), a
      000477                       1027 00114$:
                                   1028 ;src/main.c:192: if(scorecard[i] != 255){
      000477 21r00r00              1029 	ld	hl, #_i
      00047A 2A                    1030 	ld	a, (hl+)
      00047B 4F                    1031 	ld	c, a
      00047C 46                    1032 	ld	b, (hl)
      00047D CB 21                 1033 	sla	c
      00047F CB 10                 1034 	rl	b
      000481 21r00r00              1035 	ld	hl, #_scorecard
      000484 09                    1036 	add	hl, bc
      000485 2A                    1037 	ld	a, (hl+)
      000486 4F                    1038 	ld	c, a
      000487 46                    1039 	ld	b, (hl)
      000488 79                    1040 	ld	a, c
      000489 3C                    1041 	inc	a
      00048A B0                    1042 	or	a, b
      00048B 28 08                 1043 	jr	Z, 00115$
                                   1044 ;src/main.c:193: turnsPassed++;
      00048D 21r00r00              1045 	ld	hl, #_turnsPassed
      000490 34                    1046 	inc	(hl)
      000491 20 02                 1047 	jr	NZ, 00155$
      000493 23                    1048 	inc	hl
      000494 34                    1049 	inc	(hl)
      000495                       1050 00155$:
      000495                       1051 00115$:
                                   1052 ;src/main.c:191: for(i = 0; i != 14; i++){
      000495 21r00r00              1053 	ld	hl, #_i
      000498 34                    1054 	inc	(hl)
      000499 20 02                 1055 	jr	NZ, 00156$
      00049B 23                    1056 	inc	hl
      00049C 34                    1057 	inc	(hl)
      00049D                       1058 00156$:
      00049D 21r00r00              1059 	ld	hl, #_i
      0004A0 2A                    1060 	ld	a, (hl+)
      0004A1 D6 0E                 1061 	sub	a, #0x0e
      0004A3 B6                    1062 	or	a, (hl)
      0004A4 20 D1                 1063 	jr	NZ, 00114$
                                   1064 ;src/main.c:197: if(turnsPassed < turn){
      0004A6 11r00r00              1065 	ld	de, #_turnsPassed
      0004A9 21r00r00              1066 	ld	hl, #_turn
      0004AC 1A                    1067 	ld	a, (de)
      0004AD 13                    1068 	inc	de
      0004AE 96                    1069 	sub	a, (hl)
      0004AF 23                    1070 	inc	hl
      0004B0 1A                    1071 	ld	a, (de)
      0004B1 9E                    1072 	sbc	a, (hl)
      0004B2 30 07                 1073 	jr	NC, 00107$
                                   1074 ;src/main.c:198: rollsEnabled = 0;
      0004B4 21r00r00              1075 	ld	hl, #_rollsEnabled
      0004B7 36 00                 1076 	ld	(hl), #0x00
      0004B9 18 23                 1077 	jr	00113$
      0004BB                       1078 00107$:
                                   1079 ;src/main.c:201: else if(turnsPassed == turn){
      0004BB FAr00r00              1080 	ld	a, (#_turnsPassed)
      0004BE 21r00r00              1081 	ld	hl, #_turn
      0004C1 96                    1082 	sub	a, (hl)
      0004C2 20 1A                 1083 	jr	NZ, 00113$
      0004C4 FAr01r00              1084 	ld	a, (#_turnsPassed + 1)
      0004C7 21r01r00              1085 	ld	hl, #_turn + 1
      0004CA 96                    1086 	sub	a, (hl)
      0004CB 20 11                 1087 	jr	NZ, 00113$
                                   1088 ;src/main.c:202: newTurn();
      0004CD CDrA3r03              1089 	call	_newTurn
      0004D0 18 0C                 1090 	jr	00113$
      0004D2                       1091 00112$:
                                   1092 ;src/main.c:205: else if(rollsLeft > 0){
      0004D2 21r01r00              1093 	ld	hl, #_rollsLeft + 1
      0004D5 3A                    1094 	ld	a, (hl-)
      0004D6 B6                    1095 	or	a, (hl)
      0004D7 28 05                 1096 	jr	Z, 00113$
                                   1097 ;src/main.c:206: rollsEnabled = 1;
      0004D9 21r00r00              1098 	ld	hl, #_rollsEnabled
      0004DC 36 01                 1099 	ld	(hl), #0x01
      0004DE                       1100 00113$:
                                   1101 ;src/main.c:208: turnsPassed = 0;
      0004DE AF                    1102 	xor	a, a
      0004DF 21r00r00              1103 	ld	hl, #_turnsPassed
      0004E2 22                    1104 	ld	(hl+), a
      0004E3 77                    1105 	ld	(hl), a
                                   1106 ;src/main.c:209: }
      0004E4 C9                    1107 	ret
                                   1108 ;src/main.c:211: void playCursorLeft(){
                                   1109 ;	---------------------------------
                                   1110 ; Function playCursorLeft
                                   1111 ; ---------------------------------
      0004E5                       1112 _playCursorLeft::
                                   1113 ;src/main.c:212: if(cursorIndex == 1 || cursorIndex == 2){
      0004E5 21r00r00              1114 	ld	hl, #_cursorIndex
      0004E8 2A                    1115 	ld	a, (hl+)
      0004E9 3D                    1116 	dec	a
      0004EA B6                    1117 	or	a, (hl)
      0004EB 28 09                 1118 	jr	Z, 00101$
      0004ED 21r00r00              1119 	ld	hl, #_cursorIndex
      0004F0 2A                    1120 	ld	a, (hl+)
      0004F1 D6 02                 1121 	sub	a, #0x02
      0004F3 B6                    1122 	or	a, (hl)
      0004F4 20 1F                 1123 	jr	NZ, 00102$
      0004F6                       1124 00101$:
                                   1125 ;src/main.c:213: cursorPosition[0] -= 48;
      0004F6 21r00r00              1126 	ld	hl, #_cursorPosition
      0004F9 2A                    1127 	ld	a, (hl+)
      0004FA 4F                    1128 	ld	c, a
      0004FB 46                    1129 	ld	b, (hl)
      0004FC 79                    1130 	ld	a, c
      0004FD C6 D0                 1131 	add	a, #0xd0
      0004FF 4F                    1132 	ld	c, a
      000500 78                    1133 	ld	a, b
      000501 CE FF                 1134 	adc	a, #0xff
      000503 47                    1135 	ld	b, a
      000504 21r00r00              1136 	ld	hl, #_cursorPosition
      000507 79                    1137 	ld	a, c
      000508 22                    1138 	ld	(hl+), a
      000509 70                    1139 	ld	(hl), b
                                   1140 ;src/main.c:214: cursorIndex -= 1;
      00050A 21r00r00              1141 	ld	hl, #_cursorIndex
      00050D 2A                    1142 	ld	a, (hl+)
      00050E 5F                    1143 	ld	e, a
      00050F 3A                    1144 	ld	a, (hl-)
      000510 57                    1145 	ld	d, a
      000511 1B                    1146 	dec	de
      000512 7B                    1147 	ld	a, e
      000513 22                    1148 	ld	(hl+), a
      000514 72                    1149 	ld	(hl), d
      000515                       1150 00102$:
                                   1151 ;src/main.c:216: if(cursorIndex > 3 && cursorIndex <= 7){
      000515 21r00r00              1152 	ld	hl, #_cursorIndex
      000518 3E 03                 1153 	ld	a, #0x03
      00051A 96                    1154 	sub	a, (hl)
      00051B 23                    1155 	inc	hl
      00051C 3E 00                 1156 	ld	a, #0x00
      00051E 9E                    1157 	sbc	a, (hl)
      00051F 30 2B                 1158 	jr	NC, 00105$
      000521 21r00r00              1159 	ld	hl, #_cursorIndex
      000524 3E 07                 1160 	ld	a, #0x07
      000526 96                    1161 	sub	a, (hl)
      000527 23                    1162 	inc	hl
      000528 3E 00                 1163 	ld	a, #0x00
      00052A 9E                    1164 	sbc	a, (hl)
      00052B 38 1F                 1165 	jr	C, 00105$
                                   1166 ;src/main.c:217: cursorPosition[0] -= 24;
      00052D 21r00r00              1167 	ld	hl, #_cursorPosition
      000530 2A                    1168 	ld	a, (hl+)
      000531 4F                    1169 	ld	c, a
      000532 46                    1170 	ld	b, (hl)
      000533 79                    1171 	ld	a, c
      000534 C6 E8                 1172 	add	a, #0xe8
      000536 4F                    1173 	ld	c, a
      000537 78                    1174 	ld	a, b
      000538 CE FF                 1175 	adc	a, #0xff
      00053A 47                    1176 	ld	b, a
      00053B 21r00r00              1177 	ld	hl, #_cursorPosition
      00053E 79                    1178 	ld	a, c
      00053F 22                    1179 	ld	(hl+), a
      000540 70                    1180 	ld	(hl), b
                                   1181 ;src/main.c:218: cursorIndex -= 1;
      000541 21r00r00              1182 	ld	hl, #_cursorIndex
      000544 2A                    1183 	ld	a, (hl+)
      000545 5F                    1184 	ld	e, a
      000546 3A                    1185 	ld	a, (hl-)
      000547 57                    1186 	ld	d, a
      000548 1B                    1187 	dec	de
      000549 7B                    1188 	ld	a, e
      00054A 22                    1189 	ld	(hl+), a
      00054B 72                    1190 	ld	(hl), d
      00054C                       1191 00105$:
                                   1192 ;src/main.c:220: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      00054C 21r02r00              1193 	ld	hl, #_cursorPosition + 2
      00054F 46                    1194 	ld	b, (hl)
      000550 21r00r00              1195 	ld	hl, #_cursorPosition
      000553 4E                    1196 	ld	c, (hl)
      000554 21r00r00              1197 	ld	hl, #_cursor
      000557 2A                    1198 	ld	a, (hl+)
      000558 5F                    1199 	ld	e, a
      000559 56                    1200 	ld	d, (hl)
                                   1201 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00055A 6B                    1202 	ld	l, e
                                   1203 ;	spillPairReg hl
                                   1204 ;	spillPairReg hl
      00055B 26 00                 1205 	ld	h, #0x00
                                   1206 ;	spillPairReg hl
                                   1207 ;	spillPairReg hl
      00055D 29                    1208 	add	hl, hl
      00055E 29                    1209 	add	hl, hl
      00055F 11r00r00              1210 	ld	de, #_shadow_OAM
      000562 19                    1211 	add	hl, de
                                   1212 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000563 78                    1213 	ld	a, b
      000564 22                    1214 	ld	(hl+), a
      000565 71                    1215 	ld	(hl), c
                                   1216 ;src/main.c:220: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1217 ;src/main.c:221: }
      000566 C9                    1218 	ret
                                   1219 ;src/main.c:224: void playCursorRight(){
                                   1220 ;	---------------------------------
                                   1221 ; Function playCursorRight
                                   1222 ; ---------------------------------
      000567                       1223 _playCursorRight::
                                   1224 ;src/main.c:225: if(cursorIndex == 0 || cursorIndex == 1){
      000567 21r01r00              1225 	ld	hl, #_cursorIndex + 1
      00056A 3A                    1226 	ld	a, (hl-)
      00056B B6                    1227 	or	a, (hl)
      00056C 28 05                 1228 	jr	Z, 00101$
      00056E 2A                    1229 	ld	a, (hl+)
      00056F 3D                    1230 	dec	a
      000570 B6                    1231 	or	a, (hl)
      000571 20 1A                 1232 	jr	NZ, 00102$
      000573                       1233 00101$:
                                   1234 ;src/main.c:226: cursorPosition[0] += 48;
      000573 21r00r00              1235 	ld	hl, #_cursorPosition
      000576 2A                    1236 	ld	a, (hl+)
      000577 4F                    1237 	ld	c, a
      000578 46                    1238 	ld	b, (hl)
      000579 21 30 00              1239 	ld	hl, #0x0030
      00057C 09                    1240 	add	hl, bc
      00057D 4D                    1241 	ld	c, l
      00057E 44                    1242 	ld	b, h
      00057F 21r00r00              1243 	ld	hl, #_cursorPosition
      000582 79                    1244 	ld	a, c
      000583 22                    1245 	ld	(hl+), a
      000584 70                    1246 	ld	(hl), b
                                   1247 ;src/main.c:227: cursorIndex += 1;
      000585 21r00r00              1248 	ld	hl, #_cursorIndex
      000588 34                    1249 	inc	(hl)
      000589 20 02                 1250 	jr	NZ, 00127$
      00058B 23                    1251 	inc	hl
      00058C 34                    1252 	inc	(hl)
      00058D                       1253 00127$:
      00058D                       1254 00102$:
                                   1255 ;src/main.c:229: if(cursorIndex >= 3 && cursorIndex < 7){
      00058D 21r00r00              1256 	ld	hl, #_cursorIndex
      000590 2A                    1257 	ld	a, (hl+)
      000591 D6 03                 1258 	sub	a, #0x03
      000593 7E                    1259 	ld	a, (hl)
      000594 DE 00                 1260 	sbc	a, #0x00
      000596 38 23                 1261 	jr	C, 00105$
      000598 2B                    1262 	dec	hl
      000599 2A                    1263 	ld	a, (hl+)
      00059A D6 07                 1264 	sub	a, #0x07
      00059C 7E                    1265 	ld	a, (hl)
      00059D DE 00                 1266 	sbc	a, #0x00
      00059F 30 1A                 1267 	jr	NC, 00105$
                                   1268 ;src/main.c:230: cursorPosition[0] += 24;
      0005A1 21r00r00              1269 	ld	hl, #_cursorPosition
      0005A4 2A                    1270 	ld	a, (hl+)
      0005A5 4F                    1271 	ld	c, a
      0005A6 46                    1272 	ld	b, (hl)
      0005A7 21 18 00              1273 	ld	hl, #0x0018
      0005AA 09                    1274 	add	hl, bc
      0005AB 4D                    1275 	ld	c, l
      0005AC 44                    1276 	ld	b, h
      0005AD 21r00r00              1277 	ld	hl, #_cursorPosition
      0005B0 79                    1278 	ld	a, c
      0005B1 22                    1279 	ld	(hl+), a
      0005B2 70                    1280 	ld	(hl), b
                                   1281 ;src/main.c:231: cursorIndex += 1;
      0005B3 21r00r00              1282 	ld	hl, #_cursorIndex
      0005B6 34                    1283 	inc	(hl)
      0005B7 20 02                 1284 	jr	NZ, 00128$
      0005B9 23                    1285 	inc	hl
      0005BA 34                    1286 	inc	(hl)
      0005BB                       1287 00128$:
      0005BB                       1288 00105$:
                                   1289 ;src/main.c:233: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      0005BB 21r02r00              1290 	ld	hl, #_cursorPosition + 2
      0005BE 46                    1291 	ld	b, (hl)
      0005BF 21r00r00              1292 	ld	hl, #_cursorPosition
      0005C2 4E                    1293 	ld	c, (hl)
      0005C3 21r00r00              1294 	ld	hl, #_cursor
      0005C6 2A                    1295 	ld	a, (hl+)
      0005C7 5F                    1296 	ld	e, a
      0005C8 56                    1297 	ld	d, (hl)
                                   1298 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0005C9 6B                    1299 	ld	l, e
                                   1300 ;	spillPairReg hl
                                   1301 ;	spillPairReg hl
      0005CA 26 00                 1302 	ld	h, #0x00
                                   1303 ;	spillPairReg hl
                                   1304 ;	spillPairReg hl
      0005CC 29                    1305 	add	hl, hl
      0005CD 29                    1306 	add	hl, hl
      0005CE 11r00r00              1307 	ld	de, #_shadow_OAM
      0005D1 19                    1308 	add	hl, de
                                   1309 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0005D2 78                    1310 	ld	a, b
      0005D3 22                    1311 	ld	(hl+), a
      0005D4 71                    1312 	ld	(hl), c
                                   1313 ;src/main.c:233: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1314 ;src/main.c:234: }
      0005D5 C9                    1315 	ret
                                   1316 ;src/main.c:237: void toggleDi(){
                                   1317 ;	---------------------------------
                                   1318 ; Function toggleDi
                                   1319 ; ---------------------------------
      0005D6                       1320 _toggleDi::
                                   1321 ;src/main.c:238: switch(cursorIndex){
      0005D6 21r00r00              1322 	ld	hl, #_cursorIndex
      0005D9 2A                    1323 	ld	a, (hl+)
      0005DA D6 03                 1324 	sub	a, #0x03
      0005DC B6                    1325 	or	a, (hl)
      0005DD 28 28                 1326 	jr	Z, 00101$
      0005DF 21r00r00              1327 	ld	hl, #_cursorIndex
      0005E2 2A                    1328 	ld	a, (hl+)
      0005E3 D6 04                 1329 	sub	a, #0x04
      0005E5 B6                    1330 	or	a, (hl)
      0005E6 28 5D                 1331 	jr	Z, 00107$
      0005E8 21r00r00              1332 	ld	hl, #_cursorIndex
      0005EB 2A                    1333 	ld	a, (hl+)
      0005EC D6 05                 1334 	sub	a, #0x05
      0005EE B6                    1335 	or	a, (hl)
      0005EF CAr83r06              1336 	jp	Z,00113$
      0005F2 21r00r00              1337 	ld	hl, #_cursorIndex
      0005F5 2A                    1338 	ld	a, (hl+)
      0005F6 D6 06                 1339 	sub	a, #0x06
      0005F8 B6                    1340 	or	a, (hl)
      0005F9 CArC1r06              1341 	jp	Z,00119$
      0005FC 21r00r00              1342 	ld	hl, #_cursorIndex
      0005FF 2A                    1343 	ld	a, (hl+)
      000600 D6 07                 1344 	sub	a, #0x07
      000602 B6                    1345 	or	a, (hl)
      000603 CArFFr06              1346 	jp	Z,00125$
      000606 C9                    1347 	ret
                                   1348 ;src/main.c:239: case 3:
      000607                       1349 00101$:
                                   1350 ;src/main.c:240: if(Di1.inPlay == 1){
      000607 21r10r00              1351 	ld	hl, #_Di1 + 16
      00060A 4E                    1352 	ld	c, (hl)
                                   1353 ;src/main.c:242: moveDiceStruct(&Di1, Di1.x, heldPosY);
                                   1354 ;src/main.c:240: if(Di1.inPlay == 1){
      00060B 79                    1355 	ld	a, c
                                   1356 ;src/main.c:241: Di1.inPlay = 0;
      00060C 3D                    1357 	dec	a
      00060D 20 19                 1358 	jr	NZ, 00105$
      00060F 77                    1359 	ld	(hl),a
                                   1360 ;src/main.c:242: moveDiceStruct(&Di1, Di1.x, heldPosY);
      000610 21r00r00              1361 	ld	hl, #_heldPosY
      000613 2A                    1362 	ld	a, (hl+)
      000614 4F                    1363 	ld	c, a
      000615 46                    1364 	ld	b, (hl)
      000616 21r08r00              1365 	ld	hl, #(_Di1 + 8)
      000619 2A                    1366 	ld	a,	(hl+)
      00061A 66                    1367 	ld	h, (hl)
                                   1368 ;	spillPairReg hl
      00061B 6F                    1369 	ld	l, a
                                   1370 ;	spillPairReg hl
                                   1371 ;	spillPairReg hl
      00061C C5                    1372 	push	bc
      00061D E5                    1373 	push	hl
      00061E 11r00r00              1374 	ld	de, #_Di1
      000621 D5                    1375 	push	de
      000622 CDr3Er01              1376 	call	_moveDiceStruct
      000625 E8 06                 1377 	add	sp, #6
      000627 C9                    1378 	ret
      000628                       1379 00105$:
                                   1380 ;src/main.c:244: else if(Di1.inPlay == 0){
      000628 79                    1381 	ld	a, c
      000629 B7                    1382 	or	a, a
      00062A C0                    1383 	ret	NZ
                                   1384 ;src/main.c:245: Di1.inPlay = 1;
      00062B 36 01                 1385 	ld	(hl), #0x01
                                   1386 ;src/main.c:246: moveDiceStruct(&Di1, Di1.x, rollPosY);
      00062D 21r00r00              1387 	ld	hl, #_rollPosY
      000630 2A                    1388 	ld	a, (hl+)
      000631 4F                    1389 	ld	c, a
      000632 46                    1390 	ld	b, (hl)
      000633 21r08r00              1391 	ld	hl, #(_Di1 + 8)
      000636 2A                    1392 	ld	a,	(hl+)
      000637 66                    1393 	ld	h, (hl)
                                   1394 ;	spillPairReg hl
      000638 6F                    1395 	ld	l, a
                                   1396 ;	spillPairReg hl
                                   1397 ;	spillPairReg hl
      000639 C5                    1398 	push	bc
      00063A E5                    1399 	push	hl
      00063B 11r00r00              1400 	ld	de, #_Di1
      00063E D5                    1401 	push	de
      00063F CDr3Er01              1402 	call	_moveDiceStruct
      000642 E8 06                 1403 	add	sp, #6
                                   1404 ;src/main.c:248: break;
      000644 C9                    1405 	ret
                                   1406 ;src/main.c:249: case 4:
      000645                       1407 00107$:
                                   1408 ;src/main.c:250: if(Di2.inPlay == 1){
      000645 21r10r00              1409 	ld	hl, #_Di2 + 16
      000648 4E                    1410 	ld	c, (hl)
                                   1411 ;src/main.c:252: moveDiceStruct(&Di2, Di2.x, heldPosY);
                                   1412 ;src/main.c:250: if(Di2.inPlay == 1){
      000649 79                    1413 	ld	a, c
                                   1414 ;src/main.c:251: Di2.inPlay = 0;
      00064A 3D                    1415 	dec	a
      00064B 20 19                 1416 	jr	NZ, 00111$
      00064D 77                    1417 	ld	(hl),a
                                   1418 ;src/main.c:252: moveDiceStruct(&Di2, Di2.x, heldPosY);
      00064E 21r00r00              1419 	ld	hl, #_heldPosY
      000651 2A                    1420 	ld	a, (hl+)
      000652 4F                    1421 	ld	c, a
      000653 46                    1422 	ld	b, (hl)
      000654 21r08r00              1423 	ld	hl, #(_Di2 + 8)
      000657 2A                    1424 	ld	a,	(hl+)
      000658 66                    1425 	ld	h, (hl)
                                   1426 ;	spillPairReg hl
      000659 6F                    1427 	ld	l, a
                                   1428 ;	spillPairReg hl
                                   1429 ;	spillPairReg hl
      00065A C5                    1430 	push	bc
      00065B E5                    1431 	push	hl
      00065C 11r00r00              1432 	ld	de, #_Di2
      00065F D5                    1433 	push	de
      000660 CDr3Er01              1434 	call	_moveDiceStruct
      000663 E8 06                 1435 	add	sp, #6
      000665 C9                    1436 	ret
      000666                       1437 00111$:
                                   1438 ;src/main.c:254: else if(Di2.inPlay == 0){
      000666 79                    1439 	ld	a, c
      000667 B7                    1440 	or	a, a
      000668 C0                    1441 	ret	NZ
                                   1442 ;src/main.c:255: Di2.inPlay = 1;
      000669 36 01                 1443 	ld	(hl), #0x01
                                   1444 ;src/main.c:256: moveDiceStruct(&Di2, Di2.x, rollPosY);
      00066B 21r00r00              1445 	ld	hl, #_rollPosY
      00066E 2A                    1446 	ld	a, (hl+)
      00066F 4F                    1447 	ld	c, a
      000670 46                    1448 	ld	b, (hl)
      000671 21r08r00              1449 	ld	hl, #(_Di2 + 8)
      000674 2A                    1450 	ld	a,	(hl+)
      000675 66                    1451 	ld	h, (hl)
                                   1452 ;	spillPairReg hl
      000676 6F                    1453 	ld	l, a
                                   1454 ;	spillPairReg hl
                                   1455 ;	spillPairReg hl
      000677 C5                    1456 	push	bc
      000678 E5                    1457 	push	hl
      000679 11r00r00              1458 	ld	de, #_Di2
      00067C D5                    1459 	push	de
      00067D CDr3Er01              1460 	call	_moveDiceStruct
      000680 E8 06                 1461 	add	sp, #6
                                   1462 ;src/main.c:258: break;
      000682 C9                    1463 	ret
                                   1464 ;src/main.c:259: case 5:
      000683                       1465 00113$:
                                   1466 ;src/main.c:260: if(Di3.inPlay == 1){
      000683 21r10r00              1467 	ld	hl, #_Di3 + 16
      000686 4E                    1468 	ld	c, (hl)
                                   1469 ;src/main.c:262: moveDiceStruct(&Di3, Di3.x, heldPosY);
                                   1470 ;src/main.c:260: if(Di3.inPlay == 1){
      000687 79                    1471 	ld	a, c
                                   1472 ;src/main.c:261: Di3.inPlay = 0;
      000688 3D                    1473 	dec	a
      000689 20 19                 1474 	jr	NZ, 00117$
      00068B 77                    1475 	ld	(hl),a
                                   1476 ;src/main.c:262: moveDiceStruct(&Di3, Di3.x, heldPosY);
      00068C 21r00r00              1477 	ld	hl, #_heldPosY
      00068F 2A                    1478 	ld	a, (hl+)
      000690 4F                    1479 	ld	c, a
      000691 46                    1480 	ld	b, (hl)
      000692 21r08r00              1481 	ld	hl, #(_Di3 + 8)
      000695 2A                    1482 	ld	a,	(hl+)
      000696 66                    1483 	ld	h, (hl)
                                   1484 ;	spillPairReg hl
      000697 6F                    1485 	ld	l, a
                                   1486 ;	spillPairReg hl
                                   1487 ;	spillPairReg hl
      000698 C5                    1488 	push	bc
      000699 E5                    1489 	push	hl
      00069A 11r00r00              1490 	ld	de, #_Di3
      00069D D5                    1491 	push	de
      00069E CDr3Er01              1492 	call	_moveDiceStruct
      0006A1 E8 06                 1493 	add	sp, #6
      0006A3 C9                    1494 	ret
      0006A4                       1495 00117$:
                                   1496 ;src/main.c:264: else if(Di3.inPlay == 0){
      0006A4 79                    1497 	ld	a, c
      0006A5 B7                    1498 	or	a, a
      0006A6 C0                    1499 	ret	NZ
                                   1500 ;src/main.c:265: Di3.inPlay = 1;
      0006A7 36 01                 1501 	ld	(hl), #0x01
                                   1502 ;src/main.c:266: moveDiceStruct(&Di3, Di3.x, rollPosY);
      0006A9 21r00r00              1503 	ld	hl, #_rollPosY
      0006AC 2A                    1504 	ld	a, (hl+)
      0006AD 4F                    1505 	ld	c, a
      0006AE 46                    1506 	ld	b, (hl)
      0006AF 21r08r00              1507 	ld	hl, #(_Di3 + 8)
      0006B2 2A                    1508 	ld	a,	(hl+)
      0006B3 66                    1509 	ld	h, (hl)
                                   1510 ;	spillPairReg hl
      0006B4 6F                    1511 	ld	l, a
                                   1512 ;	spillPairReg hl
                                   1513 ;	spillPairReg hl
      0006B5 C5                    1514 	push	bc
      0006B6 E5                    1515 	push	hl
      0006B7 11r00r00              1516 	ld	de, #_Di3
      0006BA D5                    1517 	push	de
      0006BB CDr3Er01              1518 	call	_moveDiceStruct
      0006BE E8 06                 1519 	add	sp, #6
                                   1520 ;src/main.c:268: break;
      0006C0 C9                    1521 	ret
                                   1522 ;src/main.c:269: case 6:
      0006C1                       1523 00119$:
                                   1524 ;src/main.c:270: if(Di4.inPlay == 1){
      0006C1 21r10r00              1525 	ld	hl, #_Di4 + 16
      0006C4 4E                    1526 	ld	c, (hl)
                                   1527 ;src/main.c:272: moveDiceStruct(&Di4, Di4.x, heldPosY);
                                   1528 ;src/main.c:270: if(Di4.inPlay == 1){
      0006C5 79                    1529 	ld	a, c
                                   1530 ;src/main.c:271: Di4.inPlay = 0;
      0006C6 3D                    1531 	dec	a
      0006C7 20 19                 1532 	jr	NZ, 00123$
      0006C9 77                    1533 	ld	(hl),a
                                   1534 ;src/main.c:272: moveDiceStruct(&Di4, Di4.x, heldPosY);
      0006CA 21r00r00              1535 	ld	hl, #_heldPosY
      0006CD 2A                    1536 	ld	a, (hl+)
      0006CE 4F                    1537 	ld	c, a
      0006CF 46                    1538 	ld	b, (hl)
      0006D0 21r08r00              1539 	ld	hl, #(_Di4 + 8)
      0006D3 2A                    1540 	ld	a,	(hl+)
      0006D4 66                    1541 	ld	h, (hl)
                                   1542 ;	spillPairReg hl
      0006D5 6F                    1543 	ld	l, a
                                   1544 ;	spillPairReg hl
                                   1545 ;	spillPairReg hl
      0006D6 C5                    1546 	push	bc
      0006D7 E5                    1547 	push	hl
      0006D8 11r00r00              1548 	ld	de, #_Di4
      0006DB D5                    1549 	push	de
      0006DC CDr3Er01              1550 	call	_moveDiceStruct
      0006DF E8 06                 1551 	add	sp, #6
      0006E1 C9                    1552 	ret
      0006E2                       1553 00123$:
                                   1554 ;src/main.c:274: else if(Di4.inPlay == 0){
      0006E2 79                    1555 	ld	a, c
      0006E3 B7                    1556 	or	a, a
      0006E4 C0                    1557 	ret	NZ
                                   1558 ;src/main.c:275: Di4.inPlay = 1;
      0006E5 36 01                 1559 	ld	(hl), #0x01
                                   1560 ;src/main.c:276: moveDiceStruct(&Di4, Di4.x, rollPosY);
      0006E7 21r00r00              1561 	ld	hl, #_rollPosY
      0006EA 2A                    1562 	ld	a, (hl+)
      0006EB 4F                    1563 	ld	c, a
      0006EC 46                    1564 	ld	b, (hl)
      0006ED 21r08r00              1565 	ld	hl, #(_Di4 + 8)
      0006F0 2A                    1566 	ld	a,	(hl+)
      0006F1 66                    1567 	ld	h, (hl)
                                   1568 ;	spillPairReg hl
      0006F2 6F                    1569 	ld	l, a
                                   1570 ;	spillPairReg hl
                                   1571 ;	spillPairReg hl
      0006F3 C5                    1572 	push	bc
      0006F4 E5                    1573 	push	hl
      0006F5 11r00r00              1574 	ld	de, #_Di4
      0006F8 D5                    1575 	push	de
      0006F9 CDr3Er01              1576 	call	_moveDiceStruct
      0006FC E8 06                 1577 	add	sp, #6
                                   1578 ;src/main.c:278: break;
      0006FE C9                    1579 	ret
                                   1580 ;src/main.c:279: case 7:
      0006FF                       1581 00125$:
                                   1582 ;src/main.c:280: if(Di5.inPlay == 1){
      0006FF 21r10r00              1583 	ld	hl, #_Di5 + 16
      000702 4E                    1584 	ld	c, (hl)
                                   1585 ;src/main.c:282: moveDiceStruct(&Di5, Di5.x, heldPosY);
                                   1586 ;src/main.c:280: if(Di5.inPlay == 1){
      000703 79                    1587 	ld	a, c
                                   1588 ;src/main.c:281: Di5.inPlay = 0;
      000704 3D                    1589 	dec	a
      000705 20 19                 1590 	jr	NZ, 00129$
      000707 77                    1591 	ld	(hl),a
                                   1592 ;src/main.c:282: moveDiceStruct(&Di5, Di5.x, heldPosY);
      000708 21r00r00              1593 	ld	hl, #_heldPosY
      00070B 2A                    1594 	ld	a, (hl+)
      00070C 4F                    1595 	ld	c, a
      00070D 46                    1596 	ld	b, (hl)
      00070E 21r08r00              1597 	ld	hl, #(_Di5 + 8)
      000711 2A                    1598 	ld	a,	(hl+)
      000712 66                    1599 	ld	h, (hl)
                                   1600 ;	spillPairReg hl
      000713 6F                    1601 	ld	l, a
                                   1602 ;	spillPairReg hl
                                   1603 ;	spillPairReg hl
      000714 C5                    1604 	push	bc
      000715 E5                    1605 	push	hl
      000716 11r00r00              1606 	ld	de, #_Di5
      000719 D5                    1607 	push	de
      00071A CDr3Er01              1608 	call	_moveDiceStruct
      00071D E8 06                 1609 	add	sp, #6
      00071F C9                    1610 	ret
      000720                       1611 00129$:
                                   1612 ;src/main.c:284: else if(Di5.inPlay == 0){
      000720 79                    1613 	ld	a, c
      000721 B7                    1614 	or	a, a
      000722 C0                    1615 	ret	NZ
                                   1616 ;src/main.c:285: Di5.inPlay = 1;
      000723 36 01                 1617 	ld	(hl), #0x01
                                   1618 ;src/main.c:286: moveDiceStruct(&Di5, Di5.x, rollPosY);
      000725 21r00r00              1619 	ld	hl, #_rollPosY
      000728 2A                    1620 	ld	a, (hl+)
      000729 4F                    1621 	ld	c, a
      00072A 46                    1622 	ld	b, (hl)
      00072B 21r08r00              1623 	ld	hl, #(_Di5 + 8)
      00072E 2A                    1624 	ld	a,	(hl+)
      00072F 66                    1625 	ld	h, (hl)
                                   1626 ;	spillPairReg hl
      000730 6F                    1627 	ld	l, a
                                   1628 ;	spillPairReg hl
                                   1629 ;	spillPairReg hl
      000731 C5                    1630 	push	bc
      000732 E5                    1631 	push	hl
      000733 11r00r00              1632 	ld	de, #_Di5
      000736 D5                    1633 	push	de
      000737 CDr3Er01              1634 	call	_moveDiceStruct
      00073A E8 06                 1635 	add	sp, #6
                                   1636 ;src/main.c:289: }
                                   1637 ;src/main.c:290: }
      00073C C9                    1638 	ret
                                   1639 ;src/main.c:293: void rollCheck(){
                                   1640 ;	---------------------------------
                                   1641 ; Function rollCheck
                                   1642 ; ---------------------------------
      00073D                       1643 _rollCheck::
                                   1644 ;src/main.c:294: if(rollsEnabled == 0){
      00073D FAr00r00              1645 	ld	a, (#_rollsEnabled)
      000740 B7                    1646 	or	a, a
      000741 20 1E                 1647 	jr	NZ, 00107$
                                   1648 ;src/main.c:295: if(scorecardChangeA != scorecardChangeB){
      000743 FAr00r00              1649 	ld	a, (#_scorecardChangeA)
      000746 21r00r00              1650 	ld	hl, #_scorecardChangeB
      000749 96                    1651 	sub	a, (hl)
      00074A 28 0C                 1652 	jr	Z, 00102$
                                   1653 ;src/main.c:296: newTurn();
      00074C CDrA3r03              1654 	call	_newTurn
                                   1655 ;src/main.c:297: printf("here");
      00074F 11r6Br07              1656 	ld	de, #___str_0
      000752 D5                    1657 	push	de
      000753 CDr00r00              1658 	call	_printf
      000756 E1                    1659 	pop	hl
      000757 C9                    1660 	ret
      000758                       1661 00102$:
                                   1662 ;src/main.c:301: cardView(backgroundMap);
      000758 11r00r00              1663 	ld	de, #_backgroundMap
      00075B D5                    1664 	push	de
      00075C CDr00r00              1665 	call	_cardView
      00075F E1                    1666 	pop	hl
      000760 C9                    1667 	ret
      000761                       1668 00107$:
                                   1669 ;src/main.c:304: else if(rollsEnabled == 1){
      000761 21r00r00              1670 	ld	hl, #_rollsEnabled
      000764 7E                    1671 	ld	a, (hl)
      000765 3D                    1672 	dec	a
      000766 CAr97r00              1673 	jp	Z,_diceToRoll
                                   1674 ;src/main.c:305: diceToRoll();
      000769 C9                    1675 	ret
                                   1676 ;src/main.c:307: }
      00076A C9                    1677 	ret
      00076B                       1678 ___str_0:
      00076B 68 65 72 65           1679 	.ascii "here"
      00076F 00                    1680 	.db 0x00
                                   1681 ;src/main.c:310: void playCursorA(){
                                   1682 ;	---------------------------------
                                   1683 ; Function playCursorA
                                   1684 ; ---------------------------------
      000770                       1685 _playCursorA::
                                   1686 ;src/main.c:312: if(cursorIndex == 0){
      000770 21r01r00              1687 	ld	hl, #_cursorIndex + 1
      000773 3A                    1688 	ld	a, (hl-)
      000774 B6                    1689 	or	a, (hl)
      000775 20 0C                 1690 	jr	NZ, 00125$
                                   1691 ;src/main.c:313: rollTracker();
      000777 CDr65r04              1692 	call	_rollTracker
                                   1693 ;src/main.c:314: rollCheck();
      00077A CDr3Dr07              1694 	call	_rollCheck
                                   1695 ;src/main.c:315: turnRollDisplay();
      00077D CDr00r00              1696 	call	_turnRollDisplay
      000780 C3r16r08              1697 	jp	00126$
      000783                       1698 00125$:
                                   1699 ;src/main.c:318: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      000783 21r00r00              1700 	ld	hl, #_rollsLeft
      000786 2A                    1701 	ld	a, (hl+)
      000787 D6 03                 1702 	sub	a, #0x03
      000789 B6                    1703 	or	a, (hl)
      00078A 3E 01                 1704 	ld	a, #0x01
      00078C 28 01                 1705 	jr	Z, 00186$
      00078E AF                    1706 	xor	a, a
      00078F                       1707 00186$:
      00078F 5F                    1708 	ld	e, a
      000790 FAr00r00              1709 	ld	a, (#_scorecardChangeA)
      000793 21r00r00              1710 	ld	hl, #_scorecardChangeB
      000796 96                    1711 	sub	a, (hl)
      000797 3E 01                 1712 	ld	a, #0x01
      000799 28 01                 1713 	jr	Z, 00188$
      00079B AF                    1714 	xor	a, a
      00079C                       1715 00188$:
      00079C 4F                    1716 	ld	c, a
                                   1717 ;src/main.c:319: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      00079D 21r00r00              1718 	ld	hl, #_rollsLeft
      0007A0 2A                    1719 	ld	a, (hl+)
      0007A1 D6 03                 1720 	sub	a, #0x03
      0007A3 7E                    1721 	ld	a, (hl)
      0007A4 DE 00                 1722 	sbc	a, #0x00
      0007A6 3E 00                 1723 	ld	a, #0x00
      0007A8 17                    1724 	rla
      0007A9 47                    1725 	ld	b, a
                                   1726 ;src/main.c:317: else if(cursorIndex == 1){
      0007AA 21r00r00              1727 	ld	hl, #_cursorIndex
      0007AD 2A                    1728 	ld	a, (hl+)
      0007AE 3D                    1729 	dec	a
                                   1730 ;src/main.c:318: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      0007AF B6                    1731 	or	a,(hl)
      0007B0 20 27                 1732 	jr	NZ, 00122$
      0007B2 B3                    1733 	or	a,e
      0007B3 C0                    1734 	ret	NZ
      0007B4 CB 41                 1735 	bit	0, c
      0007B6 C8                    1736 	ret	Z
                                   1737 ;src/main.c:319: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      0007B7 78                    1738 	ld	a, b
      0007B8 B7                    1739 	or	a, a
      0007B9 28 5B                 1740 	jr	Z, 00126$
      0007BB 79                    1741 	ld	a, c
      0007BC B7                    1742 	or	a, a
      0007BD 28 57                 1743 	jr	Z, 00126$
                                   1744 ;src/main.c:320: cursorPosition[0] = 40;
      0007BF 21r00r00              1745 	ld	hl, #_cursorPosition
      0007C2 3E 28                 1746 	ld	a, #0x28
      0007C4 22                    1747 	ld	(hl+), a
      0007C5 36 00                 1748 	ld	(hl), #0x00
                                   1749 ;src/main.c:321: cursorPosition[1] = 128;
      0007C7 21r02r00              1750 	ld	hl, #(_cursorPosition + 2)
      0007CA 3E 80                 1751 	ld	a, #0x80
      0007CC 22                    1752 	ld	(hl+), a
      0007CD 36 00                 1753 	ld	(hl), #0x00
                                   1754 ;src/main.c:322: cursorIndex = 3;
      0007CF 21r00r00              1755 	ld	hl, #_cursorIndex
      0007D2 3E 03                 1756 	ld	a, #0x03
      0007D4 22                    1757 	ld	(hl+), a
      0007D5 AF                    1758 	xor	a, a
      0007D6 77                    1759 	ld	(hl), a
      0007D7 18 3D                 1760 	jr	00126$
      0007D9                       1761 00122$:
                                   1762 ;src/main.c:325: else if(cursorIndex == 2){
      0007D9 21r00r00              1763 	ld	hl, #_cursorIndex
      0007DC 2A                    1764 	ld	a, (hl+)
      0007DD D6 02                 1765 	sub	a, #0x02
                                   1766 ;src/main.c:326: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      0007DF B6                    1767 	or	a,(hl)
      0007E0 20 1C                 1768 	jr	NZ, 00119$
      0007E2 B3                    1769 	or	a,e
      0007E3 C0                    1770 	ret	NZ
      0007E4 CB 41                 1771 	bit	0, c
      0007E6 C8                    1772 	ret	Z
                                   1773 ;src/main.c:327: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      0007E7 78                    1774 	ld	a, b
      0007E8 B7                    1775 	or	a, a
      0007E9 28 2B                 1776 	jr	Z, 00126$
      0007EB 79                    1777 	ld	a, c
      0007EC B7                    1778 	or	a, a
      0007ED 28 27                 1779 	jr	Z, 00126$
                                   1780 ;src/main.c:328: viewMode = 1;
      0007EF 21r00r00              1781 	ld	hl, #_viewMode
      0007F2 36 01                 1782 	ld	(hl), #0x01
                                   1783 ;src/main.c:329: cardView(backgroundMap);
      0007F4 11r00r00              1784 	ld	de, #_backgroundMap
      0007F7 D5                    1785 	push	de
      0007F8 CDr00r00              1786 	call	_cardView
      0007FB E1                    1787 	pop	hl
      0007FC 18 18                 1788 	jr	00126$
      0007FE                       1789 00119$:
                                   1790 ;src/main.c:332: else if(cursorIndex >= 3 && cursorIndex <= 7){
      0007FE 21r00r00              1791 	ld	hl, #_cursorIndex
      000801 2A                    1792 	ld	a, (hl+)
      000802 D6 03                 1793 	sub	a, #0x03
      000804 7E                    1794 	ld	a, (hl)
      000805 DE 00                 1795 	sbc	a, #0x00
      000807 38 0D                 1796 	jr	C, 00126$
      000809 2B                    1797 	dec	hl
      00080A 3E 07                 1798 	ld	a, #0x07
      00080C 96                    1799 	sub	a, (hl)
      00080D 23                    1800 	inc	hl
      00080E 3E 00                 1801 	ld	a, #0x00
      000810 9E                    1802 	sbc	a, (hl)
      000811 38 03                 1803 	jr	C, 00126$
                                   1804 ;src/main.c:333: toggleDi();
      000813 CDrD6r05              1805 	call	_toggleDi
      000816                       1806 00126$:
                                   1807 ;src/main.c:335: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      000816 21r02r00              1808 	ld	hl, #_cursorPosition + 2
      000819 46                    1809 	ld	b, (hl)
      00081A 21r00r00              1810 	ld	hl, #_cursorPosition
      00081D 4E                    1811 	ld	c, (hl)
      00081E 21r00r00              1812 	ld	hl, #_cursor
      000821 2A                    1813 	ld	a, (hl+)
      000822 5F                    1814 	ld	e, a
      000823 56                    1815 	ld	d, (hl)
                                   1816 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000824 6B                    1817 	ld	l, e
                                   1818 ;	spillPairReg hl
                                   1819 ;	spillPairReg hl
      000825 26 00                 1820 	ld	h, #0x00
                                   1821 ;	spillPairReg hl
                                   1822 ;	spillPairReg hl
      000827 29                    1823 	add	hl, hl
      000828 29                    1824 	add	hl, hl
      000829 11r00r00              1825 	ld	de, #_shadow_OAM
      00082C 19                    1826 	add	hl, de
                                   1827 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00082D 78                    1828 	ld	a, b
      00082E 22                    1829 	ld	(hl+), a
      00082F 71                    1830 	ld	(hl), c
                                   1831 ;src/main.c:335: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1832 ;src/main.c:336: }
      000830 C9                    1833 	ret
                                   1834 ;src/main.c:338: void playCursorB(){
                                   1835 ;	---------------------------------
                                   1836 ; Function playCursorB
                                   1837 ; ---------------------------------
      000831                       1838 _playCursorB::
                                   1839 ;src/main.c:339: if(cursorIndex >= 3 && cursorIndex <= 7){
      000831 21r00r00              1840 	ld	hl, #_cursorIndex
      000834 2A                    1841 	ld	a, (hl+)
      000835 D6 03                 1842 	sub	a, #0x03
      000837 7E                    1843 	ld	a, (hl)
      000838 DE 00                 1844 	sbc	a, #0x00
      00083A 38 20                 1845 	jr	C, 00102$
      00083C 2B                    1846 	dec	hl
      00083D 3E 07                 1847 	ld	a, #0x07
      00083F 96                    1848 	sub	a, (hl)
      000840 23                    1849 	inc	hl
      000841 3E 00                 1850 	ld	a, #0x00
      000843 9E                    1851 	sbc	a, (hl)
      000844 38 16                 1852 	jr	C, 00102$
                                   1853 ;src/main.c:340: cursorPosition[0] = 16;
      000846 21r00r00              1854 	ld	hl, #_cursorPosition
      000849 3E 10                 1855 	ld	a, #0x10
      00084B 22                    1856 	ld	(hl+), a
      00084C 36 00                 1857 	ld	(hl), #0x00
                                   1858 ;src/main.c:341: cursorPosition[1] = 144;
      00084E 21r02r00              1859 	ld	hl, #(_cursorPosition + 2)
      000851 3E 90                 1860 	ld	a, #0x90
      000853 22                    1861 	ld	(hl+), a
      000854 36 00                 1862 	ld	(hl), #0x00
                                   1863 ;src/main.c:342: cursorIndex = 0;
      000856 AF                    1864 	xor	a, a
      000857 21r00r00              1865 	ld	hl, #_cursorIndex
      00085A 22                    1866 	ld	(hl+), a
      00085B 77                    1867 	ld	(hl), a
      00085C                       1868 00102$:
                                   1869 ;src/main.c:344: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      00085C 21r02r00              1870 	ld	hl, #_cursorPosition + 2
      00085F 46                    1871 	ld	b, (hl)
      000860 21r00r00              1872 	ld	hl, #_cursorPosition
      000863 4E                    1873 	ld	c, (hl)
      000864 21r00r00              1874 	ld	hl, #_cursor
      000867 2A                    1875 	ld	a, (hl+)
      000868 5F                    1876 	ld	e, a
      000869 56                    1877 	ld	d, (hl)
                                   1878 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00086A 6B                    1879 	ld	l, e
                                   1880 ;	spillPairReg hl
                                   1881 ;	spillPairReg hl
      00086B 26 00                 1882 	ld	h, #0x00
                                   1883 ;	spillPairReg hl
                                   1884 ;	spillPairReg hl
      00086D 29                    1885 	add	hl, hl
      00086E 29                    1886 	add	hl, hl
      00086F 11r00r00              1887 	ld	de, #_shadow_OAM
      000872 19                    1888 	add	hl, de
                                   1889 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000873 78                    1890 	ld	a, b
      000874 22                    1891 	ld	(hl+), a
      000875 71                    1892 	ld	(hl), c
                                   1893 ;src/main.c:344: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1894 ;src/main.c:345: }
      000876 C9                    1895 	ret
                                   1896 ;src/main.c:347: void playCursorSelect(){
                                   1897 ;	---------------------------------
                                   1898 ; Function playCursorSelect
                                   1899 ; ---------------------------------
      000877                       1900 _playCursorSelect::
                                   1901 ;src/main.c:348: quickSwitch = 1;
      000877 21r00r00              1902 	ld	hl, #_quickSwitch
      00087A 36 01                 1903 	ld	(hl), #0x01
                                   1904 ;src/main.c:349: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      00087C 21r00r00              1905 	ld	hl, #_rollsLeft
      00087F 2A                    1906 	ld	a, (hl+)
      000880 D6 03                 1907 	sub	a, #0x03
      000882 B6                    1908 	or	a, (hl)
      000883 C8                    1909 	ret	Z
      000884 FAr00r00              1910 	ld	a, (#_scorecardChangeA)
      000887 21r00r00              1911 	ld	hl, #_scorecardChangeB
      00088A 96                    1912 	sub	a, (hl)
      00088B 3E 01                 1913 	ld	a, #0x01
      00088D 28 01                 1914 	jr	Z, 00127$
      00088F AF                    1915 	xor	a, a
      000890                       1916 00127$:
      000890 4F                    1917 	ld	c, a
      000891 CB 41                 1918 	bit	0, c
      000893 C8                    1919 	ret	Z
                                   1920 ;src/main.c:350: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      000894 21r00r00              1921 	ld	hl, #_rollsLeft
      000897 2A                    1922 	ld	a, (hl+)
      000898 D6 03                 1923 	sub	a, #0x03
      00089A 7E                    1924 	ld	a, (hl)
      00089B DE 00                 1925 	sbc	a, #0x00
      00089D D0                    1926 	ret	NC
      00089E 79                    1927 	ld	a, c
      00089F B7                    1928 	or	a, a
      0008A0 C8                    1929 	ret	Z
                                   1930 ;src/main.c:351: viewMode = 1;
      0008A1 21r00r00              1931 	ld	hl, #_viewMode
      0008A4 36 01                 1932 	ld	(hl), #0x01
                                   1933 ;src/main.c:352: cardView(backgroundMap);
      0008A6 11r00r00              1934 	ld	de, #_backgroundMap
      0008A9 D5                    1935 	push	de
      0008AA CDr00r00              1936 	call	_cardView
      0008AD E1                    1937 	pop	hl
                                   1938 ;src/main.c:354: }
      0008AE C9                    1939 	ret
                                   1940 ;src/main.c:358: void playCursor(){
                                   1941 ;	---------------------------------
                                   1942 ; Function playCursor
                                   1943 ; ---------------------------------
      0008AF                       1944 _playCursor::
                                   1945 ;src/main.c:359: switch(joypad()){
      0008AF CDr00r00              1946 	call	_joypad
      0008B2 7B                    1947 	ld	a, e
      0008B3 FE 01                 1948 	cp	a, #0x01
      0008B5 28 1C                 1949 	jr	Z, 00102$
      0008B7 FE 02                 1950 	cp	a, #0x02
      0008B9 28 12                 1951 	jr	Z, 00101$
      0008BB FE 10                 1952 	cp	a, #0x10
      0008BD 28 1A                 1953 	jr	Z, 00103$
      0008BF FE 20                 1954 	cp	a, #0x20
      0008C1 28 1C                 1955 	jr	Z, 00104$
      0008C3 FE 40                 1956 	cp	a, #0x40
      0008C5 28 1E                 1957 	jr	Z, 00106$
      0008C7 D6 80                 1958 	sub	a, #0x80
      0008C9 CAr00r00              1959 	jp	Z,_waitpadup
      0008CC C9                    1960 	ret
                                   1961 ;src/main.c:360: case J_LEFT:
      0008CD                       1962 00101$:
                                   1963 ;src/main.c:361: playCursorLeft();
      0008CD CDrE5r04              1964 	call	_playCursorLeft
                                   1965 ;src/main.c:362: waitpadup();
                                   1966 ;src/main.c:363: break;
      0008D0 C3r00r00              1967 	jp	_waitpadup
                                   1968 ;src/main.c:364: case J_RIGHT:
      0008D3                       1969 00102$:
                                   1970 ;src/main.c:365: playCursorRight();
      0008D3 CDr67r05              1971 	call	_playCursorRight
                                   1972 ;src/main.c:366: waitpadup();
                                   1973 ;src/main.c:367: break;
      0008D6 C3r00r00              1974 	jp	_waitpadup
                                   1975 ;src/main.c:368: case J_A:
      0008D9                       1976 00103$:
                                   1977 ;src/main.c:369: playCursorA();
      0008D9 CDr70r07              1978 	call	_playCursorA
                                   1979 ;src/main.c:370: waitpadup();
                                   1980 ;src/main.c:371: break;
      0008DC C3r00r00              1981 	jp	_waitpadup
                                   1982 ;src/main.c:372: case J_B:
      0008DF                       1983 00104$:
                                   1984 ;src/main.c:373: playCursorB();
      0008DF CDr31r08              1985 	call	_playCursorB
                                   1986 ;src/main.c:374: waitpadup();
                                   1987 ;src/main.c:375: break;
                                   1988 ;src/main.c:376: case J_START:
                                   1989 ;src/main.c:378: waitpadup();
                                   1990 ;src/main.c:379: break;
      0008E2 C3r00r00              1991 	jp	_waitpadup
                                   1992 ;src/main.c:380: case J_SELECT:
      0008E5                       1993 00106$:
                                   1994 ;src/main.c:381: playCursorSelect();
      0008E5 CDr77r08              1995 	call	_playCursorSelect
                                   1996 ;src/main.c:382: waitpadup();
                                   1997 ;src/main.c:384: }
                                   1998 ;src/main.c:385: }
      0008E8 C3r00r00              1999 	jp	_waitpadup
                                   2000 ;src/main.c:388: void main(){
                                   2001 ;	---------------------------------
                                   2002 ; Function main
                                   2003 ; ---------------------------------
      0008EB                       2004 _main::
                                   2005 ;src/main.c:389: initGame();
      0008EB CDrCAr02              2006 	call	_initGame
                                   2007 ;src/main.c:391: DISPLAY_ON;
      0008EE F0r00                 2008 	ldh	a, (_LCDC_REG + 0)
      0008F0 F6 80                 2009 	or	a, #0x80
      0008F2 E0r00                 2010 	ldh	(_LCDC_REG + 0), a
                                   2011 ;src/main.c:393: while(1){
      0008F4                       2012 00107$:
                                   2013 ;src/main.c:394: if(viewMode == 0){
      0008F4 FAr00r00              2014 	ld	a, (#_viewMode)
      0008F7 B7                    2015 	or	a, a
      0008F8 20 05                 2016 	jr	NZ, 00104$
                                   2017 ;src/main.c:395: playCursor();
      0008FA CDrAFr08              2018 	call	_playCursor
      0008FD 18 F5                 2019 	jr	00107$
      0008FF                       2020 00104$:
                                   2021 ;src/main.c:397: else if(viewMode == 1){
      0008FF FAr00r00              2022 	ld	a, (#_viewMode)
      000902 3D                    2023 	dec	a
      000903 20 EF                 2024 	jr	NZ, 00107$
                                   2025 ;src/main.c:398: cardCursor();
      000905 CDr00r00              2026 	call	_cardCursor
                                   2027 ;src/main.c:401: }
      000908 18 EA                 2028 	jr	00107$
                                   2029 	.area _CODE
                                   2030 	.area _INITIALIZER
                                   2031 	.area _CABS (ABS)
