                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _playCursor
                                     13 	.globl _playCursorSelect
                                     14 	.globl _playCursorB
                                     15 	.globl _playCursorA
                                     16 	.globl _rollCheck
                                     17 	.globl _toggleDi
                                     18 	.globl _playCursorRight
                                     19 	.globl _playCursorLeft
                                     20 	.globl _rollTracker
                                     21 	.globl _newTurn
                                     22 	.globl _initGame
                                     23 	.globl _initDi
                                     24 	.globl _moveDiceStruct
                                     25 	.globl _diceToRoll
                                     26 	.globl _setDiFace
                                     27 	.globl _setDiceValues
                                     28 	.globl _turnRollDisplay
                                     29 	.globl _spriteFlip
                                     30 	.globl _scoreDisplay
                                     31 	.globl _rollDi
                                     32 	.globl _cardView
                                     33 	.globl _cardCursor
                                     34 	.globl _betterDelay
                                     35 	.globl _puts
                                     36 	.globl _printf
                                     37 	.globl _set_sprite_data
                                     38 	.globl _set_bkg_tiles
                                     39 	.globl _set_bkg_data
                                     40 	.globl _waitpadup
                                     41 	.globl _joypad
                                     42 ;--------------------------------------------------------
                                     43 ; special function registers
                                     44 ;--------------------------------------------------------
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _DATA
                                     49 ;--------------------------------------------------------
                                     50 ; ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area _INITIALIZED
                                     53 ;--------------------------------------------------------
                                     54 ; absolute external ram data
                                     55 ;--------------------------------------------------------
                                     56 	.area _DABS (ABS)
                                     57 ;--------------------------------------------------------
                                     58 ; global & static initialisations
                                     59 ;--------------------------------------------------------
                                     60 	.area _HOME
                                     61 	.area _GSINIT
                                     62 	.area _GSFINAL
                                     63 	.area _GSINIT
                                     64 ;--------------------------------------------------------
                                     65 ; Home
                                     66 ;--------------------------------------------------------
                                     67 	.area _HOME
                                     68 	.area _HOME
                                     69 ;--------------------------------------------------------
                                     70 ; code
                                     71 ;--------------------------------------------------------
                                     72 	.area _CODE
                                     73 ;src/main.c:29: void setDiceValues(){
                                     74 ;	---------------------------------
                                     75 ; Function setDiceValues
                                     76 ; ---------------------------------
      000000                         77 _setDiceValues::
                                     78 ;src/main.c:30: diceValues[0] = Di1.face;
      000000 21r0Er00                79 	ld	hl, #(_Di1 + 14)
      000003 2A                      80 	ld	a, (hl+)
      000004 4F                      81 	ld	c, a
      000005 46                      82 	ld	b, (hl)
      000006 21r00r00                83 	ld	hl, #_diceValues
      000009 79                      84 	ld	a, c
      00000A 22                      85 	ld	(hl+), a
      00000B 70                      86 	ld	(hl), b
                                     87 ;src/main.c:31: diceValues[1] = Di2.face;
      00000C 21r0Er00                88 	ld	hl, #(_Di2 + 14)
      00000F 2A                      89 	ld	a, (hl+)
      000010 4F                      90 	ld	c, a
      000011 46                      91 	ld	b, (hl)
      000012 21r02r00                92 	ld	hl, #(_diceValues + 2)
      000015 79                      93 	ld	a, c
      000016 22                      94 	ld	(hl+), a
      000017 70                      95 	ld	(hl), b
                                     96 ;src/main.c:32: diceValues[2] = Di3.face;
      000018 21r0Er00                97 	ld	hl, #(_Di3 + 14)
      00001B 2A                      98 	ld	a, (hl+)
      00001C 4F                      99 	ld	c, a
      00001D 46                     100 	ld	b, (hl)
      00001E 21r04r00               101 	ld	hl, #(_diceValues + 4)
      000021 79                     102 	ld	a, c
      000022 22                     103 	ld	(hl+), a
      000023 70                     104 	ld	(hl), b
                                    105 ;src/main.c:33: diceValues[3] = Di4.face;
      000024 21r0Er00               106 	ld	hl, #(_Di4 + 14)
      000027 2A                     107 	ld	a, (hl+)
      000028 4F                     108 	ld	c, a
      000029 46                     109 	ld	b, (hl)
      00002A 21r06r00               110 	ld	hl, #(_diceValues + 6)
      00002D 79                     111 	ld	a, c
      00002E 22                     112 	ld	(hl+), a
      00002F 70                     113 	ld	(hl), b
                                    114 ;src/main.c:34: diceValues[4] = Di5.face;
      000030 21r0Er00               115 	ld	hl, #(_Di5 + 14)
      000033 2A                     116 	ld	a, (hl+)
      000034 4F                     117 	ld	c, a
      000035 46                     118 	ld	b, (hl)
      000036 21r08r00               119 	ld	hl, #(_diceValues + 8)
      000039 79                     120 	ld	a, c
      00003A 22                     121 	ld	(hl+), a
      00003B 70                     122 	ld	(hl), b
                                    123 ;src/main.c:35: }
      00003C C9                     124 	ret
                                    125 ;src/main.c:38: void setDiFace(struct DiceStruct * diSprite){
                                    126 ;	---------------------------------
                                    127 ; Function setDiFace
                                    128 ; ---------------------------------
      00003D                        129 _setDiFace::
      00003D 3B                     130 	dec	sp
                                    131 ;src/main.c:39: rollDi();
      00003E CDr00r00               132 	call	_rollDi
                                    133 ;src/main.c:40: for(i = 0; i != 4; i++){
      000041 AF                     134 	xor	a, a
      000042 21r00r00               135 	ld	hl, #_i
      000045 22                     136 	ld	(hl+), a
      000046 77                     137 	ld	(hl), a
      000047 F8 03                  138 	ldhl	sp,	#3
      000049 2A                     139 	ld	a, (hl+)
      00004A 4F                     140 	ld	c, a
      00004B 46                     141 	ld	b, (hl)
      00004C                        142 00103$:
                                    143 ;src/main.c:41: set_sprite_tile(diSprite->spriteID[i], currentFace[i]);
      00004C 21r00r00               144 	ld	hl, #_i
      00004F 2A                     145 	ld	a, (hl+)
      000050 5F                     146 	ld	e, a
      000051 56                     147 	ld	d, (hl)
      000052 CB 23                  148 	sla	e
      000054 CB 12                  149 	rl	d
      000056 21r00r00               150 	ld	hl, #_currentFace
      000059 19                     151 	add	hl, de
      00005A 7E                     152 	ld	a, (hl)
      00005B F8 00                  153 	ldhl	sp,	#0
      00005D 77                     154 	ld	(hl), a
      00005E 6B                     155 	ld	l, e
      00005F 62                     156 	ld	h, d
      000060 09                     157 	add	hl, bc
                                    158 ;/opt/gbdk/include/gb/gb.h:1326: shadow_OAM[nb].tile=tile;
      000061 6E                     159 	ld	l, (hl)
                                    160 ;	spillPairReg hl
                                    161 ;	spillPairReg hl
      000062 26 00                  162 	ld	h, #0x00
                                    163 ;	spillPairReg hl
                                    164 ;	spillPairReg hl
      000064 29                     165 	add	hl, hl
      000065 29                     166 	add	hl, hl
      000066 11r00r00               167 	ld	de, #_shadow_OAM
      000069 19                     168 	add	hl, de
      00006A 23                     169 	inc	hl
      00006B 23                     170 	inc	hl
      00006C 5D                     171 	ld	e, l
      00006D 54                     172 	ld	d, h
      00006E F8 00                  173 	ldhl	sp,	#0
      000070 7E                     174 	ld	a, (hl)
      000071 12                     175 	ld	(de), a
                                    176 ;src/main.c:40: for(i = 0; i != 4; i++){
      000072 21r00r00               177 	ld	hl, #_i
      000075 34                     178 	inc	(hl)
      000076 20 02                  179 	jr	NZ, 00118$
      000078 23                     180 	inc	hl
      000079 34                     181 	inc	(hl)
      00007A                        182 00118$:
      00007A 21r00r00               183 	ld	hl, #_i
      00007D 2A                     184 	ld	a, (hl+)
      00007E D6 04                  185 	sub	a, #0x04
      000080 B6                     186 	or	a, (hl)
      000081 20 C9                  187 	jr	NZ, 00103$
                                    188 ;src/main.c:43: diSprite->face = diFaceBuf;
      000083 21 0E 00               189 	ld	hl, #0x000e
      000086 09                     190 	add	hl, bc
      000087 4D                     191 	ld	c, l
      000088 44                     192 	ld	b, h
      000089 21r00r00               193 	ld	hl, #_diFaceBuf
      00008C 2A                     194 	ld	a, (hl+)
      00008D 02                     195 	ld	(bc), a
      00008E 03                     196 	inc	bc
      00008F 7E                     197 	ld	a, (hl)
      000090 02                     198 	ld	(bc), a
                                    199 ;src/main.c:44: setDiceValues();
      000091 33                     200 	inc	sp
      000092 C3r00r00               201 	jp	_setDiceValues
                                    202 ;src/main.c:45: }
      000095 33                     203 	inc	sp
      000096 C9                     204 	ret
                                    205 ;src/main.c:48: void diceToRoll(){
                                    206 ;	---------------------------------
                                    207 ; Function diceToRoll
                                    208 ; ---------------------------------
      000097                        209 _diceToRoll::
                                    210 ;src/main.c:49: if(rollsLeft > 0){
      000097 21r01r00               211 	ld	hl, #_rollsLeft + 1
      00009A 3A                     212 	ld	a, (hl-)
      00009B B6                     213 	or	a, (hl)
      00009C C8                     214 	ret	Z
                                    215 ;src/main.c:50: rollsLeft -= 1;
      00009D 2A                     216 	ld	a, (hl+)
      00009E 5F                     217 	ld	e, a
      00009F 3A                     218 	ld	a, (hl-)
      0000A0 57                     219 	ld	d, a
      0000A1 1B                     220 	dec	de
      0000A2 7B                     221 	ld	a, e
      0000A3 22                     222 	ld	(hl+), a
      0000A4 72                     223 	ld	(hl), d
                                    224 ;src/main.c:51: for(j = 0; j != 5; j++){
      0000A5 AF                     225 	xor	a, a
      0000A6 21r00r00               226 	ld	hl, #_j
      0000A9 22                     227 	ld	(hl+), a
      0000AA 77                     228 	ld	(hl), a
      0000AB                        229 00128$:
                                    230 ;src/main.c:52: betterDelay(6);
      0000AB 11 06 00               231 	ld	de, #0x0006
      0000AE D5                     232 	push	de
      0000AF CDr00r00               233 	call	_betterDelay
      0000B2 E1                     234 	pop	hl
                                    235 ;src/main.c:53: if(j == 0){
      0000B3 21r01r00               236 	ld	hl, #_j + 1
      0000B6 3A                     237 	ld	a, (hl-)
      0000B7 B6                     238 	or	a, (hl)
      0000B8 20 10                  239 	jr	NZ, 00123$
                                    240 ;src/main.c:54: if(Di1.inPlay == 1){
      0000BA FAr10r00               241 	ld	a, (#(_Di1 + 16) + 0)
      0000BD 3D                     242 	dec	a
      0000BE 20 6B                  243 	jr	NZ, 00129$
                                    244 ;src/main.c:55: setDiFace(&Di1);
      0000C0 11r00r00               245 	ld	de, #_Di1
      0000C3 D5                     246 	push	de
      0000C4 CDr3Dr00               247 	call	_setDiFace
      0000C7 E1                     248 	pop	hl
      0000C8 18 61                  249 	jr	00129$
      0000CA                        250 00123$:
                                    251 ;src/main.c:59: else if(j == 1){
      0000CA 21r00r00               252 	ld	hl, #_j
      0000CD 2A                     253 	ld	a, (hl+)
      0000CE 3D                     254 	dec	a
      0000CF B6                     255 	or	a, (hl)
      0000D0 20 10                  256 	jr	NZ, 00120$
                                    257 ;src/main.c:60: if(Di2.inPlay == 1){
      0000D2 FAr10r00               258 	ld	a, (#(_Di2 + 16) + 0)
      0000D5 3D                     259 	dec	a
      0000D6 20 53                  260 	jr	NZ, 00129$
                                    261 ;src/main.c:61: setDiFace(&Di2);
      0000D8 11r00r00               262 	ld	de, #_Di2
      0000DB D5                     263 	push	de
      0000DC CDr3Dr00               264 	call	_setDiFace
      0000DF E1                     265 	pop	hl
      0000E0 18 49                  266 	jr	00129$
      0000E2                        267 00120$:
                                    268 ;src/main.c:65: else if(j == 2){
      0000E2 21r00r00               269 	ld	hl, #_j
      0000E5 2A                     270 	ld	a, (hl+)
      0000E6 D6 02                  271 	sub	a, #0x02
      0000E8 B6                     272 	or	a, (hl)
      0000E9 20 10                  273 	jr	NZ, 00117$
                                    274 ;src/main.c:66: if(Di3.inPlay == 1){
      0000EB FAr10r00               275 	ld	a, (#(_Di3 + 16) + 0)
      0000EE 3D                     276 	dec	a
      0000EF 20 3A                  277 	jr	NZ, 00129$
                                    278 ;src/main.c:67: setDiFace(&Di3);
      0000F1 11r00r00               279 	ld	de, #_Di3
      0000F4 D5                     280 	push	de
      0000F5 CDr3Dr00               281 	call	_setDiFace
      0000F8 E1                     282 	pop	hl
      0000F9 18 30                  283 	jr	00129$
      0000FB                        284 00117$:
                                    285 ;src/main.c:71: else if(j == 3){
      0000FB 21r00r00               286 	ld	hl, #_j
      0000FE 2A                     287 	ld	a, (hl+)
      0000FF D6 03                  288 	sub	a, #0x03
      000101 B6                     289 	or	a, (hl)
      000102 20 10                  290 	jr	NZ, 00114$
                                    291 ;src/main.c:72: if(Di4.inPlay == 1){
      000104 FAr10r00               292 	ld	a, (#(_Di4 + 16) + 0)
      000107 3D                     293 	dec	a
      000108 20 21                  294 	jr	NZ, 00129$
                                    295 ;src/main.c:73: setDiFace(&Di4);
      00010A 11r00r00               296 	ld	de, #_Di4
      00010D D5                     297 	push	de
      00010E CDr3Dr00               298 	call	_setDiFace
      000111 E1                     299 	pop	hl
      000112 18 17                  300 	jr	00129$
      000114                        301 00114$:
                                    302 ;src/main.c:77: else if(j == 4){
      000114 21r00r00               303 	ld	hl, #_j
      000117 2A                     304 	ld	a, (hl+)
      000118 D6 04                  305 	sub	a, #0x04
      00011A B6                     306 	or	a, (hl)
      00011B 20 0E                  307 	jr	NZ, 00129$
                                    308 ;src/main.c:78: if(Di5.inPlay == 1){
      00011D FAr10r00               309 	ld	a, (#(_Di5 + 16) + 0)
      000120 3D                     310 	dec	a
      000121 20 08                  311 	jr	NZ, 00129$
                                    312 ;src/main.c:79: setDiFace(&Di5);
      000123 11r00r00               313 	ld	de, #_Di5
      000126 D5                     314 	push	de
      000127 CDr3Dr00               315 	call	_setDiFace
      00012A E1                     316 	pop	hl
      00012B                        317 00129$:
                                    318 ;src/main.c:51: for(j = 0; j != 5; j++){
      00012B 21r00r00               319 	ld	hl, #_j
      00012E 34                     320 	inc	(hl)
      00012F 20 02                  321 	jr	NZ, 00210$
      000131 23                     322 	inc	hl
      000132 34                     323 	inc	(hl)
      000133                        324 00210$:
      000133 21r00r00               325 	ld	hl, #_j
      000136 2A                     326 	ld	a, (hl+)
      000137 D6 05                  327 	sub	a, #0x05
      000139 B6                     328 	or	a, (hl)
      00013A C2rABr00               329 	jp	NZ,00128$
                                    330 ;src/main.c:85: }
      00013D C9                     331 	ret
                                    332 ;src/main.c:88: void moveDiceStruct(struct DiceStruct * diSprite, unsigned int x, unsigned int y){
                                    333 ;	---------------------------------
                                    334 ; Function moveDiceStruct
                                    335 ; ---------------------------------
      00013E                        336 _moveDiceStruct::
      00013E E8 FA                  337 	add	sp, #-6
                                    338 ;src/main.c:89: move_sprite(diSprite->spriteID[0], x, y);
      000140 F8 0C                  339 	ldhl	sp,	#12
      000142 7E                     340 	ld	a, (hl)
      000143 F8 00                  341 	ldhl	sp,	#0
      000145 77                     342 	ld	(hl), a
      000146 2A                     343 	ld	a, (hl+)
      000147 77                     344 	ld	(hl), a
      000148 F8 0A                  345 	ldhl	sp,	#10
      00014A 7E                     346 	ld	a, (hl)
      00014B F8 02                  347 	ldhl	sp,	#2
      00014D 77                     348 	ld	(hl), a
      00014E 2A                     349 	ld	a, (hl+)
      00014F 77                     350 	ld	(hl), a
      000150 F8 08                  351 	ldhl	sp,	#8
      000152 7E                     352 	ld	a, (hl)
      000153 F8 04                  353 	ldhl	sp,	#4
      000155 77                     354 	ld	(hl), a
      000156 F8 09                  355 	ldhl	sp,	#9
      000158 7E                     356 	ld	a, (hl)
      000159 F8 05                  357 	ldhl	sp,	#5
      00015B 32                     358 	ld	(hl-), a
      00015C 2A                     359 	ld	a, (hl+)
      00015D 5F                     360 	ld	e, a
      00015E 56                     361 	ld	d, (hl)
      00015F 1A                     362 	ld	a, (de)
                                    363 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000160 6F                     364 	ld	l, a
      000161 11r00r00               365 	ld	de, #_shadow_OAM+0
                                    366 ;	spillPairReg hl
                                    367 ;	spillPairReg hl
      000164 26 00                  368 	ld	h, #0x00
                                    369 ;	spillPairReg hl
                                    370 ;	spillPairReg hl
      000166 29                     371 	add	hl, hl
      000167 29                     372 	add	hl, hl
      000168 19                     373 	add	hl, de
      000169 4D                     374 	ld	c, l
      00016A 44                     375 	ld	b, h
                                    376 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00016B F8 01                  377 	ldhl	sp,	#1
      00016D 2A                     378 	ld	a, (hl+)
      00016E 23                     379 	inc	hl
      00016F 02                     380 	ld	(bc), a
      000170 03                     381 	inc	bc
                                    382 ;src/main.c:90: move_sprite(diSprite->spriteID[1], x + 8, y);
      000171 3A                     383 	ld	a, (hl-)
      000172 02                     384 	ld	(bc), a
      000173 2A                     385 	ld	a, (hl+)
      000174 23                     386 	inc	hl
      000175 C6 08                  387 	add	a, #0x08
      000177 4F                     388 	ld	c, a
      000178 41                     389 	ld	b, c
      000179 2A                     390 	ld	a, (hl+)
      00017A 5F                     391 	ld	e, a
      00017B 56                     392 	ld	d, (hl)
      00017C 13                     393 	inc	de
      00017D 13                     394 	inc	de
      00017E 1A                     395 	ld	a, (de)
                                    396 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00017F 6F                     397 	ld	l, a
                                    398 ;	spillPairReg hl
                                    399 ;	spillPairReg hl
      000180 26 00                  400 	ld	h, #0x00
                                    401 ;	spillPairReg hl
                                    402 ;	spillPairReg hl
      000182 29                     403 	add	hl, hl
      000183 29                     404 	add	hl, hl
      000184 11r00r00               405 	ld	de, #_shadow_OAM
      000187 19                     406 	add	hl, de
      000188 5D                     407 	ld	e, l
      000189 54                     408 	ld	d, h
                                    409 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00018A F8 00                  410 	ldhl	sp,	#0
      00018C 7E                     411 	ld	a, (hl)
      00018D 12                     412 	ld	(de), a
      00018E 13                     413 	inc	de
      00018F 78                     414 	ld	a, b
      000190 12                     415 	ld	(de), a
                                    416 ;src/main.c:91: move_sprite(diSprite->spriteID[2], x, y + 8);
      000191 7E                     417 	ld	a, (hl)
      000192 C6 08                  418 	add	a, #0x08
      000194 47                     419 	ld	b, a
      000195 F8 03                  420 	ldhl	sp,	#3
      000197 78                     421 	ld	a, b
      000198 22                     422 	ld	(hl+), a
      000199 2A                     423 	ld	a, (hl+)
      00019A 5F                     424 	ld	e, a
      00019B 56                     425 	ld	d, (hl)
      00019C 21 04 00               426 	ld	hl, #0x0004
      00019F 19                     427 	add	hl, de
      0001A0 5D                     428 	ld	e, l
      0001A1 54                     429 	ld	d, h
      0001A2 1A                     430 	ld	a, (de)
                                    431 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0001A3 6F                     432 	ld	l, a
                                    433 ;	spillPairReg hl
                                    434 ;	spillPairReg hl
      0001A4 26 00                  435 	ld	h, #0x00
                                    436 ;	spillPairReg hl
                                    437 ;	spillPairReg hl
      0001A6 29                     438 	add	hl, hl
      0001A7 29                     439 	add	hl, hl
      0001A8 11r00r00               440 	ld	de, #_shadow_OAM
      0001AB 19                     441 	add	hl, de
      0001AC 5D                     442 	ld	e, l
      0001AD 54                     443 	ld	d, h
                                    444 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0001AE F8 03                  445 	ldhl	sp,	#3
      0001B0 3A                     446 	ld	a, (hl-)
      0001B1 12                     447 	ld	(de), a
      0001B2 13                     448 	inc	de
      0001B3 7E                     449 	ld	a, (hl)
      0001B4 12                     450 	ld	(de), a
                                    451 ;src/main.c:92: move_sprite(diSprite->spriteID[3], x + 8, y + 8);
      0001B5 F8 04                  452 	ldhl	sp,#4
      0001B7 2A                     453 	ld	a, (hl+)
      0001B8 5F                     454 	ld	e, a
      0001B9 56                     455 	ld	d, (hl)
      0001BA 21 06 00               456 	ld	hl, #0x0006
      0001BD 19                     457 	add	hl, de
      0001BE 5D                     458 	ld	e, l
      0001BF 54                     459 	ld	d, h
      0001C0 1A                     460 	ld	a, (de)
                                    461 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0001C1 6F                     462 	ld	l, a
                                    463 ;	spillPairReg hl
                                    464 ;	spillPairReg hl
      0001C2 26 00                  465 	ld	h, #0x00
                                    466 ;	spillPairReg hl
                                    467 ;	spillPairReg hl
      0001C4 29                     468 	add	hl, hl
      0001C5 29                     469 	add	hl, hl
      0001C6 11r00r00               470 	ld	de, #_shadow_OAM
      0001C9 19                     471 	add	hl, de
                                    472 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0001CA 78                     473 	ld	a, b
      0001CB 22                     474 	ld	(hl+), a
      0001CC 71                     475 	ld	(hl), c
                                    476 ;src/main.c:92: move_sprite(diSprite->spriteID[3], x + 8, y + 8);
                                    477 ;src/main.c:93: }
      0001CD E8 06                  478 	add	sp, #6
      0001CF C9                     479 	ret
                                    480 ;src/main.c:97: void initDi(struct DiceStruct * diSprite, unsigned int spot){
                                    481 ;	---------------------------------
                                    482 ; Function initDi
                                    483 ; ---------------------------------
      0001D0                        484 _initDi::
      0001D0 E8 F6                  485 	add	sp, #-10
                                    486 ;src/main.c:98: for(i = 0; i != 4; i++){
      0001D2 AF                     487 	xor	a, a
      0001D3 21r00r00               488 	ld	hl, #_i
      0001D6 22                     489 	ld	(hl+), a
      0001D7 77                     490 	ld	(hl), a
      0001D8 F8 0C                  491 	ldhl	sp,	#12
      0001DA 7E                     492 	ld	a, (hl)
      0001DB F8 00                  493 	ldhl	sp,	#0
      0001DD 77                     494 	ld	(hl), a
      0001DE F8 0D                  495 	ldhl	sp,	#13
      0001E0 7E                     496 	ld	a, (hl)
      0001E1 F8 01                  497 	ldhl	sp,	#1
      0001E3 77                     498 	ld	(hl), a
      0001E4 F8 0E                  499 	ldhl	sp,#14
      0001E6 2A                     500 	ld	a, (hl+)
      0001E7 5F                     501 	ld	e, a
      0001E8 56                     502 	ld	d, (hl)
      0001E9 21 01 00               503 	ld	hl, #0x0001
      0001EC 7B                     504 	ld	a, e
      0001ED 95                     505 	sub	a, l
      0001EE 5F                     506 	ld	e, a
      0001EF 7A                     507 	ld	a, d
      0001F0 9C                     508 	sbc	a, h
      0001F1 F8 03                  509 	ldhl	sp,	#3
      0001F3 32                     510 	ld	(hl-), a
      0001F4 73                     511 	ld	(hl), e
      0001F5 2A                     512 	ld	a, (hl+)
      0001F6 23                     513 	inc	hl
      0001F7 32                     514 	ld	(hl-), a
      0001F8 2A                     515 	ld	a, (hl+)
      0001F9 23                     516 	inc	hl
      0001FA 77                     517 	ld	(hl), a
      0001FB 3E 02                  518 	ld	a, #0x02
      0001FD                        519 00116$:
      0001FD F8 04                  520 	ldhl	sp,	#4
      0001FF CB 26                  521 	sla	(hl)
      000201 23                     522 	inc	hl
      000202 CB 16                  523 	rl	(hl)
      000204 3D                     524 	dec	a
      000205 20 F6                  525 	jr	NZ, 00116$
      000207                        526 00102$:
                                    527 ;src/main.c:102: diSprite->position = spot;
      000207 D1                     528 	pop	de
      000208 D5                     529 	push	de
      000209 21 0C 00               530 	ld	hl, #0x000c
      00020C 19                     531 	add	hl, de
      00020D 4D                     532 	ld	c, l
      00020E 44                     533 	ld	b, h
      00020F F8 0E                  534 	ldhl	sp,	#14
      000211 2A                     535 	ld	a, (hl+)
      000212 02                     536 	ld	(bc), a
      000213 03                     537 	inc	bc
      000214 7E                     538 	ld	a, (hl)
      000215 02                     539 	ld	(bc), a
                                    540 ;src/main.c:105: spriteNumber = (4 * (spot - 1) ) + i;
      000216 F8 04                  541 	ldhl	sp,#4
      000218 2A                     542 	ld	a, (hl+)
      000219 5F                     543 	ld	e, a
      00021A 56                     544 	ld	d, (hl)
      00021B 21r00r00               545 	ld	hl, #_i
      00021E 2A                     546 	ld	a,	(hl+)
      00021F 66                     547 	ld	h, (hl)
      000220 6F                     548 	ld	l, a
      000221 19                     549 	add	hl, de
      000222 4D                     550 	ld	c, l
      000223 44                     551 	ld	b, h
                                    552 ;src/main.c:108: diSprite->spriteID[i] = spriteNumber;
      000224 21r00r00               553 	ld	hl, #_i
      000227 2A                     554 	ld	a, (hl+)
      000228 56                     555 	ld	d, (hl)
      000229 87                     556 	add	a, a
      00022A CB 12                  557 	rl	d
      00022C 5F                     558 	ld	e, a
      00022D E1                     559 	pop	hl
      00022E E5                     560 	push	hl
      00022F 19                     561 	add	hl, de
      000230 5D                     562 	ld	e, l
      000231 54                     563 	ld	d, h
      000232 79                     564 	ld	a, c
      000233 12                     565 	ld	(de), a
      000234 13                     566 	inc	de
      000235 78                     567 	ld	a, b
      000236 12                     568 	ld	(de), a
                                    569 ;src/main.c:111: diSprite->x = diStartPosition[0] + ( (diSprite->position - 1) * diSpacing);
      000237 D1                     570 	pop	de
      000238 D5                     571 	push	de
      000239 21 08 00               572 	ld	hl, #0x0008
      00023C 19                     573 	add	hl, de
      00023D E5                     574 	push	hl
      00023E 7D                     575 	ld	a, l
      00023F F8 08                  576 	ldhl	sp,	#8
      000241 77                     577 	ld	(hl), a
      000242 E1                     578 	pop	hl
      000243 7C                     579 	ld	a, h
      000244 F8 07                  580 	ldhl	sp,	#7
      000246 77                     581 	ld	(hl), a
      000247 21r00r00               582 	ld	hl, #_diStartPosition
      00024A 2A                     583 	ld	a, (hl+)
      00024B 4F                     584 	ld	c, a
      00024C 46                     585 	ld	b, (hl)
      00024D 21r00r00               586 	ld	hl, #_diSpacing
      000250 2A                     587 	ld	a, (hl+)
      000251 5F                     588 	ld	e, a
      000252 56                     589 	ld	d, (hl)
      000253 C5                     590 	push	bc
      000254 D5                     591 	push	de
      000255 F8 06                  592 	ldhl	sp,	#6
      000257 2A                     593 	ld	a, (hl+)
      000258 5F                     594 	ld	e, a
      000259 56                     595 	ld	d, (hl)
      00025A D5                     596 	push	de
      00025B CDr00r00               597 	call	__mulint
      00025E E8 04                  598 	add	sp, #4
      000260 6B                     599 	ld	l, e
                                    600 ;	spillPairReg hl
                                    601 ;	spillPairReg hl
      000261 62                     602 	ld	h, d
                                    603 ;	spillPairReg hl
                                    604 ;	spillPairReg hl
      000262 C1                     605 	pop	bc
      000263 09                     606 	add	hl, bc
      000264 4D                     607 	ld	c, l
      000265 44                     608 	ld	b, h
      000266 F8 06                  609 	ldhl	sp,	#6
      000268 2A                     610 	ld	a,	(hl+)
      000269 66                     611 	ld	h, (hl)
      00026A 6F                     612 	ld	l, a
      00026B 79                     613 	ld	a, c
      00026C 22                     614 	ld	(hl+), a
      00026D 70                     615 	ld	(hl), b
                                    616 ;src/main.c:112: diSprite->y = diStartPosition[1];
      00026E D1                     617 	pop	de
      00026F D5                     618 	push	de
      000270 21 0A 00               619 	ld	hl, #0x000a
      000273 19                     620 	add	hl, de
      000274 4D                     621 	ld	c, l
      000275 44                     622 	ld	b, h
      000276 11r02r00               623 	ld	de, #(_diStartPosition + 2)
      000279 1A                     624 	ld	a, (de)
      00027A F8 08                  625 	ldhl	sp,	#8
      00027C 22                     626 	ld	(hl+), a
      00027D 13                     627 	inc	de
      00027E 1A                     628 	ld	a, (de)
      00027F 32                     629 	ld	(hl-), a
      000280 59                     630 	ld	e, c
      000281 50                     631 	ld	d, b
      000282 2A                     632 	ld	a, (hl+)
      000283 12                     633 	ld	(de), a
      000284 13                     634 	inc	de
      000285 7E                     635 	ld	a, (hl)
      000286 12                     636 	ld	(de), a
                                    637 ;src/main.c:98: for(i = 0; i != 4; i++){
      000287 21r00r00               638 	ld	hl, #_i
      00028A 34                     639 	inc	(hl)
      00028B 20 02                  640 	jr	NZ, 00118$
      00028D 23                     641 	inc	hl
      00028E 34                     642 	inc	(hl)
      00028F                        643 00118$:
      00028F 21r00r00               644 	ld	hl, #_i
      000292 2A                     645 	ld	a, (hl+)
      000293 D6 04                  646 	sub	a, #0x04
      000295 B6                     647 	or	a, (hl)
      000296 C2r07r02               648 	jp	NZ,00102$
                                    649 ;src/main.c:115: diSprite->inPlay = 1;
      000299 D1                     650 	pop	de
      00029A D5                     651 	push	de
      00029B 21 10 00               652 	ld	hl, #0x0010
      00029E 19                     653 	add	hl, de
      00029F 36 01                  654 	ld	(hl), #0x01
                                    655 ;src/main.c:118: moveDiceStruct(diSprite, diSprite->x, diSprite->y);
      0002A1 69                     656 	ld	l, c
      0002A2 60                     657 	ld	h, b
      0002A3 2A                     658 	ld	a, (hl+)
      0002A4 4F                     659 	ld	c, a
      0002A5 46                     660 	ld	b, (hl)
      0002A6 F8 06                  661 	ldhl	sp,#6
      0002A8 2A                     662 	ld	a, (hl+)
      0002A9 5F                     663 	ld	e, a
      0002AA 56                     664 	ld	d, (hl)
      0002AB 1A                     665 	ld	a, (de)
      0002AC 6F                     666 	ld	l, a
                                    667 ;	spillPairReg hl
                                    668 ;	spillPairReg hl
      0002AD 13                     669 	inc	de
      0002AE 1A                     670 	ld	a, (de)
      0002AF 67                     671 	ld	h, a
                                    672 ;	spillPairReg hl
                                    673 ;	spillPairReg hl
      0002B0 C5                     674 	push	bc
      0002B1 E5                     675 	push	hl
      0002B2 F8 04                  676 	ldhl	sp,	#4
      0002B4 2A                     677 	ld	a, (hl+)
      0002B5 5F                     678 	ld	e, a
      0002B6 56                     679 	ld	d, (hl)
      0002B7 D5                     680 	push	de
      0002B8 CDr3Er01               681 	call	_moveDiceStruct
      0002BB E8 06                  682 	add	sp, #6
                                    683 ;src/main.c:121: setDiFace(diSprite);
      0002BD F8 0C                  684 	ldhl	sp,	#12
      0002BF 2A                     685 	ld	a, (hl+)
      0002C0 5F                     686 	ld	e, a
      0002C1 56                     687 	ld	d, (hl)
      0002C2 D5                     688 	push	de
      0002C3 CDr3Dr00               689 	call	_setDiFace
      0002C6 E1                     690 	pop	hl
                                    691 ;src/main.c:122: }
      0002C7 E8 0A                  692 	add	sp, #10
      0002C9 C9                     693 	ret
                                    694 ;src/main.c:125: void initGame(){
                                    695 ;	---------------------------------
                                    696 ; Function initGame
                                    697 ; ---------------------------------
      0002CA                        698 _initGame::
                                    699 ;src/main.c:126: set_sprite_data(0, 6, Sprites);
      0002CA 11r00r00               700 	ld	de, #_Sprites
      0002CD D5                     701 	push	de
      0002CE 21 00 06               702 	ld	hl, #0x600
      0002D1 E5                     703 	push	hl
      0002D2 CDr00r00               704 	call	_set_sprite_data
      0002D5 E8 04                  705 	add	sp, #4
                                    706 ;src/main.c:127: set_sprite_tile(cursor, 5);
      0002D7 21r00r00               707 	ld	hl, #_cursor
      0002DA 2A                     708 	ld	a, (hl+)
      0002DB 5F                     709 	ld	e, a
      0002DC 7E                     710 	ld	a, (hl)
                                    711 ;/opt/gbdk/include/gb/gb.h:1326: shadow_OAM[nb].tile=tile;
      0002DD 01r00r00               712 	ld	bc, #_shadow_OAM+0
      0002E0 6B                     713 	ld	l, e
                                    714 ;	spillPairReg hl
                                    715 ;	spillPairReg hl
      0002E1 26 00                  716 	ld	h, #0x00
                                    717 ;	spillPairReg hl
                                    718 ;	spillPairReg hl
      0002E3 29                     719 	add	hl, hl
      0002E4 29                     720 	add	hl, hl
      0002E5 09                     721 	add	hl, bc
      0002E6 23                     722 	inc	hl
      0002E7 23                     723 	inc	hl
      0002E8 36 05                  724 	ld	(hl), #0x05
                                    725 ;src/main.c:128: set_bkg_data(0, 128, backgroundData);
      0002EA 11r00r00               726 	ld	de, #_backgroundData
      0002ED D5                     727 	push	de
      0002EE 21 00 80               728 	ld	hl, #0x8000
      0002F1 E5                     729 	push	hl
      0002F2 CDr00r00               730 	call	_set_bkg_data
      0002F5 E8 04                  731 	add	sp, #4
                                    732 ;src/main.c:129: set_bkg_tiles(0, 0, 20, 32, backgroundMap);
      0002F7 11r00r00               733 	ld	de, #_backgroundMap
      0002FA D5                     734 	push	de
      0002FB 21 14 20               735 	ld	hl, #0x2014
      0002FE E5                     736 	push	hl
      0002FF AF                     737 	xor	a, a
      000300 0F                     738 	rrca
      000301 F5                     739 	push	af
      000302 CDr00r00               740 	call	_set_bkg_tiles
      000305 E8 06                  741 	add	sp, #6
                                    742 ;src/main.c:130: viewMode = 0;
      000307 21r00r00               743 	ld	hl, #_viewMode
      00030A 36 00                  744 	ld	(hl), #0x00
                                    745 ;src/main.c:132: SHOW_BKG;
      00030C F0r00                  746 	ldh	a, (_LCDC_REG + 0)
      00030E F6 01                  747 	or	a, #0x01
      000310 E0r00                  748 	ldh	(_LCDC_REG + 0), a
                                    749 ;src/main.c:134: initDi(&Di1, 1);
      000312 11 01 00               750 	ld	de, #0x0001
      000315 D5                     751 	push	de
      000316 11r00r00               752 	ld	de, #_Di1
      000319 D5                     753 	push	de
      00031A CDrD0r01               754 	call	_initDi
      00031D E8 04                  755 	add	sp, #4
                                    756 ;src/main.c:135: initDi(&Di2, 2);
      00031F 11 02 00               757 	ld	de, #0x0002
      000322 D5                     758 	push	de
      000323 11r00r00               759 	ld	de, #_Di2
      000326 D5                     760 	push	de
      000327 CDrD0r01               761 	call	_initDi
      00032A E8 04                  762 	add	sp, #4
                                    763 ;src/main.c:136: initDi(&Di3, 3);
      00032C 11 03 00               764 	ld	de, #0x0003
      00032F D5                     765 	push	de
      000330 11r00r00               766 	ld	de, #_Di3
      000333 D5                     767 	push	de
      000334 CDrD0r01               768 	call	_initDi
      000337 E8 04                  769 	add	sp, #4
                                    770 ;src/main.c:137: initDi(&Di4, 4);
      000339 11 04 00               771 	ld	de, #0x0004
      00033C D5                     772 	push	de
      00033D 11r00r00               773 	ld	de, #_Di4
      000340 D5                     774 	push	de
      000341 CDrD0r01               775 	call	_initDi
      000344 E8 04                  776 	add	sp, #4
                                    777 ;src/main.c:138: initDi(&Di5, 5);
      000346 11 05 00               778 	ld	de, #0x0005
      000349 D5                     779 	push	de
      00034A 11r00r00               780 	ld	de, #_Di5
      00034D D5                     781 	push	de
      00034E CDrD0r01               782 	call	_initDi
      000351 E8 04                  783 	add	sp, #4
                                    784 ;src/main.c:139: spriteFlip();
      000353 CDr00r00               785 	call	_spriteFlip
                                    786 ;src/main.c:142: cursorIndex = 0;
      000356 AF                     787 	xor	a, a
      000357 21r00r00               788 	ld	hl, #_cursorIndex
      00035A 22                     789 	ld	(hl+), a
      00035B 77                     790 	ld	(hl), a
                                    791 ;src/main.c:143: cursorPosition[0] = 16;
      00035C 21r00r00               792 	ld	hl, #_cursorPosition
      00035F 3E 10                  793 	ld	a, #0x10
      000361 22                     794 	ld	(hl+), a
      000362 36 00                  795 	ld	(hl), #0x00
                                    796 ;src/main.c:144: cursorPosition[1] = 144;
      000364 01r02r00               797 	ld	bc, #_cursorPosition + 2
      000367 69                     798 	ld	l, c
      000368 60                     799 	ld	h, b
      000369 3E 90                  800 	ld	a, #0x90
      00036B 22                     801 	ld	(hl+), a
      00036C 36 00                  802 	ld	(hl), #0x00
                                    803 ;src/main.c:145: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      00036E 0A                     804 	ld	a, (bc)
      00036F 47                     805 	ld	b, a
      000370 21r00r00               806 	ld	hl, #_cursorPosition
      000373 4E                     807 	ld	c, (hl)
      000374 21r00r00               808 	ld	hl, #_cursor
      000377 2A                     809 	ld	a, (hl+)
      000378 5F                     810 	ld	e, a
      000379 56                     811 	ld	d, (hl)
                                    812 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00037A 6B                     813 	ld	l, e
                                    814 ;	spillPairReg hl
                                    815 ;	spillPairReg hl
      00037B 26 00                  816 	ld	h, #0x00
                                    817 ;	spillPairReg hl
                                    818 ;	spillPairReg hl
      00037D 29                     819 	add	hl, hl
      00037E 29                     820 	add	hl, hl
      00037F 11r00r00               821 	ld	de, #_shadow_OAM
      000382 19                     822 	add	hl, de
                                    823 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000383 78                     824 	ld	a, b
      000384 22                     825 	ld	(hl+), a
      000385 71                     826 	ld	(hl), c
                                    827 ;src/main.c:147: scoreDisplay();
      000386 CDr00r00               828 	call	_scoreDisplay
                                    829 ;src/main.c:149: rollsLeft = 3;
      000389 21r00r00               830 	ld	hl, #_rollsLeft
      00038C 3E 03                  831 	ld	a, #0x03
      00038E 22                     832 	ld	(hl+), a
      00038F AF                     833 	xor	a, a
      000390 77                     834 	ld	(hl), a
                                    835 ;src/main.c:150: turn = 1;
      000391 21r00r00               836 	ld	hl, #_turn
      000394 3E 01                  837 	ld	a, #0x01
      000396 22                     838 	ld	(hl+), a
      000397 AF                     839 	xor	a, a
      000398 77                     840 	ld	(hl), a
                                    841 ;src/main.c:152: turnRollDisplay();
      000399 CDr00r00               842 	call	_turnRollDisplay
                                    843 ;src/main.c:154: SHOW_SPRITES;
      00039C F0r00                  844 	ldh	a, (_LCDC_REG + 0)
      00039E F6 02                  845 	or	a, #0x02
      0003A0 E0r00                  846 	ldh	(_LCDC_REG + 0), a
                                    847 ;src/main.c:155: }
      0003A2 C9                     848 	ret
                                    849 ;src/main.c:158: void newTurn(){
                                    850 ;	---------------------------------
                                    851 ; Function newTurn
                                    852 ; ---------------------------------
      0003A3                        853 _newTurn::
                                    854 ;src/main.c:159: turn++;
      0003A3 21r00r00               855 	ld	hl, #_turn
      0003A6 34                     856 	inc	(hl)
      0003A7 20 02                  857 	jr	NZ, 00138$
      0003A9 23                     858 	inc	hl
      0003AA 34                     859 	inc	(hl)
      0003AB                        860 00138$:
                                    861 ;src/main.c:160: rollsLeft = 3;
      0003AB 21r00r00               862 	ld	hl, #_rollsLeft
      0003AE 3E 03                  863 	ld	a, #0x03
      0003B0 22                     864 	ld	(hl+), a
      0003B1 AF                     865 	xor	a, a
      0003B2 77                     866 	ld	(hl), a
                                    867 ;src/main.c:161: turnRollDisplay();
      0003B3 CDr00r00               868 	call	_turnRollDisplay
                                    869 ;src/main.c:162: rollsEnabled = 1;
      0003B6 21r00r00               870 	ld	hl, #_rollsEnabled
      0003B9 36 01                  871 	ld	(hl), #0x01
                                    872 ;src/main.c:163: scorecardChangeA = 0;
      0003BB 21r00r00               873 	ld	hl, #_scorecardChangeA
      0003BE 36 00                  874 	ld	(hl), #0x00
                                    875 ;src/main.c:164: scorecardChangeB = 0;
      0003C0 21r00r00               876 	ld	hl, #_scorecardChangeB
      0003C3 36 00                  877 	ld	(hl), #0x00
                                    878 ;src/main.c:165: if(Di1.inPlay == 0){
      0003C5 21r10r00               879 	ld	hl, #_Di1 + 16
      0003C8 7E                     880 	ld	a, (hl)
      0003C9 B7                     881 	or	a, a
      0003CA 20 19                  882 	jr	NZ, 00102$
                                    883 ;src/main.c:166: Di1.inPlay = 1;
      0003CC 36 01                  884 	ld	(hl), #0x01
                                    885 ;src/main.c:167: moveDiceStruct(&Di1, Di1.x, rollPosY);
      0003CE 21r00r00               886 	ld	hl, #_rollPosY
      0003D1 2A                     887 	ld	a, (hl+)
      0003D2 4F                     888 	ld	c, a
      0003D3 46                     889 	ld	b, (hl)
      0003D4 21r08r00               890 	ld	hl, #_Di1 + 8
      0003D7 2A                     891 	ld	a,	(hl+)
      0003D8 66                     892 	ld	h, (hl)
                                    893 ;	spillPairReg hl
      0003D9 6F                     894 	ld	l, a
                                    895 ;	spillPairReg hl
                                    896 ;	spillPairReg hl
      0003DA C5                     897 	push	bc
      0003DB E5                     898 	push	hl
      0003DC 11r00r00               899 	ld	de, #_Di1
      0003DF D5                     900 	push	de
      0003E0 CDr3Er01               901 	call	_moveDiceStruct
      0003E3 E8 06                  902 	add	sp, #6
      0003E5                        903 00102$:
                                    904 ;src/main.c:169: if(Di2.inPlay == 0){
      0003E5 21r10r00               905 	ld	hl, #_Di2 + 16
      0003E8 7E                     906 	ld	a, (hl)
      0003E9 B7                     907 	or	a, a
      0003EA 20 19                  908 	jr	NZ, 00104$
                                    909 ;src/main.c:170: Di2.inPlay = 1;
      0003EC 36 01                  910 	ld	(hl), #0x01
                                    911 ;src/main.c:171: moveDiceStruct(&Di2, Di2.x, rollPosY);
      0003EE 21r00r00               912 	ld	hl, #_rollPosY
      0003F1 2A                     913 	ld	a, (hl+)
      0003F2 4F                     914 	ld	c, a
      0003F3 46                     915 	ld	b, (hl)
      0003F4 21r08r00               916 	ld	hl, #_Di2 + 8
      0003F7 2A                     917 	ld	a,	(hl+)
      0003F8 66                     918 	ld	h, (hl)
                                    919 ;	spillPairReg hl
      0003F9 6F                     920 	ld	l, a
                                    921 ;	spillPairReg hl
                                    922 ;	spillPairReg hl
      0003FA C5                     923 	push	bc
      0003FB E5                     924 	push	hl
      0003FC 11r00r00               925 	ld	de, #_Di2
      0003FF D5                     926 	push	de
      000400 CDr3Er01               927 	call	_moveDiceStruct
      000403 E8 06                  928 	add	sp, #6
      000405                        929 00104$:
                                    930 ;src/main.c:173: if(Di3.inPlay == 0){
      000405 21r10r00               931 	ld	hl, #_Di3 + 16
      000408 7E                     932 	ld	a, (hl)
      000409 B7                     933 	or	a, a
      00040A 20 19                  934 	jr	NZ, 00106$
                                    935 ;src/main.c:174: Di3.inPlay = 1;
      00040C 36 01                  936 	ld	(hl), #0x01
                                    937 ;src/main.c:175: moveDiceStruct(&Di3, Di3.x, rollPosY);
      00040E 21r00r00               938 	ld	hl, #_rollPosY
      000411 2A                     939 	ld	a, (hl+)
      000412 4F                     940 	ld	c, a
      000413 46                     941 	ld	b, (hl)
      000414 21r08r00               942 	ld	hl, #_Di3 + 8
      000417 2A                     943 	ld	a,	(hl+)
      000418 66                     944 	ld	h, (hl)
                                    945 ;	spillPairReg hl
      000419 6F                     946 	ld	l, a
                                    947 ;	spillPairReg hl
                                    948 ;	spillPairReg hl
      00041A C5                     949 	push	bc
      00041B E5                     950 	push	hl
      00041C 11r00r00               951 	ld	de, #_Di3
      00041F D5                     952 	push	de
      000420 CDr3Er01               953 	call	_moveDiceStruct
      000423 E8 06                  954 	add	sp, #6
      000425                        955 00106$:
                                    956 ;src/main.c:177: if(Di4.inPlay == 0){
      000425 21r10r00               957 	ld	hl, #_Di4 + 16
      000428 7E                     958 	ld	a, (hl)
      000429 B7                     959 	or	a, a
      00042A 20 19                  960 	jr	NZ, 00108$
                                    961 ;src/main.c:178: Di4.inPlay = 1;
      00042C 36 01                  962 	ld	(hl), #0x01
                                    963 ;src/main.c:179: moveDiceStruct(&Di4, Di4.x, rollPosY);
      00042E 21r00r00               964 	ld	hl, #_rollPosY
      000431 2A                     965 	ld	a, (hl+)
      000432 4F                     966 	ld	c, a
      000433 46                     967 	ld	b, (hl)
      000434 21r08r00               968 	ld	hl, #_Di4 + 8
      000437 2A                     969 	ld	a,	(hl+)
      000438 66                     970 	ld	h, (hl)
                                    971 ;	spillPairReg hl
      000439 6F                     972 	ld	l, a
                                    973 ;	spillPairReg hl
                                    974 ;	spillPairReg hl
      00043A C5                     975 	push	bc
      00043B E5                     976 	push	hl
      00043C 11r00r00               977 	ld	de, #_Di4
      00043F D5                     978 	push	de
      000440 CDr3Er01               979 	call	_moveDiceStruct
      000443 E8 06                  980 	add	sp, #6
      000445                        981 00108$:
                                    982 ;src/main.c:181: if(Di5.inPlay == 0){
      000445 21r10r00               983 	ld	hl, #_Di5 + 16
      000448 7E                     984 	ld	a, (hl)
      000449 B7                     985 	or	a, a
      00044A C0                     986 	ret	NZ
                                    987 ;src/main.c:182: Di5.inPlay = 1;
      00044B 36 01                  988 	ld	(hl), #0x01
                                    989 ;src/main.c:183: moveDiceStruct(&Di5, Di5.x, rollPosY);
      00044D 21r00r00               990 	ld	hl, #_rollPosY
      000450 2A                     991 	ld	a, (hl+)
      000451 4F                     992 	ld	c, a
      000452 46                     993 	ld	b, (hl)
      000453 21r08r00               994 	ld	hl, #_Di5 + 8
      000456 2A                     995 	ld	a,	(hl+)
      000457 66                     996 	ld	h, (hl)
                                    997 ;	spillPairReg hl
      000458 6F                     998 	ld	l, a
                                    999 ;	spillPairReg hl
                                   1000 ;	spillPairReg hl
      000459 C5                    1001 	push	bc
      00045A E5                    1002 	push	hl
      00045B 11r00r00              1003 	ld	de, #_Di5
      00045E D5                    1004 	push	de
      00045F CDr3Er01              1005 	call	_moveDiceStruct
      000462 E8 06                 1006 	add	sp, #6
                                   1007 ;src/main.c:185: }
      000464 C9                    1008 	ret
                                   1009 ;src/main.c:188: void rollTracker(){
                                   1010 ;	---------------------------------
                                   1011 ; Function rollTracker
                                   1012 ; ---------------------------------
      000465                       1013 _rollTracker::
                                   1014 ;src/main.c:189: turnsPassed = 0;
      000465 AF                    1015 	xor	a, a
      000466 21r00r00              1016 	ld	hl, #_turnsPassed
      000469 22                    1017 	ld	(hl+), a
      00046A 77                    1018 	ld	(hl), a
                                   1019 ;src/main.c:190: if(rollsLeft == 0){
      00046B 21r01r00              1020 	ld	hl, #_rollsLeft + 1
      00046E 3A                    1021 	ld	a, (hl-)
                                   1022 ;src/main.c:192: for(i = 0; i != 13; i++){
      00046F B6                    1023 	or	a,(hl)
      000470 C2r0Cr05              1024 	jp	NZ,00123$
      000473 21r00r00              1025 	ld	hl, #_i
      000476 22                    1026 	ld	(hl+), a
      000477 77                    1027 	ld	(hl), a
      000478                       1028 00125$:
                                   1029 ;src/main.c:193: if(scorecard[i] != 255){
      000478 21r00r00              1030 	ld	hl, #_i
      00047B 2A                    1031 	ld	a, (hl+)
      00047C 4F                    1032 	ld	c, a
      00047D 46                    1033 	ld	b, (hl)
      00047E CB 21                 1034 	sla	c
      000480 CB 10                 1035 	rl	b
      000482 21r00r00              1036 	ld	hl, #_scorecard
      000485 09                    1037 	add	hl, bc
      000486 2A                    1038 	ld	a, (hl+)
      000487 4F                    1039 	ld	c, a
      000488 46                    1040 	ld	b, (hl)
      000489 79                    1041 	ld	a, c
      00048A 3C                    1042 	inc	a
      00048B B0                    1043 	or	a, b
      00048C 28 08                 1044 	jr	Z, 00126$
                                   1045 ;src/main.c:194: turnsPassed++;
      00048E 21r00r00              1046 	ld	hl, #_turnsPassed
      000491 34                    1047 	inc	(hl)
      000492 20 02                 1048 	jr	NZ, 00186$
      000494 23                    1049 	inc	hl
      000495 34                    1050 	inc	(hl)
      000496                       1051 00186$:
      000496                       1052 00126$:
                                   1053 ;src/main.c:192: for(i = 0; i != 13; i++){
      000496 21r00r00              1054 	ld	hl, #_i
      000499 34                    1055 	inc	(hl)
      00049A 20 02                 1056 	jr	NZ, 00187$
      00049C 23                    1057 	inc	hl
      00049D 34                    1058 	inc	(hl)
      00049E                       1059 00187$:
      00049E 21r00r00              1060 	ld	hl, #_i
      0004A1 2A                    1061 	ld	a, (hl+)
      0004A2 D6 0D                 1062 	sub	a, #0x0d
      0004A4 B6                    1063 	or	a, (hl)
      0004A5 20 D1                 1064 	jr	NZ, 00125$
                                   1065 ;src/main.c:198: if(turnsPassed < turn){
      0004A7 11r00r00              1066 	ld	de, #_turnsPassed
      0004AA 21r00r00              1067 	ld	hl, #_turn
      0004AD 1A                    1068 	ld	a, (de)
      0004AE 13                    1069 	inc	de
      0004AF 96                    1070 	sub	a, (hl)
      0004B0 23                    1071 	inc	hl
      0004B1 1A                    1072 	ld	a, (de)
      0004B2 9E                    1073 	sbc	a, (hl)
      0004B3 30 07                 1074 	jr	NC, 00118$
                                   1075 ;src/main.c:199: rollsEnabled = 0;
      0004B5 21r00r00              1076 	ld	hl, #_rollsEnabled
      0004B8 36 00                 1077 	ld	(hl), #0x00
      0004BA 18 5C                 1078 	jr	00124$
      0004BC                       1079 00118$:
                                   1080 ;src/main.c:202: else if(turnsPassed == turn){
      0004BC FAr00r00              1081 	ld	a, (#_turnsPassed)
      0004BF 21r00r00              1082 	ld	hl, #_turn
      0004C2 96                    1083 	sub	a, (hl)
      0004C3 20 53                 1084 	jr	NZ, 00124$
      0004C5 FAr01r00              1085 	ld	a, (#_turnsPassed + 1)
      0004C8 21r01r00              1086 	ld	hl, #_turn + 1
      0004CB 96                    1087 	sub	a, (hl)
      0004CC 20 4A                 1088 	jr	NZ, 00124$
                                   1089 ;src/main.c:203: if(turn == 13){
      0004CE 21r00r00              1090 	ld	hl, #_turn
      0004D1 2A                    1091 	ld	a, (hl+)
      0004D2 D6 0D                 1092 	sub	a, #0x0d
      0004D4 B6                    1093 	or	a, (hl)
      0004D5 20 1E                 1094 	jr	NZ, 00113$
                                   1095 ;src/main.c:204: if(scorecard[6] == 0){
      0004D7 21r0Cr00              1096 	ld	hl, #(_scorecard + 12)
      0004DA 2A                    1097 	ld	a, (hl+)
      0004DB 4F                    1098 	ld	c, a
      0004DC 46                    1099 	ld	b, (hl)
      0004DD 78                    1100 	ld	a, b
      0004DE B1                    1101 	or	a, c
      0004DF 20 07                 1102 	jr	NZ, 00107$
                                   1103 ;src/main.c:205: endGame = 1;
      0004E1 21r00r00              1104 	ld	hl, #_endGame
      0004E4 36 01                 1105 	ld	(hl), #0x01
      0004E6 18 30                 1106 	jr	00124$
      0004E8                       1107 00107$:
                                   1108 ;src/main.c:207: else if(scorecard[6] == 50){
      0004E8 79                    1109 	ld	a, c
      0004E9 D6 32                 1110 	sub	a, #0x32
      0004EB B0                    1111 	or	a, b
      0004EC 20 2A                 1112 	jr	NZ, 00124$
                                   1113 ;src/main.c:208: endGame = 1;
      0004EE 21r00r00              1114 	ld	hl, #_endGame
      0004F1 36 01                 1115 	ld	(hl), #0x01
      0004F3 18 23                 1116 	jr	00124$
      0004F5                       1117 00113$:
                                   1118 ;src/main.c:211: else if(turn >= 13){
      0004F5 21r00r00              1119 	ld	hl, #_turn
      0004F8 2A                    1120 	ld	a, (hl+)
      0004F9 D6 0D                 1121 	sub	a, #0x0d
      0004FB 7E                    1122 	ld	a, (hl)
      0004FC DE 00                 1123 	sbc	a, #0x00
      0004FE 38 07                 1124 	jr	C, 00110$
                                   1125 ;src/main.c:212: endGame = 1;
      000500 21r00r00              1126 	ld	hl, #_endGame
      000503 36 01                 1127 	ld	(hl), #0x01
      000505 18 11                 1128 	jr	00124$
      000507                       1129 00110$:
                                   1130 ;src/main.c:215: newTurn();
      000507 CDrA3r03              1131 	call	_newTurn
      00050A 18 0C                 1132 	jr	00124$
      00050C                       1133 00123$:
                                   1134 ;src/main.c:219: else if(rollsLeft > 0){
      00050C 21r01r00              1135 	ld	hl, #_rollsLeft + 1
      00050F 3A                    1136 	ld	a, (hl-)
      000510 B6                    1137 	or	a, (hl)
      000511 28 05                 1138 	jr	Z, 00124$
                                   1139 ;src/main.c:220: rollsEnabled = 1;
      000513 21r00r00              1140 	ld	hl, #_rollsEnabled
      000516 36 01                 1141 	ld	(hl), #0x01
      000518                       1142 00124$:
                                   1143 ;src/main.c:222: turnsPassed = 0;
      000518 AF                    1144 	xor	a, a
      000519 21r00r00              1145 	ld	hl, #_turnsPassed
      00051C 22                    1146 	ld	(hl+), a
      00051D 77                    1147 	ld	(hl), a
                                   1148 ;src/main.c:223: }
      00051E C9                    1149 	ret
                                   1150 ;src/main.c:225: void playCursorLeft(){
                                   1151 ;	---------------------------------
                                   1152 ; Function playCursorLeft
                                   1153 ; ---------------------------------
      00051F                       1154 _playCursorLeft::
                                   1155 ;src/main.c:226: if(cursorIndex == 1 || cursorIndex == 2){
      00051F 21r00r00              1156 	ld	hl, #_cursorIndex
      000522 2A                    1157 	ld	a, (hl+)
      000523 3D                    1158 	dec	a
      000524 B6                    1159 	or	a, (hl)
      000525 28 09                 1160 	jr	Z, 00101$
      000527 21r00r00              1161 	ld	hl, #_cursorIndex
      00052A 2A                    1162 	ld	a, (hl+)
      00052B D6 02                 1163 	sub	a, #0x02
      00052D B6                    1164 	or	a, (hl)
      00052E 20 1F                 1165 	jr	NZ, 00102$
      000530                       1166 00101$:
                                   1167 ;src/main.c:227: cursorPosition[0] -= 48;
      000530 21r00r00              1168 	ld	hl, #_cursorPosition
      000533 2A                    1169 	ld	a, (hl+)
      000534 4F                    1170 	ld	c, a
      000535 46                    1171 	ld	b, (hl)
      000536 79                    1172 	ld	a, c
      000537 C6 D0                 1173 	add	a, #0xd0
      000539 4F                    1174 	ld	c, a
      00053A 78                    1175 	ld	a, b
      00053B CE FF                 1176 	adc	a, #0xff
      00053D 47                    1177 	ld	b, a
      00053E 21r00r00              1178 	ld	hl, #_cursorPosition
      000541 79                    1179 	ld	a, c
      000542 22                    1180 	ld	(hl+), a
      000543 70                    1181 	ld	(hl), b
                                   1182 ;src/main.c:228: cursorIndex -= 1;
      000544 21r00r00              1183 	ld	hl, #_cursorIndex
      000547 2A                    1184 	ld	a, (hl+)
      000548 5F                    1185 	ld	e, a
      000549 3A                    1186 	ld	a, (hl-)
      00054A 57                    1187 	ld	d, a
      00054B 1B                    1188 	dec	de
      00054C 7B                    1189 	ld	a, e
      00054D 22                    1190 	ld	(hl+), a
      00054E 72                    1191 	ld	(hl), d
      00054F                       1192 00102$:
                                   1193 ;src/main.c:230: if(cursorIndex > 3 && cursorIndex <= 7){//null for now
      00054F 21r00r00              1194 	ld	hl, #_cursorIndex
      000552 3E 03                 1195 	ld	a, #0x03
      000554 96                    1196 	sub	a, (hl)
      000555 23                    1197 	inc	hl
      000556 3E 00                 1198 	ld	a, #0x00
      000558 9E                    1199 	sbc	a, (hl)
      000559 30 2B                 1200 	jr	NC, 00105$
      00055B 21r00r00              1201 	ld	hl, #_cursorIndex
      00055E 3E 07                 1202 	ld	a, #0x07
      000560 96                    1203 	sub	a, (hl)
      000561 23                    1204 	inc	hl
      000562 3E 00                 1205 	ld	a, #0x00
      000564 9E                    1206 	sbc	a, (hl)
      000565 38 1F                 1207 	jr	C, 00105$
                                   1208 ;src/main.c:231: cursorPosition[0] -= 24;
      000567 21r00r00              1209 	ld	hl, #_cursorPosition
      00056A 2A                    1210 	ld	a, (hl+)
      00056B 4F                    1211 	ld	c, a
      00056C 46                    1212 	ld	b, (hl)
      00056D 79                    1213 	ld	a, c
      00056E C6 E8                 1214 	add	a, #0xe8
      000570 4F                    1215 	ld	c, a
      000571 78                    1216 	ld	a, b
      000572 CE FF                 1217 	adc	a, #0xff
      000574 47                    1218 	ld	b, a
      000575 21r00r00              1219 	ld	hl, #_cursorPosition
      000578 79                    1220 	ld	a, c
      000579 22                    1221 	ld	(hl+), a
      00057A 70                    1222 	ld	(hl), b
                                   1223 ;src/main.c:232: cursorIndex -= 1;
      00057B 21r00r00              1224 	ld	hl, #_cursorIndex
      00057E 2A                    1225 	ld	a, (hl+)
      00057F 5F                    1226 	ld	e, a
      000580 3A                    1227 	ld	a, (hl-)
      000581 57                    1228 	ld	d, a
      000582 1B                    1229 	dec	de
      000583 7B                    1230 	ld	a, e
      000584 22                    1231 	ld	(hl+), a
      000585 72                    1232 	ld	(hl), d
      000586                       1233 00105$:
                                   1234 ;src/main.c:234: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      000586 21r02r00              1235 	ld	hl, #_cursorPosition + 2
      000589 46                    1236 	ld	b, (hl)
      00058A 21r00r00              1237 	ld	hl, #_cursorPosition
      00058D 4E                    1238 	ld	c, (hl)
      00058E 21r00r00              1239 	ld	hl, #_cursor
      000591 2A                    1240 	ld	a, (hl+)
      000592 5F                    1241 	ld	e, a
      000593 56                    1242 	ld	d, (hl)
                                   1243 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000594 6B                    1244 	ld	l, e
                                   1245 ;	spillPairReg hl
                                   1246 ;	spillPairReg hl
      000595 26 00                 1247 	ld	h, #0x00
                                   1248 ;	spillPairReg hl
                                   1249 ;	spillPairReg hl
      000597 29                    1250 	add	hl, hl
      000598 29                    1251 	add	hl, hl
      000599 11r00r00              1252 	ld	de, #_shadow_OAM
      00059C 19                    1253 	add	hl, de
                                   1254 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00059D 78                    1255 	ld	a, b
      00059E 22                    1256 	ld	(hl+), a
      00059F 71                    1257 	ld	(hl), c
                                   1258 ;src/main.c:234: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1259 ;src/main.c:235: }
      0005A0 C9                    1260 	ret
                                   1261 ;src/main.c:238: void playCursorRight(){
                                   1262 ;	---------------------------------
                                   1263 ; Function playCursorRight
                                   1264 ; ---------------------------------
      0005A1                       1265 _playCursorRight::
                                   1266 ;src/main.c:239: if(cursorIndex == 0 || cursorIndex == 1){
      0005A1 21r01r00              1267 	ld	hl, #_cursorIndex + 1
      0005A4 3A                    1268 	ld	a, (hl-)
      0005A5 B6                    1269 	or	a, (hl)
      0005A6 28 05                 1270 	jr	Z, 00101$
      0005A8 2A                    1271 	ld	a, (hl+)
      0005A9 3D                    1272 	dec	a
      0005AA B6                    1273 	or	a, (hl)
      0005AB 20 1A                 1274 	jr	NZ, 00102$
      0005AD                       1275 00101$:
                                   1276 ;src/main.c:240: cursorPosition[0] += 48;
      0005AD 21r00r00              1277 	ld	hl, #_cursorPosition
      0005B0 2A                    1278 	ld	a, (hl+)
      0005B1 4F                    1279 	ld	c, a
      0005B2 46                    1280 	ld	b, (hl)
      0005B3 21 30 00              1281 	ld	hl, #0x0030
      0005B6 09                    1282 	add	hl, bc
      0005B7 4D                    1283 	ld	c, l
      0005B8 44                    1284 	ld	b, h
      0005B9 21r00r00              1285 	ld	hl, #_cursorPosition
      0005BC 79                    1286 	ld	a, c
      0005BD 22                    1287 	ld	(hl+), a
      0005BE 70                    1288 	ld	(hl), b
                                   1289 ;src/main.c:241: cursorIndex += 1;
      0005BF 21r00r00              1290 	ld	hl, #_cursorIndex
      0005C2 34                    1291 	inc	(hl)
      0005C3 20 02                 1292 	jr	NZ, 00127$
      0005C5 23                    1293 	inc	hl
      0005C6 34                    1294 	inc	(hl)
      0005C7                       1295 00127$:
      0005C7                       1296 00102$:
                                   1297 ;src/main.c:243: if(cursorIndex >= 3 && cursorIndex < 7){
      0005C7 21r00r00              1298 	ld	hl, #_cursorIndex
      0005CA 2A                    1299 	ld	a, (hl+)
      0005CB D6 03                 1300 	sub	a, #0x03
      0005CD 7E                    1301 	ld	a, (hl)
      0005CE DE 00                 1302 	sbc	a, #0x00
      0005D0 38 23                 1303 	jr	C, 00105$
      0005D2 2B                    1304 	dec	hl
      0005D3 2A                    1305 	ld	a, (hl+)
      0005D4 D6 07                 1306 	sub	a, #0x07
      0005D6 7E                    1307 	ld	a, (hl)
      0005D7 DE 00                 1308 	sbc	a, #0x00
      0005D9 30 1A                 1309 	jr	NC, 00105$
                                   1310 ;src/main.c:244: cursorPosition[0] += 24;
      0005DB 21r00r00              1311 	ld	hl, #_cursorPosition
      0005DE 2A                    1312 	ld	a, (hl+)
      0005DF 4F                    1313 	ld	c, a
      0005E0 46                    1314 	ld	b, (hl)
      0005E1 21 18 00              1315 	ld	hl, #0x0018
      0005E4 09                    1316 	add	hl, bc
      0005E5 4D                    1317 	ld	c, l
      0005E6 44                    1318 	ld	b, h
      0005E7 21r00r00              1319 	ld	hl, #_cursorPosition
      0005EA 79                    1320 	ld	a, c
      0005EB 22                    1321 	ld	(hl+), a
      0005EC 70                    1322 	ld	(hl), b
                                   1323 ;src/main.c:245: cursorIndex += 1;
      0005ED 21r00r00              1324 	ld	hl, #_cursorIndex
      0005F0 34                    1325 	inc	(hl)
      0005F1 20 02                 1326 	jr	NZ, 00128$
      0005F3 23                    1327 	inc	hl
      0005F4 34                    1328 	inc	(hl)
      0005F5                       1329 00128$:
      0005F5                       1330 00105$:
                                   1331 ;src/main.c:247: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      0005F5 21r02r00              1332 	ld	hl, #_cursorPosition + 2
      0005F8 46                    1333 	ld	b, (hl)
      0005F9 21r00r00              1334 	ld	hl, #_cursorPosition
      0005FC 4E                    1335 	ld	c, (hl)
      0005FD 21r00r00              1336 	ld	hl, #_cursor
      000600 2A                    1337 	ld	a, (hl+)
      000601 5F                    1338 	ld	e, a
      000602 56                    1339 	ld	d, (hl)
                                   1340 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000603 6B                    1341 	ld	l, e
                                   1342 ;	spillPairReg hl
                                   1343 ;	spillPairReg hl
      000604 26 00                 1344 	ld	h, #0x00
                                   1345 ;	spillPairReg hl
                                   1346 ;	spillPairReg hl
      000606 29                    1347 	add	hl, hl
      000607 29                    1348 	add	hl, hl
      000608 11r00r00              1349 	ld	de, #_shadow_OAM
      00060B 19                    1350 	add	hl, de
                                   1351 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00060C 78                    1352 	ld	a, b
      00060D 22                    1353 	ld	(hl+), a
      00060E 71                    1354 	ld	(hl), c
                                   1355 ;src/main.c:247: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1356 ;src/main.c:248: }
      00060F C9                    1357 	ret
                                   1358 ;src/main.c:251: void toggleDi(){
                                   1359 ;	---------------------------------
                                   1360 ; Function toggleDi
                                   1361 ; ---------------------------------
      000610                       1362 _toggleDi::
                                   1363 ;src/main.c:252: switch(cursorIndex){
      000610 21r00r00              1364 	ld	hl, #_cursorIndex
      000613 2A                    1365 	ld	a, (hl+)
      000614 D6 03                 1366 	sub	a, #0x03
      000616 B6                    1367 	or	a, (hl)
      000617 28 28                 1368 	jr	Z, 00101$
      000619 21r00r00              1369 	ld	hl, #_cursorIndex
      00061C 2A                    1370 	ld	a, (hl+)
      00061D D6 04                 1371 	sub	a, #0x04
      00061F B6                    1372 	or	a, (hl)
      000620 28 5D                 1373 	jr	Z, 00107$
      000622 21r00r00              1374 	ld	hl, #_cursorIndex
      000625 2A                    1375 	ld	a, (hl+)
      000626 D6 05                 1376 	sub	a, #0x05
      000628 B6                    1377 	or	a, (hl)
      000629 CArBDr06              1378 	jp	Z,00113$
      00062C 21r00r00              1379 	ld	hl, #_cursorIndex
      00062F 2A                    1380 	ld	a, (hl+)
      000630 D6 06                 1381 	sub	a, #0x06
      000632 B6                    1382 	or	a, (hl)
      000633 CArFBr06              1383 	jp	Z,00119$
      000636 21r00r00              1384 	ld	hl, #_cursorIndex
      000639 2A                    1385 	ld	a, (hl+)
      00063A D6 07                 1386 	sub	a, #0x07
      00063C B6                    1387 	or	a, (hl)
      00063D CAr39r07              1388 	jp	Z,00125$
      000640 C9                    1389 	ret
                                   1390 ;src/main.c:253: case 3:
      000641                       1391 00101$:
                                   1392 ;src/main.c:254: if(Di1.inPlay == 1){
      000641 21r10r00              1393 	ld	hl, #_Di1 + 16
      000644 4E                    1394 	ld	c, (hl)
                                   1395 ;src/main.c:256: moveDiceStruct(&Di1, Di1.x, heldPosY);
                                   1396 ;src/main.c:254: if(Di1.inPlay == 1){
      000645 79                    1397 	ld	a, c
                                   1398 ;src/main.c:255: Di1.inPlay = 0;
      000646 3D                    1399 	dec	a
      000647 20 19                 1400 	jr	NZ, 00105$
      000649 77                    1401 	ld	(hl),a
                                   1402 ;src/main.c:256: moveDiceStruct(&Di1, Di1.x, heldPosY);
      00064A 21r00r00              1403 	ld	hl, #_heldPosY
      00064D 2A                    1404 	ld	a, (hl+)
      00064E 4F                    1405 	ld	c, a
      00064F 46                    1406 	ld	b, (hl)
      000650 21r08r00              1407 	ld	hl, #(_Di1 + 8)
      000653 2A                    1408 	ld	a,	(hl+)
      000654 66                    1409 	ld	h, (hl)
                                   1410 ;	spillPairReg hl
      000655 6F                    1411 	ld	l, a
                                   1412 ;	spillPairReg hl
                                   1413 ;	spillPairReg hl
      000656 C5                    1414 	push	bc
      000657 E5                    1415 	push	hl
      000658 11r00r00              1416 	ld	de, #_Di1
      00065B D5                    1417 	push	de
      00065C CDr3Er01              1418 	call	_moveDiceStruct
      00065F E8 06                 1419 	add	sp, #6
      000661 C9                    1420 	ret
      000662                       1421 00105$:
                                   1422 ;src/main.c:258: else if(Di1.inPlay == 0){
      000662 79                    1423 	ld	a, c
      000663 B7                    1424 	or	a, a
      000664 C0                    1425 	ret	NZ
                                   1426 ;src/main.c:259: Di1.inPlay = 1;
      000665 36 01                 1427 	ld	(hl), #0x01
                                   1428 ;src/main.c:260: moveDiceStruct(&Di1, Di1.x, rollPosY);
      000667 21r00r00              1429 	ld	hl, #_rollPosY
      00066A 2A                    1430 	ld	a, (hl+)
      00066B 4F                    1431 	ld	c, a
      00066C 46                    1432 	ld	b, (hl)
      00066D 21r08r00              1433 	ld	hl, #(_Di1 + 8)
      000670 2A                    1434 	ld	a,	(hl+)
      000671 66                    1435 	ld	h, (hl)
                                   1436 ;	spillPairReg hl
      000672 6F                    1437 	ld	l, a
                                   1438 ;	spillPairReg hl
                                   1439 ;	spillPairReg hl
      000673 C5                    1440 	push	bc
      000674 E5                    1441 	push	hl
      000675 11r00r00              1442 	ld	de, #_Di1
      000678 D5                    1443 	push	de
      000679 CDr3Er01              1444 	call	_moveDiceStruct
      00067C E8 06                 1445 	add	sp, #6
                                   1446 ;src/main.c:262: break;
      00067E C9                    1447 	ret
                                   1448 ;src/main.c:263: case 4:
      00067F                       1449 00107$:
                                   1450 ;src/main.c:264: if(Di2.inPlay == 1){
      00067F 21r10r00              1451 	ld	hl, #_Di2 + 16
      000682 4E                    1452 	ld	c, (hl)
                                   1453 ;src/main.c:266: moveDiceStruct(&Di2, Di2.x, heldPosY);
                                   1454 ;src/main.c:264: if(Di2.inPlay == 1){
      000683 79                    1455 	ld	a, c
                                   1456 ;src/main.c:265: Di2.inPlay = 0;
      000684 3D                    1457 	dec	a
      000685 20 19                 1458 	jr	NZ, 00111$
      000687 77                    1459 	ld	(hl),a
                                   1460 ;src/main.c:266: moveDiceStruct(&Di2, Di2.x, heldPosY);
      000688 21r00r00              1461 	ld	hl, #_heldPosY
      00068B 2A                    1462 	ld	a, (hl+)
      00068C 4F                    1463 	ld	c, a
      00068D 46                    1464 	ld	b, (hl)
      00068E 21r08r00              1465 	ld	hl, #(_Di2 + 8)
      000691 2A                    1466 	ld	a,	(hl+)
      000692 66                    1467 	ld	h, (hl)
                                   1468 ;	spillPairReg hl
      000693 6F                    1469 	ld	l, a
                                   1470 ;	spillPairReg hl
                                   1471 ;	spillPairReg hl
      000694 C5                    1472 	push	bc
      000695 E5                    1473 	push	hl
      000696 11r00r00              1474 	ld	de, #_Di2
      000699 D5                    1475 	push	de
      00069A CDr3Er01              1476 	call	_moveDiceStruct
      00069D E8 06                 1477 	add	sp, #6
      00069F C9                    1478 	ret
      0006A0                       1479 00111$:
                                   1480 ;src/main.c:268: else if(Di2.inPlay == 0){
      0006A0 79                    1481 	ld	a, c
      0006A1 B7                    1482 	or	a, a
      0006A2 C0                    1483 	ret	NZ
                                   1484 ;src/main.c:269: Di2.inPlay = 1;
      0006A3 36 01                 1485 	ld	(hl), #0x01
                                   1486 ;src/main.c:270: moveDiceStruct(&Di2, Di2.x, rollPosY);
      0006A5 21r00r00              1487 	ld	hl, #_rollPosY
      0006A8 2A                    1488 	ld	a, (hl+)
      0006A9 4F                    1489 	ld	c, a
      0006AA 46                    1490 	ld	b, (hl)
      0006AB 21r08r00              1491 	ld	hl, #(_Di2 + 8)
      0006AE 2A                    1492 	ld	a,	(hl+)
      0006AF 66                    1493 	ld	h, (hl)
                                   1494 ;	spillPairReg hl
      0006B0 6F                    1495 	ld	l, a
                                   1496 ;	spillPairReg hl
                                   1497 ;	spillPairReg hl
      0006B1 C5                    1498 	push	bc
      0006B2 E5                    1499 	push	hl
      0006B3 11r00r00              1500 	ld	de, #_Di2
      0006B6 D5                    1501 	push	de
      0006B7 CDr3Er01              1502 	call	_moveDiceStruct
      0006BA E8 06                 1503 	add	sp, #6
                                   1504 ;src/main.c:272: break;
      0006BC C9                    1505 	ret
                                   1506 ;src/main.c:273: case 5:
      0006BD                       1507 00113$:
                                   1508 ;src/main.c:274: if(Di3.inPlay == 1){
      0006BD 21r10r00              1509 	ld	hl, #_Di3 + 16
      0006C0 4E                    1510 	ld	c, (hl)
                                   1511 ;src/main.c:276: moveDiceStruct(&Di3, Di3.x, heldPosY);
                                   1512 ;src/main.c:274: if(Di3.inPlay == 1){
      0006C1 79                    1513 	ld	a, c
                                   1514 ;src/main.c:275: Di3.inPlay = 0;
      0006C2 3D                    1515 	dec	a
      0006C3 20 19                 1516 	jr	NZ, 00117$
      0006C5 77                    1517 	ld	(hl),a
                                   1518 ;src/main.c:276: moveDiceStruct(&Di3, Di3.x, heldPosY);
      0006C6 21r00r00              1519 	ld	hl, #_heldPosY
      0006C9 2A                    1520 	ld	a, (hl+)
      0006CA 4F                    1521 	ld	c, a
      0006CB 46                    1522 	ld	b, (hl)
      0006CC 21r08r00              1523 	ld	hl, #(_Di3 + 8)
      0006CF 2A                    1524 	ld	a,	(hl+)
      0006D0 66                    1525 	ld	h, (hl)
                                   1526 ;	spillPairReg hl
      0006D1 6F                    1527 	ld	l, a
                                   1528 ;	spillPairReg hl
                                   1529 ;	spillPairReg hl
      0006D2 C5                    1530 	push	bc
      0006D3 E5                    1531 	push	hl
      0006D4 11r00r00              1532 	ld	de, #_Di3
      0006D7 D5                    1533 	push	de
      0006D8 CDr3Er01              1534 	call	_moveDiceStruct
      0006DB E8 06                 1535 	add	sp, #6
      0006DD C9                    1536 	ret
      0006DE                       1537 00117$:
                                   1538 ;src/main.c:278: else if(Di3.inPlay == 0){
      0006DE 79                    1539 	ld	a, c
      0006DF B7                    1540 	or	a, a
      0006E0 C0                    1541 	ret	NZ
                                   1542 ;src/main.c:279: Di3.inPlay = 1;
      0006E1 36 01                 1543 	ld	(hl), #0x01
                                   1544 ;src/main.c:280: moveDiceStruct(&Di3, Di3.x, rollPosY);
      0006E3 21r00r00              1545 	ld	hl, #_rollPosY
      0006E6 2A                    1546 	ld	a, (hl+)
      0006E7 4F                    1547 	ld	c, a
      0006E8 46                    1548 	ld	b, (hl)
      0006E9 21r08r00              1549 	ld	hl, #(_Di3 + 8)
      0006EC 2A                    1550 	ld	a,	(hl+)
      0006ED 66                    1551 	ld	h, (hl)
                                   1552 ;	spillPairReg hl
      0006EE 6F                    1553 	ld	l, a
                                   1554 ;	spillPairReg hl
                                   1555 ;	spillPairReg hl
      0006EF C5                    1556 	push	bc
      0006F0 E5                    1557 	push	hl
      0006F1 11r00r00              1558 	ld	de, #_Di3
      0006F4 D5                    1559 	push	de
      0006F5 CDr3Er01              1560 	call	_moveDiceStruct
      0006F8 E8 06                 1561 	add	sp, #6
                                   1562 ;src/main.c:282: break;
      0006FA C9                    1563 	ret
                                   1564 ;src/main.c:283: case 6:
      0006FB                       1565 00119$:
                                   1566 ;src/main.c:284: if(Di4.inPlay == 1){
      0006FB 21r10r00              1567 	ld	hl, #_Di4 + 16
      0006FE 4E                    1568 	ld	c, (hl)
                                   1569 ;src/main.c:286: moveDiceStruct(&Di4, Di4.x, heldPosY);
                                   1570 ;src/main.c:284: if(Di4.inPlay == 1){
      0006FF 79                    1571 	ld	a, c
                                   1572 ;src/main.c:285: Di4.inPlay = 0;
      000700 3D                    1573 	dec	a
      000701 20 19                 1574 	jr	NZ, 00123$
      000703 77                    1575 	ld	(hl),a
                                   1576 ;src/main.c:286: moveDiceStruct(&Di4, Di4.x, heldPosY);
      000704 21r00r00              1577 	ld	hl, #_heldPosY
      000707 2A                    1578 	ld	a, (hl+)
      000708 4F                    1579 	ld	c, a
      000709 46                    1580 	ld	b, (hl)
      00070A 21r08r00              1581 	ld	hl, #(_Di4 + 8)
      00070D 2A                    1582 	ld	a,	(hl+)
      00070E 66                    1583 	ld	h, (hl)
                                   1584 ;	spillPairReg hl
      00070F 6F                    1585 	ld	l, a
                                   1586 ;	spillPairReg hl
                                   1587 ;	spillPairReg hl
      000710 C5                    1588 	push	bc
      000711 E5                    1589 	push	hl
      000712 11r00r00              1590 	ld	de, #_Di4
      000715 D5                    1591 	push	de
      000716 CDr3Er01              1592 	call	_moveDiceStruct
      000719 E8 06                 1593 	add	sp, #6
      00071B C9                    1594 	ret
      00071C                       1595 00123$:
                                   1596 ;src/main.c:288: else if(Di4.inPlay == 0){
      00071C 79                    1597 	ld	a, c
      00071D B7                    1598 	or	a, a
      00071E C0                    1599 	ret	NZ
                                   1600 ;src/main.c:289: Di4.inPlay = 1;
      00071F 36 01                 1601 	ld	(hl), #0x01
                                   1602 ;src/main.c:290: moveDiceStruct(&Di4, Di4.x, rollPosY);
      000721 21r00r00              1603 	ld	hl, #_rollPosY
      000724 2A                    1604 	ld	a, (hl+)
      000725 4F                    1605 	ld	c, a
      000726 46                    1606 	ld	b, (hl)
      000727 21r08r00              1607 	ld	hl, #(_Di4 + 8)
      00072A 2A                    1608 	ld	a,	(hl+)
      00072B 66                    1609 	ld	h, (hl)
                                   1610 ;	spillPairReg hl
      00072C 6F                    1611 	ld	l, a
                                   1612 ;	spillPairReg hl
                                   1613 ;	spillPairReg hl
      00072D C5                    1614 	push	bc
      00072E E5                    1615 	push	hl
      00072F 11r00r00              1616 	ld	de, #_Di4
      000732 D5                    1617 	push	de
      000733 CDr3Er01              1618 	call	_moveDiceStruct
      000736 E8 06                 1619 	add	sp, #6
                                   1620 ;src/main.c:292: break;
      000738 C9                    1621 	ret
                                   1622 ;src/main.c:293: case 7:
      000739                       1623 00125$:
                                   1624 ;src/main.c:294: if(Di5.inPlay == 1){
      000739 21r10r00              1625 	ld	hl, #_Di5 + 16
      00073C 4E                    1626 	ld	c, (hl)
                                   1627 ;src/main.c:296: moveDiceStruct(&Di5, Di5.x, heldPosY);
                                   1628 ;src/main.c:294: if(Di5.inPlay == 1){
      00073D 79                    1629 	ld	a, c
                                   1630 ;src/main.c:295: Di5.inPlay = 0;
      00073E 3D                    1631 	dec	a
      00073F 20 19                 1632 	jr	NZ, 00129$
      000741 77                    1633 	ld	(hl),a
                                   1634 ;src/main.c:296: moveDiceStruct(&Di5, Di5.x, heldPosY);
      000742 21r00r00              1635 	ld	hl, #_heldPosY
      000745 2A                    1636 	ld	a, (hl+)
      000746 4F                    1637 	ld	c, a
      000747 46                    1638 	ld	b, (hl)
      000748 21r08r00              1639 	ld	hl, #(_Di5 + 8)
      00074B 2A                    1640 	ld	a,	(hl+)
      00074C 66                    1641 	ld	h, (hl)
                                   1642 ;	spillPairReg hl
      00074D 6F                    1643 	ld	l, a
                                   1644 ;	spillPairReg hl
                                   1645 ;	spillPairReg hl
      00074E C5                    1646 	push	bc
      00074F E5                    1647 	push	hl
      000750 11r00r00              1648 	ld	de, #_Di5
      000753 D5                    1649 	push	de
      000754 CDr3Er01              1650 	call	_moveDiceStruct
      000757 E8 06                 1651 	add	sp, #6
      000759 C9                    1652 	ret
      00075A                       1653 00129$:
                                   1654 ;src/main.c:298: else if(Di5.inPlay == 0){
      00075A 79                    1655 	ld	a, c
      00075B B7                    1656 	or	a, a
      00075C C0                    1657 	ret	NZ
                                   1658 ;src/main.c:299: Di5.inPlay = 1;
      00075D 36 01                 1659 	ld	(hl), #0x01
                                   1660 ;src/main.c:300: moveDiceStruct(&Di5, Di5.x, rollPosY);
      00075F 21r00r00              1661 	ld	hl, #_rollPosY
      000762 2A                    1662 	ld	a, (hl+)
      000763 4F                    1663 	ld	c, a
      000764 46                    1664 	ld	b, (hl)
      000765 21r08r00              1665 	ld	hl, #(_Di5 + 8)
      000768 2A                    1666 	ld	a,	(hl+)
      000769 66                    1667 	ld	h, (hl)
                                   1668 ;	spillPairReg hl
      00076A 6F                    1669 	ld	l, a
                                   1670 ;	spillPairReg hl
                                   1671 ;	spillPairReg hl
      00076B C5                    1672 	push	bc
      00076C E5                    1673 	push	hl
      00076D 11r00r00              1674 	ld	de, #_Di5
      000770 D5                    1675 	push	de
      000771 CDr3Er01              1676 	call	_moveDiceStruct
      000774 E8 06                 1677 	add	sp, #6
                                   1678 ;src/main.c:303: }
                                   1679 ;src/main.c:304: }
      000776 C9                    1680 	ret
                                   1681 ;src/main.c:307: void rollCheck(){
                                   1682 ;	---------------------------------
                                   1683 ; Function rollCheck
                                   1684 ; ---------------------------------
      000777                       1685 _rollCheck::
                                   1686 ;src/main.c:308: if(rollsEnabled == 0){
      000777 FAr00r00              1687 	ld	a, (#_rollsEnabled)
      00077A B7                    1688 	or	a, a
      00077B 20 13                 1689 	jr	NZ, 00107$
                                   1690 ;src/main.c:309: if(scorecardChangeA != scorecardChangeB){
      00077D FAr00r00              1691 	ld	a, (#_scorecardChangeA)
      000780 21r00r00              1692 	ld	hl, #_scorecardChangeB
      000783 96                    1693 	sub	a, (hl)
                                   1694 ;src/main.c:310: newTurn();
      000784 C2rA3r03              1695 	jp	NZ,_newTurn
                                   1696 ;src/main.c:314: cardView(backgroundMap);
      000787 11r00r00              1697 	ld	de, #_backgroundMap
      00078A D5                    1698 	push	de
      00078B CDr00r00              1699 	call	_cardView
      00078E E1                    1700 	pop	hl
      00078F C9                    1701 	ret
      000790                       1702 00107$:
                                   1703 ;src/main.c:317: else if(rollsEnabled == 1){
      000790 21r00r00              1704 	ld	hl, #_rollsEnabled
      000793 7E                    1705 	ld	a, (hl)
      000794 3D                    1706 	dec	a
      000795 CAr97r00              1707 	jp	Z,_diceToRoll
                                   1708 ;src/main.c:318: diceToRoll();
      000798 C9                    1709 	ret
                                   1710 ;src/main.c:320: }
      000799 C9                    1711 	ret
                                   1712 ;src/main.c:323: void playCursorA(){
                                   1713 ;	---------------------------------
                                   1714 ; Function playCursorA
                                   1715 ; ---------------------------------
      00079A                       1716 _playCursorA::
                                   1717 ;src/main.c:325: if(cursorIndex == 0){
      00079A 21r01r00              1718 	ld	hl, #_cursorIndex + 1
      00079D 3A                    1719 	ld	a, (hl-)
      00079E B6                    1720 	or	a, (hl)
      00079F 20 0C                 1721 	jr	NZ, 00125$
                                   1722 ;src/main.c:326: rollTracker();
      0007A1 CDr65r04              1723 	call	_rollTracker
                                   1724 ;src/main.c:327: rollCheck();
      0007A4 CDr77r07              1725 	call	_rollCheck
                                   1726 ;src/main.c:328: turnRollDisplay();
      0007A7 CDr00r00              1727 	call	_turnRollDisplay
      0007AA C3r40r08              1728 	jp	00126$
      0007AD                       1729 00125$:
                                   1730 ;src/main.c:331: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      0007AD 21r00r00              1731 	ld	hl, #_rollsLeft
      0007B0 2A                    1732 	ld	a, (hl+)
      0007B1 D6 03                 1733 	sub	a, #0x03
      0007B3 B6                    1734 	or	a, (hl)
      0007B4 3E 01                 1735 	ld	a, #0x01
      0007B6 28 01                 1736 	jr	Z, 00186$
      0007B8 AF                    1737 	xor	a, a
      0007B9                       1738 00186$:
      0007B9 5F                    1739 	ld	e, a
      0007BA FAr00r00              1740 	ld	a, (#_scorecardChangeA)
      0007BD 21r00r00              1741 	ld	hl, #_scorecardChangeB
      0007C0 96                    1742 	sub	a, (hl)
      0007C1 3E 01                 1743 	ld	a, #0x01
      0007C3 28 01                 1744 	jr	Z, 00188$
      0007C5 AF                    1745 	xor	a, a
      0007C6                       1746 00188$:
      0007C6 4F                    1747 	ld	c, a
                                   1748 ;src/main.c:332: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      0007C7 21r00r00              1749 	ld	hl, #_rollsLeft
      0007CA 2A                    1750 	ld	a, (hl+)
      0007CB D6 03                 1751 	sub	a, #0x03
      0007CD 7E                    1752 	ld	a, (hl)
      0007CE DE 00                 1753 	sbc	a, #0x00
      0007D0 3E 00                 1754 	ld	a, #0x00
      0007D2 17                    1755 	rla
      0007D3 47                    1756 	ld	b, a
                                   1757 ;src/main.c:330: else if(cursorIndex == 1){
      0007D4 21r00r00              1758 	ld	hl, #_cursorIndex
      0007D7 2A                    1759 	ld	a, (hl+)
      0007D8 3D                    1760 	dec	a
                                   1761 ;src/main.c:331: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      0007D9 B6                    1762 	or	a,(hl)
      0007DA 20 27                 1763 	jr	NZ, 00122$
      0007DC B3                    1764 	or	a,e
      0007DD C0                    1765 	ret	NZ
      0007DE CB 41                 1766 	bit	0, c
      0007E0 C8                    1767 	ret	Z
                                   1768 ;src/main.c:332: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      0007E1 78                    1769 	ld	a, b
      0007E2 B7                    1770 	or	a, a
      0007E3 28 5B                 1771 	jr	Z, 00126$
      0007E5 79                    1772 	ld	a, c
      0007E6 B7                    1773 	or	a, a
      0007E7 28 57                 1774 	jr	Z, 00126$
                                   1775 ;src/main.c:333: cursorPosition[0] = 40;
      0007E9 21r00r00              1776 	ld	hl, #_cursorPosition
      0007EC 3E 28                 1777 	ld	a, #0x28
      0007EE 22                    1778 	ld	(hl+), a
      0007EF 36 00                 1779 	ld	(hl), #0x00
                                   1780 ;src/main.c:334: cursorPosition[1] = 128;
      0007F1 21r02r00              1781 	ld	hl, #(_cursorPosition + 2)
      0007F4 3E 80                 1782 	ld	a, #0x80
      0007F6 22                    1783 	ld	(hl+), a
      0007F7 36 00                 1784 	ld	(hl), #0x00
                                   1785 ;src/main.c:335: cursorIndex = 3;
      0007F9 21r00r00              1786 	ld	hl, #_cursorIndex
      0007FC 3E 03                 1787 	ld	a, #0x03
      0007FE 22                    1788 	ld	(hl+), a
      0007FF AF                    1789 	xor	a, a
      000800 77                    1790 	ld	(hl), a
      000801 18 3D                 1791 	jr	00126$
      000803                       1792 00122$:
                                   1793 ;src/main.c:338: else if(cursorIndex == 2){
      000803 21r00r00              1794 	ld	hl, #_cursorIndex
      000806 2A                    1795 	ld	a, (hl+)
      000807 D6 02                 1796 	sub	a, #0x02
                                   1797 ;src/main.c:339: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      000809 B6                    1798 	or	a,(hl)
      00080A 20 1C                 1799 	jr	NZ, 00119$
      00080C B3                    1800 	or	a,e
      00080D C0                    1801 	ret	NZ
      00080E CB 41                 1802 	bit	0, c
      000810 C8                    1803 	ret	Z
                                   1804 ;src/main.c:340: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      000811 78                    1805 	ld	a, b
      000812 B7                    1806 	or	a, a
      000813 28 2B                 1807 	jr	Z, 00126$
      000815 79                    1808 	ld	a, c
      000816 B7                    1809 	or	a, a
      000817 28 27                 1810 	jr	Z, 00126$
                                   1811 ;src/main.c:341: viewMode = 1;
      000819 21r00r00              1812 	ld	hl, #_viewMode
      00081C 36 01                 1813 	ld	(hl), #0x01
                                   1814 ;src/main.c:342: cardView(backgroundMap);
      00081E 11r00r00              1815 	ld	de, #_backgroundMap
      000821 D5                    1816 	push	de
      000822 CDr00r00              1817 	call	_cardView
      000825 E1                    1818 	pop	hl
      000826 18 18                 1819 	jr	00126$
      000828                       1820 00119$:
                                   1821 ;src/main.c:345: else if(cursorIndex >= 3 && cursorIndex <= 7){
      000828 21r00r00              1822 	ld	hl, #_cursorIndex
      00082B 2A                    1823 	ld	a, (hl+)
      00082C D6 03                 1824 	sub	a, #0x03
      00082E 7E                    1825 	ld	a, (hl)
      00082F DE 00                 1826 	sbc	a, #0x00
      000831 38 0D                 1827 	jr	C, 00126$
      000833 2B                    1828 	dec	hl
      000834 3E 07                 1829 	ld	a, #0x07
      000836 96                    1830 	sub	a, (hl)
      000837 23                    1831 	inc	hl
      000838 3E 00                 1832 	ld	a, #0x00
      00083A 9E                    1833 	sbc	a, (hl)
      00083B 38 03                 1834 	jr	C, 00126$
                                   1835 ;src/main.c:346: toggleDi();
      00083D CDr10r06              1836 	call	_toggleDi
      000840                       1837 00126$:
                                   1838 ;src/main.c:348: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      000840 21r02r00              1839 	ld	hl, #_cursorPosition + 2
      000843 46                    1840 	ld	b, (hl)
      000844 21r00r00              1841 	ld	hl, #_cursorPosition
      000847 4E                    1842 	ld	c, (hl)
      000848 21r00r00              1843 	ld	hl, #_cursor
      00084B 2A                    1844 	ld	a, (hl+)
      00084C 5F                    1845 	ld	e, a
      00084D 56                    1846 	ld	d, (hl)
                                   1847 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00084E 6B                    1848 	ld	l, e
                                   1849 ;	spillPairReg hl
                                   1850 ;	spillPairReg hl
      00084F 26 00                 1851 	ld	h, #0x00
                                   1852 ;	spillPairReg hl
                                   1853 ;	spillPairReg hl
      000851 29                    1854 	add	hl, hl
      000852 29                    1855 	add	hl, hl
      000853 11r00r00              1856 	ld	de, #_shadow_OAM
      000856 19                    1857 	add	hl, de
                                   1858 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000857 78                    1859 	ld	a, b
      000858 22                    1860 	ld	(hl+), a
      000859 71                    1861 	ld	(hl), c
                                   1862 ;src/main.c:348: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1863 ;src/main.c:349: }
      00085A C9                    1864 	ret
                                   1865 ;src/main.c:351: void playCursorB(){
                                   1866 ;	---------------------------------
                                   1867 ; Function playCursorB
                                   1868 ; ---------------------------------
      00085B                       1869 _playCursorB::
                                   1870 ;src/main.c:352: if(cursorIndex >= 3 && cursorIndex <= 7){
      00085B 21r00r00              1871 	ld	hl, #_cursorIndex
      00085E 2A                    1872 	ld	a, (hl+)
      00085F D6 03                 1873 	sub	a, #0x03
      000861 7E                    1874 	ld	a, (hl)
      000862 DE 00                 1875 	sbc	a, #0x00
      000864 38 20                 1876 	jr	C, 00102$
      000866 2B                    1877 	dec	hl
      000867 3E 07                 1878 	ld	a, #0x07
      000869 96                    1879 	sub	a, (hl)
      00086A 23                    1880 	inc	hl
      00086B 3E 00                 1881 	ld	a, #0x00
      00086D 9E                    1882 	sbc	a, (hl)
      00086E 38 16                 1883 	jr	C, 00102$
                                   1884 ;src/main.c:353: cursorPosition[0] = 16;
      000870 21r00r00              1885 	ld	hl, #_cursorPosition
      000873 3E 10                 1886 	ld	a, #0x10
      000875 22                    1887 	ld	(hl+), a
      000876 36 00                 1888 	ld	(hl), #0x00
                                   1889 ;src/main.c:354: cursorPosition[1] = 144;
      000878 21r02r00              1890 	ld	hl, #(_cursorPosition + 2)
      00087B 3E 90                 1891 	ld	a, #0x90
      00087D 22                    1892 	ld	(hl+), a
      00087E 36 00                 1893 	ld	(hl), #0x00
                                   1894 ;src/main.c:355: cursorIndex = 0;
      000880 AF                    1895 	xor	a, a
      000881 21r00r00              1896 	ld	hl, #_cursorIndex
      000884 22                    1897 	ld	(hl+), a
      000885 77                    1898 	ld	(hl), a
      000886                       1899 00102$:
                                   1900 ;src/main.c:357: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      000886 21r02r00              1901 	ld	hl, #_cursorPosition + 2
      000889 46                    1902 	ld	b, (hl)
      00088A 21r00r00              1903 	ld	hl, #_cursorPosition
      00088D 4E                    1904 	ld	c, (hl)
      00088E 21r00r00              1905 	ld	hl, #_cursor
      000891 2A                    1906 	ld	a, (hl+)
      000892 5F                    1907 	ld	e, a
      000893 56                    1908 	ld	d, (hl)
                                   1909 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000894 6B                    1910 	ld	l, e
                                   1911 ;	spillPairReg hl
                                   1912 ;	spillPairReg hl
      000895 26 00                 1913 	ld	h, #0x00
                                   1914 ;	spillPairReg hl
                                   1915 ;	spillPairReg hl
      000897 29                    1916 	add	hl, hl
      000898 29                    1917 	add	hl, hl
      000899 11r00r00              1918 	ld	de, #_shadow_OAM
      00089C 19                    1919 	add	hl, de
                                   1920 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00089D 78                    1921 	ld	a, b
      00089E 22                    1922 	ld	(hl+), a
      00089F 71                    1923 	ld	(hl), c
                                   1924 ;src/main.c:357: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1925 ;src/main.c:358: }
      0008A0 C9                    1926 	ret
                                   1927 ;src/main.c:360: void playCursorSelect(){
                                   1928 ;	---------------------------------
                                   1929 ; Function playCursorSelect
                                   1930 ; ---------------------------------
      0008A1                       1931 _playCursorSelect::
                                   1932 ;src/main.c:361: quickSwitch = 1;
      0008A1 21r00r00              1933 	ld	hl, #_quickSwitch
      0008A4 36 01                 1934 	ld	(hl), #0x01
                                   1935 ;src/main.c:362: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      0008A6 21r00r00              1936 	ld	hl, #_rollsLeft
      0008A9 2A                    1937 	ld	a, (hl+)
      0008AA D6 03                 1938 	sub	a, #0x03
      0008AC B6                    1939 	or	a, (hl)
      0008AD C8                    1940 	ret	Z
      0008AE FAr00r00              1941 	ld	a, (#_scorecardChangeA)
      0008B1 21r00r00              1942 	ld	hl, #_scorecardChangeB
      0008B4 96                    1943 	sub	a, (hl)
      0008B5 3E 01                 1944 	ld	a, #0x01
      0008B7 28 01                 1945 	jr	Z, 00127$
      0008B9 AF                    1946 	xor	a, a
      0008BA                       1947 00127$:
      0008BA 4F                    1948 	ld	c, a
      0008BB CB 41                 1949 	bit	0, c
      0008BD C8                    1950 	ret	Z
                                   1951 ;src/main.c:363: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      0008BE 21r00r00              1952 	ld	hl, #_rollsLeft
      0008C1 2A                    1953 	ld	a, (hl+)
      0008C2 D6 03                 1954 	sub	a, #0x03
      0008C4 7E                    1955 	ld	a, (hl)
      0008C5 DE 00                 1956 	sbc	a, #0x00
      0008C7 D0                    1957 	ret	NC
      0008C8 79                    1958 	ld	a, c
      0008C9 B7                    1959 	or	a, a
      0008CA C8                    1960 	ret	Z
                                   1961 ;src/main.c:364: viewMode = 1;
      0008CB 21r00r00              1962 	ld	hl, #_viewMode
      0008CE 36 01                 1963 	ld	(hl), #0x01
                                   1964 ;src/main.c:365: cardView(backgroundMap);
      0008D0 11r00r00              1965 	ld	de, #_backgroundMap
      0008D3 D5                    1966 	push	de
      0008D4 CDr00r00              1967 	call	_cardView
      0008D7 E1                    1968 	pop	hl
                                   1969 ;src/main.c:367: }
      0008D8 C9                    1970 	ret
                                   1971 ;src/main.c:371: void playCursor(){
                                   1972 ;	---------------------------------
                                   1973 ; Function playCursor
                                   1974 ; ---------------------------------
      0008D9                       1975 _playCursor::
                                   1976 ;src/main.c:372: switch(joypad()){
      0008D9 CDr00r00              1977 	call	_joypad
      0008DC 7B                    1978 	ld	a, e
      0008DD FE 01                 1979 	cp	a, #0x01
      0008DF 28 1C                 1980 	jr	Z, 00102$
      0008E1 FE 02                 1981 	cp	a, #0x02
      0008E3 28 12                 1982 	jr	Z, 00101$
      0008E5 FE 10                 1983 	cp	a, #0x10
      0008E7 28 1A                 1984 	jr	Z, 00103$
      0008E9 FE 20                 1985 	cp	a, #0x20
      0008EB 28 1C                 1986 	jr	Z, 00104$
      0008ED FE 40                 1987 	cp	a, #0x40
      0008EF 28 1E                 1988 	jr	Z, 00106$
      0008F1 D6 80                 1989 	sub	a, #0x80
      0008F3 CAr00r00              1990 	jp	Z,_waitpadup
      0008F6 C9                    1991 	ret
                                   1992 ;src/main.c:373: case J_LEFT:
      0008F7                       1993 00101$:
                                   1994 ;src/main.c:374: playCursorLeft();
      0008F7 CDr1Fr05              1995 	call	_playCursorLeft
                                   1996 ;src/main.c:375: waitpadup();
                                   1997 ;src/main.c:376: break;
      0008FA C3r00r00              1998 	jp	_waitpadup
                                   1999 ;src/main.c:377: case J_RIGHT:
      0008FD                       2000 00102$:
                                   2001 ;src/main.c:378: playCursorRight();
      0008FD CDrA1r05              2002 	call	_playCursorRight
                                   2003 ;src/main.c:379: waitpadup();
                                   2004 ;src/main.c:380: break;
      000900 C3r00r00              2005 	jp	_waitpadup
                                   2006 ;src/main.c:381: case J_A:
      000903                       2007 00103$:
                                   2008 ;src/main.c:382: playCursorA();
      000903 CDr9Ar07              2009 	call	_playCursorA
                                   2010 ;src/main.c:383: waitpadup();
                                   2011 ;src/main.c:384: break;
      000906 C3r00r00              2012 	jp	_waitpadup
                                   2013 ;src/main.c:385: case J_B:
      000909                       2014 00104$:
                                   2015 ;src/main.c:386: playCursorB();
      000909 CDr5Br08              2016 	call	_playCursorB
                                   2017 ;src/main.c:387: waitpadup();
                                   2018 ;src/main.c:388: break;
                                   2019 ;src/main.c:389: case J_START:
                                   2020 ;src/main.c:391: waitpadup();
                                   2021 ;src/main.c:392: break;
      00090C C3r00r00              2022 	jp	_waitpadup
                                   2023 ;src/main.c:393: case J_SELECT:
      00090F                       2024 00106$:
                                   2025 ;src/main.c:394: playCursorSelect();
      00090F CDrA1r08              2026 	call	_playCursorSelect
                                   2027 ;src/main.c:395: waitpadup();
                                   2028 ;src/main.c:397: }
                                   2029 ;src/main.c:398: }
      000912 C3r00r00              2030 	jp	_waitpadup
                                   2031 ;src/main.c:401: void main(){
                                   2032 ;	---------------------------------
                                   2033 ; Function main
                                   2034 ; ---------------------------------
      000915                       2035 _main::
                                   2036 ;src/main.c:402: initGame();
      000915 CDrCAr02              2037 	call	_initGame
                                   2038 ;src/main.c:404: DISPLAY_ON;
      000918 F0r00                 2039 	ldh	a, (_LCDC_REG + 0)
      00091A F6 80                 2040 	or	a, #0x80
      00091C E0r00                 2041 	ldh	(_LCDC_REG + 0), a
                                   2042 ;src/main.c:406: while(endGame == 0){
      00091E                       2043 00106$:
      00091E FAr00r00              2044 	ld	a, (#_endGame)
      000921 B7                    2045 	or	a, a
      000922 20 16                 2046 	jr	NZ, 00119$
                                   2047 ;src/main.c:407: if(viewMode == 0){
      000924 FAr00r00              2048 	ld	a, (#_viewMode)
      000927 B7                    2049 	or	a, a
      000928 20 05                 2050 	jr	NZ, 00104$
                                   2051 ;src/main.c:408: playCursor();
      00092A CDrD9r08              2052 	call	_playCursor
      00092D 18 EF                 2053 	jr	00106$
      00092F                       2054 00104$:
                                   2055 ;src/main.c:410: else if(viewMode == 1){
      00092F FAr00r00              2056 	ld	a, (#_viewMode)
      000932 3D                    2057 	dec	a
      000933 20 E9                 2058 	jr	NZ, 00106$
                                   2059 ;src/main.c:411: cardCursor();
      000935 CDr00r00              2060 	call	_cardCursor
      000938 18 E4                 2061 	jr	00106$
                                   2062 ;src/main.c:414: while(endGame == 1){
      00093A                       2063 00119$:
      00093A                       2064 00109$:
      00093A FAr00r00              2065 	ld	a, (#_endGame)
      00093D 3D                    2066 	dec	a
      00093E C0                    2067 	ret	NZ
                                   2068 ;src/main.c:415: printf("that's it for now!\n\n");
      00093F 11r51r09              2069 	ld	de, #___str_1
      000942 D5                    2070 	push	de
      000943 CDr00r00              2071 	call	_puts
      000946 E1                    2072 	pop	hl
                                   2073 ;src/main.c:416: printf("reset game to play again!");
      000947 11r65r09              2074 	ld	de, #___str_2
      00094A D5                    2075 	push	de
      00094B CDr00r00              2076 	call	_printf
      00094E E1                    2077 	pop	hl
                                   2078 ;src/main.c:418: }
      00094F 18 E9                 2079 	jr	00109$
      000951                       2080 ___str_1:
      000951 74 68 61 74 27 73 20  2081 	.ascii "that's it for now!"
             69 74 20 66 6F 72 20
             6E 6F 77 21
      000963 0A                    2082 	.db 0x0a
      000964 00                    2083 	.db 0x00
      000965                       2084 ___str_2:
      000965 72 65 73 65 74 20 67  2085 	.ascii "reset game to play again!"
             61 6D 65 20 74 6F 20
             70 6C 61 79 20 61 67
             61 69 6E 21
      00097E 00                    2086 	.db 0x00
                                   2087 	.area _CODE
                                   2088 	.area _INITIALIZER
                                   2089 	.area _CABS (ABS)
