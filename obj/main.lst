                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _playCursor
                                     13 	.globl _playCursorSelect
                                     14 	.globl _playCursorB
                                     15 	.globl _playCursorA
                                     16 	.globl _rollCheck
                                     17 	.globl _toggleDi
                                     18 	.globl _playCursorRight
                                     19 	.globl _playCursorLeft
                                     20 	.globl _rollTracker
                                     21 	.globl _newTurn
                                     22 	.globl _initGame
                                     23 	.globl _initDi
                                     24 	.globl _moveDiceStruct
                                     25 	.globl _diceToRoll
                                     26 	.globl _setDiFace
                                     27 	.globl _setDiceValues
                                     28 	.globl _turnRollDisplay
                                     29 	.globl _spriteFlip
                                     30 	.globl _scoreDisplay
                                     31 	.globl _rollDi
                                     32 	.globl _cardView
                                     33 	.globl _cardCursor
                                     34 	.globl _betterDelay
                                     35 	.globl _set_sprite_data
                                     36 	.globl _set_bkg_tiles
                                     37 	.globl _set_bkg_data
                                     38 	.globl _waitpadup
                                     39 	.globl _joypad
                                     40 ;--------------------------------------------------------
                                     41 ; special function registers
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _DATA
                                     47 ;--------------------------------------------------------
                                     48 ; ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area _INITIALIZED
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area _DABS (ABS)
                                     55 ;--------------------------------------------------------
                                     56 ; global & static initialisations
                                     57 ;--------------------------------------------------------
                                     58 	.area _HOME
                                     59 	.area _GSINIT
                                     60 	.area _GSFINAL
                                     61 	.area _GSINIT
                                     62 ;--------------------------------------------------------
                                     63 ; Home
                                     64 ;--------------------------------------------------------
                                     65 	.area _HOME
                                     66 	.area _HOME
                                     67 ;--------------------------------------------------------
                                     68 ; code
                                     69 ;--------------------------------------------------------
                                     70 	.area _CODE
                                     71 ;src/main.c:29: void setDiceValues(){
                                     72 ;	---------------------------------
                                     73 ; Function setDiceValues
                                     74 ; ---------------------------------
      000000                         75 _setDiceValues::
                                     76 ;src/main.c:30: diceValues[0] = Di1.face;
      000000 21r0Er00                77 	ld	hl, #(_Di1 + 14)
      000003 2A                      78 	ld	a, (hl+)
      000004 4F                      79 	ld	c, a
      000005 46                      80 	ld	b, (hl)
      000006 21r00r00                81 	ld	hl, #_diceValues
      000009 79                      82 	ld	a, c
      00000A 22                      83 	ld	(hl+), a
      00000B 70                      84 	ld	(hl), b
                                     85 ;src/main.c:31: diceValues[1] = Di2.face;
      00000C 21r0Er00                86 	ld	hl, #(_Di2 + 14)
      00000F 2A                      87 	ld	a, (hl+)
      000010 4F                      88 	ld	c, a
      000011 46                      89 	ld	b, (hl)
      000012 21r02r00                90 	ld	hl, #(_diceValues + 2)
      000015 79                      91 	ld	a, c
      000016 22                      92 	ld	(hl+), a
      000017 70                      93 	ld	(hl), b
                                     94 ;src/main.c:32: diceValues[2] = Di3.face;
      000018 21r0Er00                95 	ld	hl, #(_Di3 + 14)
      00001B 2A                      96 	ld	a, (hl+)
      00001C 4F                      97 	ld	c, a
      00001D 46                      98 	ld	b, (hl)
      00001E 21r04r00                99 	ld	hl, #(_diceValues + 4)
      000021 79                     100 	ld	a, c
      000022 22                     101 	ld	(hl+), a
      000023 70                     102 	ld	(hl), b
                                    103 ;src/main.c:33: diceValues[3] = Di4.face;
      000024 21r0Er00               104 	ld	hl, #(_Di4 + 14)
      000027 2A                     105 	ld	a, (hl+)
      000028 4F                     106 	ld	c, a
      000029 46                     107 	ld	b, (hl)
      00002A 21r06r00               108 	ld	hl, #(_diceValues + 6)
      00002D 79                     109 	ld	a, c
      00002E 22                     110 	ld	(hl+), a
      00002F 70                     111 	ld	(hl), b
                                    112 ;src/main.c:34: diceValues[4] = Di5.face;
      000030 21r0Er00               113 	ld	hl, #(_Di5 + 14)
      000033 2A                     114 	ld	a, (hl+)
      000034 4F                     115 	ld	c, a
      000035 46                     116 	ld	b, (hl)
      000036 21r08r00               117 	ld	hl, #(_diceValues + 8)
      000039 79                     118 	ld	a, c
      00003A 22                     119 	ld	(hl+), a
      00003B 70                     120 	ld	(hl), b
                                    121 ;src/main.c:35: }
      00003C C9                     122 	ret
                                    123 ;src/main.c:38: void setDiFace(struct DiceStruct * diSprite){
                                    124 ;	---------------------------------
                                    125 ; Function setDiFace
                                    126 ; ---------------------------------
      00003D                        127 _setDiFace::
      00003D 3B                     128 	dec	sp
                                    129 ;src/main.c:39: rollDi();
      00003E CDr00r00               130 	call	_rollDi
                                    131 ;src/main.c:40: for(i = 0; i != 4; i++){
      000041 AF                     132 	xor	a, a
      000042 21r00r00               133 	ld	hl, #_i
      000045 22                     134 	ld	(hl+), a
      000046 77                     135 	ld	(hl), a
      000047 F8 03                  136 	ldhl	sp,	#3
      000049 2A                     137 	ld	a, (hl+)
      00004A 4F                     138 	ld	c, a
      00004B 46                     139 	ld	b, (hl)
      00004C                        140 00103$:
                                    141 ;src/main.c:41: set_sprite_tile(diSprite->spriteID[i], currentFace[i]);
      00004C 21r00r00               142 	ld	hl, #_i
      00004F 2A                     143 	ld	a, (hl+)
      000050 5F                     144 	ld	e, a
      000051 56                     145 	ld	d, (hl)
      000052 CB 23                  146 	sla	e
      000054 CB 12                  147 	rl	d
      000056 21r00r00               148 	ld	hl, #_currentFace
      000059 19                     149 	add	hl, de
      00005A 7E                     150 	ld	a, (hl)
      00005B F8 00                  151 	ldhl	sp,	#0
      00005D 77                     152 	ld	(hl), a
      00005E 6B                     153 	ld	l, e
      00005F 62                     154 	ld	h, d
      000060 09                     155 	add	hl, bc
                                    156 ;/opt/gbdk/include/gb/gb.h:1326: shadow_OAM[nb].tile=tile;
      000061 6E                     157 	ld	l, (hl)
                                    158 ;	spillPairReg hl
                                    159 ;	spillPairReg hl
      000062 26 00                  160 	ld	h, #0x00
                                    161 ;	spillPairReg hl
                                    162 ;	spillPairReg hl
      000064 29                     163 	add	hl, hl
      000065 29                     164 	add	hl, hl
      000066 11r00r00               165 	ld	de, #_shadow_OAM
      000069 19                     166 	add	hl, de
      00006A 23                     167 	inc	hl
      00006B 23                     168 	inc	hl
      00006C 5D                     169 	ld	e, l
      00006D 54                     170 	ld	d, h
      00006E F8 00                  171 	ldhl	sp,	#0
      000070 7E                     172 	ld	a, (hl)
      000071 12                     173 	ld	(de), a
                                    174 ;src/main.c:40: for(i = 0; i != 4; i++){
      000072 21r00r00               175 	ld	hl, #_i
      000075 34                     176 	inc	(hl)
      000076 20 02                  177 	jr	NZ, 00118$
      000078 23                     178 	inc	hl
      000079 34                     179 	inc	(hl)
      00007A                        180 00118$:
      00007A 21r00r00               181 	ld	hl, #_i
      00007D 2A                     182 	ld	a, (hl+)
      00007E D6 04                  183 	sub	a, #0x04
      000080 B6                     184 	or	a, (hl)
      000081 20 C9                  185 	jr	NZ, 00103$
                                    186 ;src/main.c:43: diSprite->face = diFaceBuf;
      000083 21 0E 00               187 	ld	hl, #0x000e
      000086 09                     188 	add	hl, bc
      000087 4D                     189 	ld	c, l
      000088 44                     190 	ld	b, h
      000089 21r00r00               191 	ld	hl, #_diFaceBuf
      00008C 2A                     192 	ld	a, (hl+)
      00008D 02                     193 	ld	(bc), a
      00008E 03                     194 	inc	bc
      00008F 7E                     195 	ld	a, (hl)
      000090 02                     196 	ld	(bc), a
                                    197 ;src/main.c:44: setDiceValues();
      000091 33                     198 	inc	sp
      000092 C3r00r00               199 	jp	_setDiceValues
                                    200 ;src/main.c:45: }
      000095 33                     201 	inc	sp
      000096 C9                     202 	ret
                                    203 ;src/main.c:48: void diceToRoll(){
                                    204 ;	---------------------------------
                                    205 ; Function diceToRoll
                                    206 ; ---------------------------------
      000097                        207 _diceToRoll::
                                    208 ;src/main.c:49: if(rollsLeft > 0){
      000097 21r01r00               209 	ld	hl, #_rollsLeft + 1
      00009A 3A                     210 	ld	a, (hl-)
      00009B B6                     211 	or	a, (hl)
      00009C C8                     212 	ret	Z
                                    213 ;src/main.c:50: rollsLeft -= 1;
      00009D 2A                     214 	ld	a, (hl+)
      00009E 5F                     215 	ld	e, a
      00009F 3A                     216 	ld	a, (hl-)
      0000A0 57                     217 	ld	d, a
      0000A1 1B                     218 	dec	de
      0000A2 7B                     219 	ld	a, e
      0000A3 22                     220 	ld	(hl+), a
      0000A4 72                     221 	ld	(hl), d
                                    222 ;src/main.c:51: for(j = 0; j != 5; j++){
      0000A5 AF                     223 	xor	a, a
      0000A6 21r00r00               224 	ld	hl, #_j
      0000A9 22                     225 	ld	(hl+), a
      0000AA 77                     226 	ld	(hl), a
      0000AB                        227 00128$:
                                    228 ;src/main.c:52: betterDelay(6);
      0000AB 11 06 00               229 	ld	de, #0x0006
      0000AE D5                     230 	push	de
      0000AF CDr00r00               231 	call	_betterDelay
      0000B2 E1                     232 	pop	hl
                                    233 ;src/main.c:53: if(j == 0){
      0000B3 21r01r00               234 	ld	hl, #_j + 1
      0000B6 3A                     235 	ld	a, (hl-)
      0000B7 B6                     236 	or	a, (hl)
      0000B8 20 10                  237 	jr	NZ, 00123$
                                    238 ;src/main.c:54: if(Di1.inPlay == 1){
      0000BA FAr10r00               239 	ld	a, (#(_Di1 + 16) + 0)
      0000BD 3D                     240 	dec	a
      0000BE 20 6B                  241 	jr	NZ, 00129$
                                    242 ;src/main.c:55: setDiFace(&Di1);
      0000C0 11r00r00               243 	ld	de, #_Di1
      0000C3 D5                     244 	push	de
      0000C4 CDr3Dr00               245 	call	_setDiFace
      0000C7 E1                     246 	pop	hl
      0000C8 18 61                  247 	jr	00129$
      0000CA                        248 00123$:
                                    249 ;src/main.c:59: else if(j == 1){
      0000CA 21r00r00               250 	ld	hl, #_j
      0000CD 2A                     251 	ld	a, (hl+)
      0000CE 3D                     252 	dec	a
      0000CF B6                     253 	or	a, (hl)
      0000D0 20 10                  254 	jr	NZ, 00120$
                                    255 ;src/main.c:60: if(Di2.inPlay == 1){
      0000D2 FAr10r00               256 	ld	a, (#(_Di2 + 16) + 0)
      0000D5 3D                     257 	dec	a
      0000D6 20 53                  258 	jr	NZ, 00129$
                                    259 ;src/main.c:61: setDiFace(&Di2);
      0000D8 11r00r00               260 	ld	de, #_Di2
      0000DB D5                     261 	push	de
      0000DC CDr3Dr00               262 	call	_setDiFace
      0000DF E1                     263 	pop	hl
      0000E0 18 49                  264 	jr	00129$
      0000E2                        265 00120$:
                                    266 ;src/main.c:65: else if(j == 2){
      0000E2 21r00r00               267 	ld	hl, #_j
      0000E5 2A                     268 	ld	a, (hl+)
      0000E6 D6 02                  269 	sub	a, #0x02
      0000E8 B6                     270 	or	a, (hl)
      0000E9 20 10                  271 	jr	NZ, 00117$
                                    272 ;src/main.c:66: if(Di3.inPlay == 1){
      0000EB FAr10r00               273 	ld	a, (#(_Di3 + 16) + 0)
      0000EE 3D                     274 	dec	a
      0000EF 20 3A                  275 	jr	NZ, 00129$
                                    276 ;src/main.c:67: setDiFace(&Di3);
      0000F1 11r00r00               277 	ld	de, #_Di3
      0000F4 D5                     278 	push	de
      0000F5 CDr3Dr00               279 	call	_setDiFace
      0000F8 E1                     280 	pop	hl
      0000F9 18 30                  281 	jr	00129$
      0000FB                        282 00117$:
                                    283 ;src/main.c:71: else if(j == 3){
      0000FB 21r00r00               284 	ld	hl, #_j
      0000FE 2A                     285 	ld	a, (hl+)
      0000FF D6 03                  286 	sub	a, #0x03
      000101 B6                     287 	or	a, (hl)
      000102 20 10                  288 	jr	NZ, 00114$
                                    289 ;src/main.c:72: if(Di4.inPlay == 1){
      000104 FAr10r00               290 	ld	a, (#(_Di4 + 16) + 0)
      000107 3D                     291 	dec	a
      000108 20 21                  292 	jr	NZ, 00129$
                                    293 ;src/main.c:73: setDiFace(&Di4);
      00010A 11r00r00               294 	ld	de, #_Di4
      00010D D5                     295 	push	de
      00010E CDr3Dr00               296 	call	_setDiFace
      000111 E1                     297 	pop	hl
      000112 18 17                  298 	jr	00129$
      000114                        299 00114$:
                                    300 ;src/main.c:77: else if(j == 4){
      000114 21r00r00               301 	ld	hl, #_j
      000117 2A                     302 	ld	a, (hl+)
      000118 D6 04                  303 	sub	a, #0x04
      00011A B6                     304 	or	a, (hl)
      00011B 20 0E                  305 	jr	NZ, 00129$
                                    306 ;src/main.c:78: if(Di5.inPlay == 1){
      00011D FAr10r00               307 	ld	a, (#(_Di5 + 16) + 0)
      000120 3D                     308 	dec	a
      000121 20 08                  309 	jr	NZ, 00129$
                                    310 ;src/main.c:79: setDiFace(&Di5);
      000123 11r00r00               311 	ld	de, #_Di5
      000126 D5                     312 	push	de
      000127 CDr3Dr00               313 	call	_setDiFace
      00012A E1                     314 	pop	hl
      00012B                        315 00129$:
                                    316 ;src/main.c:51: for(j = 0; j != 5; j++){
      00012B 21r00r00               317 	ld	hl, #_j
      00012E 34                     318 	inc	(hl)
      00012F 20 02                  319 	jr	NZ, 00210$
      000131 23                     320 	inc	hl
      000132 34                     321 	inc	(hl)
      000133                        322 00210$:
      000133 21r00r00               323 	ld	hl, #_j
      000136 2A                     324 	ld	a, (hl+)
      000137 D6 05                  325 	sub	a, #0x05
      000139 B6                     326 	or	a, (hl)
      00013A C2rABr00               327 	jp	NZ,00128$
                                    328 ;src/main.c:85: }
      00013D C9                     329 	ret
                                    330 ;src/main.c:88: void moveDiceStruct(struct DiceStruct * diSprite, unsigned int x, unsigned int y){
                                    331 ;	---------------------------------
                                    332 ; Function moveDiceStruct
                                    333 ; ---------------------------------
      00013E                        334 _moveDiceStruct::
      00013E E8 FA                  335 	add	sp, #-6
                                    336 ;src/main.c:89: move_sprite(diSprite->spriteID[0], x, y);
      000140 F8 0C                  337 	ldhl	sp,	#12
      000142 7E                     338 	ld	a, (hl)
      000143 F8 00                  339 	ldhl	sp,	#0
      000145 77                     340 	ld	(hl), a
      000146 2A                     341 	ld	a, (hl+)
      000147 77                     342 	ld	(hl), a
      000148 F8 0A                  343 	ldhl	sp,	#10
      00014A 7E                     344 	ld	a, (hl)
      00014B F8 02                  345 	ldhl	sp,	#2
      00014D 77                     346 	ld	(hl), a
      00014E 2A                     347 	ld	a, (hl+)
      00014F 77                     348 	ld	(hl), a
      000150 F8 08                  349 	ldhl	sp,	#8
      000152 7E                     350 	ld	a, (hl)
      000153 F8 04                  351 	ldhl	sp,	#4
      000155 77                     352 	ld	(hl), a
      000156 F8 09                  353 	ldhl	sp,	#9
      000158 7E                     354 	ld	a, (hl)
      000159 F8 05                  355 	ldhl	sp,	#5
      00015B 32                     356 	ld	(hl-), a
      00015C 2A                     357 	ld	a, (hl+)
      00015D 5F                     358 	ld	e, a
      00015E 56                     359 	ld	d, (hl)
      00015F 1A                     360 	ld	a, (de)
                                    361 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000160 6F                     362 	ld	l, a
      000161 11r00r00               363 	ld	de, #_shadow_OAM+0
                                    364 ;	spillPairReg hl
                                    365 ;	spillPairReg hl
      000164 26 00                  366 	ld	h, #0x00
                                    367 ;	spillPairReg hl
                                    368 ;	spillPairReg hl
      000166 29                     369 	add	hl, hl
      000167 29                     370 	add	hl, hl
      000168 19                     371 	add	hl, de
      000169 4D                     372 	ld	c, l
      00016A 44                     373 	ld	b, h
                                    374 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00016B F8 01                  375 	ldhl	sp,	#1
      00016D 2A                     376 	ld	a, (hl+)
      00016E 23                     377 	inc	hl
      00016F 02                     378 	ld	(bc), a
      000170 03                     379 	inc	bc
                                    380 ;src/main.c:90: move_sprite(diSprite->spriteID[1], x + 8, y);
      000171 3A                     381 	ld	a, (hl-)
      000172 02                     382 	ld	(bc), a
      000173 2A                     383 	ld	a, (hl+)
      000174 23                     384 	inc	hl
      000175 C6 08                  385 	add	a, #0x08
      000177 4F                     386 	ld	c, a
      000178 41                     387 	ld	b, c
      000179 2A                     388 	ld	a, (hl+)
      00017A 5F                     389 	ld	e, a
      00017B 56                     390 	ld	d, (hl)
      00017C 13                     391 	inc	de
      00017D 13                     392 	inc	de
      00017E 1A                     393 	ld	a, (de)
                                    394 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00017F 6F                     395 	ld	l, a
                                    396 ;	spillPairReg hl
                                    397 ;	spillPairReg hl
      000180 26 00                  398 	ld	h, #0x00
                                    399 ;	spillPairReg hl
                                    400 ;	spillPairReg hl
      000182 29                     401 	add	hl, hl
      000183 29                     402 	add	hl, hl
      000184 11r00r00               403 	ld	de, #_shadow_OAM
      000187 19                     404 	add	hl, de
      000188 5D                     405 	ld	e, l
      000189 54                     406 	ld	d, h
                                    407 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00018A F8 00                  408 	ldhl	sp,	#0
      00018C 7E                     409 	ld	a, (hl)
      00018D 12                     410 	ld	(de), a
      00018E 13                     411 	inc	de
      00018F 78                     412 	ld	a, b
      000190 12                     413 	ld	(de), a
                                    414 ;src/main.c:91: move_sprite(diSprite->spriteID[2], x, y + 8);
      000191 7E                     415 	ld	a, (hl)
      000192 C6 08                  416 	add	a, #0x08
      000194 47                     417 	ld	b, a
      000195 F8 03                  418 	ldhl	sp,	#3
      000197 78                     419 	ld	a, b
      000198 22                     420 	ld	(hl+), a
      000199 2A                     421 	ld	a, (hl+)
      00019A 5F                     422 	ld	e, a
      00019B 56                     423 	ld	d, (hl)
      00019C 21 04 00               424 	ld	hl, #0x0004
      00019F 19                     425 	add	hl, de
      0001A0 5D                     426 	ld	e, l
      0001A1 54                     427 	ld	d, h
      0001A2 1A                     428 	ld	a, (de)
                                    429 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0001A3 6F                     430 	ld	l, a
                                    431 ;	spillPairReg hl
                                    432 ;	spillPairReg hl
      0001A4 26 00                  433 	ld	h, #0x00
                                    434 ;	spillPairReg hl
                                    435 ;	spillPairReg hl
      0001A6 29                     436 	add	hl, hl
      0001A7 29                     437 	add	hl, hl
      0001A8 11r00r00               438 	ld	de, #_shadow_OAM
      0001AB 19                     439 	add	hl, de
      0001AC 5D                     440 	ld	e, l
      0001AD 54                     441 	ld	d, h
                                    442 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0001AE F8 03                  443 	ldhl	sp,	#3
      0001B0 3A                     444 	ld	a, (hl-)
      0001B1 12                     445 	ld	(de), a
      0001B2 13                     446 	inc	de
      0001B3 7E                     447 	ld	a, (hl)
      0001B4 12                     448 	ld	(de), a
                                    449 ;src/main.c:92: move_sprite(diSprite->spriteID[3], x + 8, y + 8);
      0001B5 F8 04                  450 	ldhl	sp,#4
      0001B7 2A                     451 	ld	a, (hl+)
      0001B8 5F                     452 	ld	e, a
      0001B9 56                     453 	ld	d, (hl)
      0001BA 21 06 00               454 	ld	hl, #0x0006
      0001BD 19                     455 	add	hl, de
      0001BE 5D                     456 	ld	e, l
      0001BF 54                     457 	ld	d, h
      0001C0 1A                     458 	ld	a, (de)
                                    459 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0001C1 6F                     460 	ld	l, a
                                    461 ;	spillPairReg hl
                                    462 ;	spillPairReg hl
      0001C2 26 00                  463 	ld	h, #0x00
                                    464 ;	spillPairReg hl
                                    465 ;	spillPairReg hl
      0001C4 29                     466 	add	hl, hl
      0001C5 29                     467 	add	hl, hl
      0001C6 11r00r00               468 	ld	de, #_shadow_OAM
      0001C9 19                     469 	add	hl, de
                                    470 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0001CA 78                     471 	ld	a, b
      0001CB 22                     472 	ld	(hl+), a
      0001CC 71                     473 	ld	(hl), c
                                    474 ;src/main.c:92: move_sprite(diSprite->spriteID[3], x + 8, y + 8);
                                    475 ;src/main.c:93: }
      0001CD E8 06                  476 	add	sp, #6
      0001CF C9                     477 	ret
                                    478 ;src/main.c:97: void initDi(struct DiceStruct * diSprite, unsigned int spot){
                                    479 ;	---------------------------------
                                    480 ; Function initDi
                                    481 ; ---------------------------------
      0001D0                        482 _initDi::
      0001D0 E8 F6                  483 	add	sp, #-10
                                    484 ;src/main.c:98: for(i = 0; i != 4; i++){
      0001D2 AF                     485 	xor	a, a
      0001D3 21r00r00               486 	ld	hl, #_i
      0001D6 22                     487 	ld	(hl+), a
      0001D7 77                     488 	ld	(hl), a
      0001D8 F8 0C                  489 	ldhl	sp,	#12
      0001DA 7E                     490 	ld	a, (hl)
      0001DB F8 00                  491 	ldhl	sp,	#0
      0001DD 77                     492 	ld	(hl), a
      0001DE F8 0D                  493 	ldhl	sp,	#13
      0001E0 7E                     494 	ld	a, (hl)
      0001E1 F8 01                  495 	ldhl	sp,	#1
      0001E3 77                     496 	ld	(hl), a
      0001E4 F8 0E                  497 	ldhl	sp,#14
      0001E6 2A                     498 	ld	a, (hl+)
      0001E7 5F                     499 	ld	e, a
      0001E8 56                     500 	ld	d, (hl)
      0001E9 21 01 00               501 	ld	hl, #0x0001
      0001EC 7B                     502 	ld	a, e
      0001ED 95                     503 	sub	a, l
      0001EE 5F                     504 	ld	e, a
      0001EF 7A                     505 	ld	a, d
      0001F0 9C                     506 	sbc	a, h
      0001F1 F8 03                  507 	ldhl	sp,	#3
      0001F3 32                     508 	ld	(hl-), a
      0001F4 73                     509 	ld	(hl), e
      0001F5 2A                     510 	ld	a, (hl+)
      0001F6 23                     511 	inc	hl
      0001F7 32                     512 	ld	(hl-), a
      0001F8 2A                     513 	ld	a, (hl+)
      0001F9 23                     514 	inc	hl
      0001FA 77                     515 	ld	(hl), a
      0001FB 3E 02                  516 	ld	a, #0x02
      0001FD                        517 00116$:
      0001FD F8 04                  518 	ldhl	sp,	#4
      0001FF CB 26                  519 	sla	(hl)
      000201 23                     520 	inc	hl
      000202 CB 16                  521 	rl	(hl)
      000204 3D                     522 	dec	a
      000205 20 F6                  523 	jr	NZ, 00116$
      000207                        524 00102$:
                                    525 ;src/main.c:102: diSprite->position = spot;
      000207 D1                     526 	pop	de
      000208 D5                     527 	push	de
      000209 21 0C 00               528 	ld	hl, #0x000c
      00020C 19                     529 	add	hl, de
      00020D 4D                     530 	ld	c, l
      00020E 44                     531 	ld	b, h
      00020F F8 0E                  532 	ldhl	sp,	#14
      000211 2A                     533 	ld	a, (hl+)
      000212 02                     534 	ld	(bc), a
      000213 03                     535 	inc	bc
      000214 7E                     536 	ld	a, (hl)
      000215 02                     537 	ld	(bc), a
                                    538 ;src/main.c:105: spriteNumber = (4 * (spot - 1) ) + i;
      000216 F8 04                  539 	ldhl	sp,#4
      000218 2A                     540 	ld	a, (hl+)
      000219 5F                     541 	ld	e, a
      00021A 56                     542 	ld	d, (hl)
      00021B 21r00r00               543 	ld	hl, #_i
      00021E 2A                     544 	ld	a,	(hl+)
      00021F 66                     545 	ld	h, (hl)
      000220 6F                     546 	ld	l, a
      000221 19                     547 	add	hl, de
      000222 4D                     548 	ld	c, l
      000223 44                     549 	ld	b, h
                                    550 ;src/main.c:108: diSprite->spriteID[i] = spriteNumber;
      000224 21r00r00               551 	ld	hl, #_i
      000227 2A                     552 	ld	a, (hl+)
      000228 56                     553 	ld	d, (hl)
      000229 87                     554 	add	a, a
      00022A CB 12                  555 	rl	d
      00022C 5F                     556 	ld	e, a
      00022D E1                     557 	pop	hl
      00022E E5                     558 	push	hl
      00022F 19                     559 	add	hl, de
      000230 5D                     560 	ld	e, l
      000231 54                     561 	ld	d, h
      000232 79                     562 	ld	a, c
      000233 12                     563 	ld	(de), a
      000234 13                     564 	inc	de
      000235 78                     565 	ld	a, b
      000236 12                     566 	ld	(de), a
                                    567 ;src/main.c:111: diSprite->x = diStartPosition[0] + ( (diSprite->position - 1) * diSpacing);
      000237 D1                     568 	pop	de
      000238 D5                     569 	push	de
      000239 21 08 00               570 	ld	hl, #0x0008
      00023C 19                     571 	add	hl, de
      00023D E5                     572 	push	hl
      00023E 7D                     573 	ld	a, l
      00023F F8 08                  574 	ldhl	sp,	#8
      000241 77                     575 	ld	(hl), a
      000242 E1                     576 	pop	hl
      000243 7C                     577 	ld	a, h
      000244 F8 07                  578 	ldhl	sp,	#7
      000246 77                     579 	ld	(hl), a
      000247 21r00r00               580 	ld	hl, #_diStartPosition
      00024A 2A                     581 	ld	a, (hl+)
      00024B 4F                     582 	ld	c, a
      00024C 46                     583 	ld	b, (hl)
      00024D 21r00r00               584 	ld	hl, #_diSpacing
      000250 2A                     585 	ld	a, (hl+)
      000251 5F                     586 	ld	e, a
      000252 56                     587 	ld	d, (hl)
      000253 C5                     588 	push	bc
      000254 D5                     589 	push	de
      000255 F8 06                  590 	ldhl	sp,	#6
      000257 2A                     591 	ld	a, (hl+)
      000258 5F                     592 	ld	e, a
      000259 56                     593 	ld	d, (hl)
      00025A D5                     594 	push	de
      00025B CDr00r00               595 	call	__mulint
      00025E E8 04                  596 	add	sp, #4
      000260 6B                     597 	ld	l, e
                                    598 ;	spillPairReg hl
                                    599 ;	spillPairReg hl
      000261 62                     600 	ld	h, d
                                    601 ;	spillPairReg hl
                                    602 ;	spillPairReg hl
      000262 C1                     603 	pop	bc
      000263 09                     604 	add	hl, bc
      000264 4D                     605 	ld	c, l
      000265 44                     606 	ld	b, h
      000266 F8 06                  607 	ldhl	sp,	#6
      000268 2A                     608 	ld	a,	(hl+)
      000269 66                     609 	ld	h, (hl)
      00026A 6F                     610 	ld	l, a
      00026B 79                     611 	ld	a, c
      00026C 22                     612 	ld	(hl+), a
      00026D 70                     613 	ld	(hl), b
                                    614 ;src/main.c:112: diSprite->y = diStartPosition[1];
      00026E D1                     615 	pop	de
      00026F D5                     616 	push	de
      000270 21 0A 00               617 	ld	hl, #0x000a
      000273 19                     618 	add	hl, de
      000274 4D                     619 	ld	c, l
      000275 44                     620 	ld	b, h
      000276 11r02r00               621 	ld	de, #(_diStartPosition + 2)
      000279 1A                     622 	ld	a, (de)
      00027A F8 08                  623 	ldhl	sp,	#8
      00027C 22                     624 	ld	(hl+), a
      00027D 13                     625 	inc	de
      00027E 1A                     626 	ld	a, (de)
      00027F 32                     627 	ld	(hl-), a
      000280 59                     628 	ld	e, c
      000281 50                     629 	ld	d, b
      000282 2A                     630 	ld	a, (hl+)
      000283 12                     631 	ld	(de), a
      000284 13                     632 	inc	de
      000285 7E                     633 	ld	a, (hl)
      000286 12                     634 	ld	(de), a
                                    635 ;src/main.c:98: for(i = 0; i != 4; i++){
      000287 21r00r00               636 	ld	hl, #_i
      00028A 34                     637 	inc	(hl)
      00028B 20 02                  638 	jr	NZ, 00118$
      00028D 23                     639 	inc	hl
      00028E 34                     640 	inc	(hl)
      00028F                        641 00118$:
      00028F 21r00r00               642 	ld	hl, #_i
      000292 2A                     643 	ld	a, (hl+)
      000293 D6 04                  644 	sub	a, #0x04
      000295 B6                     645 	or	a, (hl)
      000296 C2r07r02               646 	jp	NZ,00102$
                                    647 ;src/main.c:115: diSprite->inPlay = 1;
      000299 D1                     648 	pop	de
      00029A D5                     649 	push	de
      00029B 21 10 00               650 	ld	hl, #0x0010
      00029E 19                     651 	add	hl, de
      00029F 36 01                  652 	ld	(hl), #0x01
                                    653 ;src/main.c:118: moveDiceStruct(diSprite, diSprite->x, diSprite->y);
      0002A1 69                     654 	ld	l, c
      0002A2 60                     655 	ld	h, b
      0002A3 2A                     656 	ld	a, (hl+)
      0002A4 4F                     657 	ld	c, a
      0002A5 46                     658 	ld	b, (hl)
      0002A6 F8 06                  659 	ldhl	sp,#6
      0002A8 2A                     660 	ld	a, (hl+)
      0002A9 5F                     661 	ld	e, a
      0002AA 56                     662 	ld	d, (hl)
      0002AB 1A                     663 	ld	a, (de)
      0002AC 6F                     664 	ld	l, a
                                    665 ;	spillPairReg hl
                                    666 ;	spillPairReg hl
      0002AD 13                     667 	inc	de
      0002AE 1A                     668 	ld	a, (de)
      0002AF 67                     669 	ld	h, a
                                    670 ;	spillPairReg hl
                                    671 ;	spillPairReg hl
      0002B0 C5                     672 	push	bc
      0002B1 E5                     673 	push	hl
      0002B2 F8 04                  674 	ldhl	sp,	#4
      0002B4 2A                     675 	ld	a, (hl+)
      0002B5 5F                     676 	ld	e, a
      0002B6 56                     677 	ld	d, (hl)
      0002B7 D5                     678 	push	de
      0002B8 CDr3Er01               679 	call	_moveDiceStruct
      0002BB E8 06                  680 	add	sp, #6
                                    681 ;src/main.c:121: setDiFace(diSprite);
      0002BD F8 0C                  682 	ldhl	sp,	#12
      0002BF 2A                     683 	ld	a, (hl+)
      0002C0 5F                     684 	ld	e, a
      0002C1 56                     685 	ld	d, (hl)
      0002C2 D5                     686 	push	de
      0002C3 CDr3Dr00               687 	call	_setDiFace
      0002C6 E1                     688 	pop	hl
                                    689 ;src/main.c:122: }
      0002C7 E8 0A                  690 	add	sp, #10
      0002C9 C9                     691 	ret
                                    692 ;src/main.c:125: void initGame(){
                                    693 ;	---------------------------------
                                    694 ; Function initGame
                                    695 ; ---------------------------------
      0002CA                        696 _initGame::
                                    697 ;src/main.c:126: set_sprite_data(0, 6, Sprites);
      0002CA 11r00r00               698 	ld	de, #_Sprites
      0002CD D5                     699 	push	de
      0002CE 21 00 06               700 	ld	hl, #0x600
      0002D1 E5                     701 	push	hl
      0002D2 CDr00r00               702 	call	_set_sprite_data
      0002D5 E8 04                  703 	add	sp, #4
                                    704 ;src/main.c:127: set_sprite_tile(cursor, 5);
      0002D7 21r00r00               705 	ld	hl, #_cursor
      0002DA 2A                     706 	ld	a, (hl+)
      0002DB 5F                     707 	ld	e, a
      0002DC 7E                     708 	ld	a, (hl)
                                    709 ;/opt/gbdk/include/gb/gb.h:1326: shadow_OAM[nb].tile=tile;
      0002DD 01r00r00               710 	ld	bc, #_shadow_OAM+0
      0002E0 6B                     711 	ld	l, e
                                    712 ;	spillPairReg hl
                                    713 ;	spillPairReg hl
      0002E1 26 00                  714 	ld	h, #0x00
                                    715 ;	spillPairReg hl
                                    716 ;	spillPairReg hl
      0002E3 29                     717 	add	hl, hl
      0002E4 29                     718 	add	hl, hl
      0002E5 09                     719 	add	hl, bc
      0002E6 23                     720 	inc	hl
      0002E7 23                     721 	inc	hl
      0002E8 36 05                  722 	ld	(hl), #0x05
                                    723 ;src/main.c:128: set_bkg_data(0, 128, backgroundData);
      0002EA 11r00r00               724 	ld	de, #_backgroundData
      0002ED D5                     725 	push	de
      0002EE 21 00 80               726 	ld	hl, #0x8000
      0002F1 E5                     727 	push	hl
      0002F2 CDr00r00               728 	call	_set_bkg_data
      0002F5 E8 04                  729 	add	sp, #4
                                    730 ;src/main.c:129: set_bkg_tiles(0, 0, 20, 32, backgroundMap);
      0002F7 11r00r00               731 	ld	de, #_backgroundMap
      0002FA D5                     732 	push	de
      0002FB 21 14 20               733 	ld	hl, #0x2014
      0002FE E5                     734 	push	hl
      0002FF AF                     735 	xor	a, a
      000300 0F                     736 	rrca
      000301 F5                     737 	push	af
      000302 CDr00r00               738 	call	_set_bkg_tiles
      000305 E8 06                  739 	add	sp, #6
                                    740 ;src/main.c:130: viewMode = 0;
      000307 21r00r00               741 	ld	hl, #_viewMode
      00030A 36 00                  742 	ld	(hl), #0x00
                                    743 ;src/main.c:132: SHOW_BKG;
      00030C F0r00                  744 	ldh	a, (_LCDC_REG + 0)
      00030E F6 01                  745 	or	a, #0x01
      000310 E0r00                  746 	ldh	(_LCDC_REG + 0), a
                                    747 ;src/main.c:134: initDi(&Di1, 1);
      000312 11 01 00               748 	ld	de, #0x0001
      000315 D5                     749 	push	de
      000316 11r00r00               750 	ld	de, #_Di1
      000319 D5                     751 	push	de
      00031A CDrD0r01               752 	call	_initDi
      00031D E8 04                  753 	add	sp, #4
                                    754 ;src/main.c:135: initDi(&Di2, 2);
      00031F 11 02 00               755 	ld	de, #0x0002
      000322 D5                     756 	push	de
      000323 11r00r00               757 	ld	de, #_Di2
      000326 D5                     758 	push	de
      000327 CDrD0r01               759 	call	_initDi
      00032A E8 04                  760 	add	sp, #4
                                    761 ;src/main.c:136: initDi(&Di3, 3);
      00032C 11 03 00               762 	ld	de, #0x0003
      00032F D5                     763 	push	de
      000330 11r00r00               764 	ld	de, #_Di3
      000333 D5                     765 	push	de
      000334 CDrD0r01               766 	call	_initDi
      000337 E8 04                  767 	add	sp, #4
                                    768 ;src/main.c:137: initDi(&Di4, 4);
      000339 11 04 00               769 	ld	de, #0x0004
      00033C D5                     770 	push	de
      00033D 11r00r00               771 	ld	de, #_Di4
      000340 D5                     772 	push	de
      000341 CDrD0r01               773 	call	_initDi
      000344 E8 04                  774 	add	sp, #4
                                    775 ;src/main.c:138: initDi(&Di5, 5);
      000346 11 05 00               776 	ld	de, #0x0005
      000349 D5                     777 	push	de
      00034A 11r00r00               778 	ld	de, #_Di5
      00034D D5                     779 	push	de
      00034E CDrD0r01               780 	call	_initDi
      000351 E8 04                  781 	add	sp, #4
                                    782 ;src/main.c:139: spriteFlip();
      000353 CDr00r00               783 	call	_spriteFlip
                                    784 ;src/main.c:142: cursorIndex = 0;
      000356 AF                     785 	xor	a, a
      000357 21r00r00               786 	ld	hl, #_cursorIndex
      00035A 22                     787 	ld	(hl+), a
      00035B 77                     788 	ld	(hl), a
                                    789 ;src/main.c:143: cursorPosition[0] = 16;
      00035C 21r00r00               790 	ld	hl, #_cursorPosition
      00035F 3E 10                  791 	ld	a, #0x10
      000361 22                     792 	ld	(hl+), a
      000362 36 00                  793 	ld	(hl), #0x00
                                    794 ;src/main.c:144: cursorPosition[1] = 144;
      000364 01r02r00               795 	ld	bc, #_cursorPosition + 2
      000367 69                     796 	ld	l, c
      000368 60                     797 	ld	h, b
      000369 3E 90                  798 	ld	a, #0x90
      00036B 22                     799 	ld	(hl+), a
      00036C 36 00                  800 	ld	(hl), #0x00
                                    801 ;src/main.c:145: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      00036E 0A                     802 	ld	a, (bc)
      00036F 47                     803 	ld	b, a
      000370 21r00r00               804 	ld	hl, #_cursorPosition
      000373 4E                     805 	ld	c, (hl)
      000374 21r00r00               806 	ld	hl, #_cursor
      000377 2A                     807 	ld	a, (hl+)
      000378 5F                     808 	ld	e, a
      000379 56                     809 	ld	d, (hl)
                                    810 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      00037A 6B                     811 	ld	l, e
                                    812 ;	spillPairReg hl
                                    813 ;	spillPairReg hl
      00037B 26 00                  814 	ld	h, #0x00
                                    815 ;	spillPairReg hl
                                    816 ;	spillPairReg hl
      00037D 29                     817 	add	hl, hl
      00037E 29                     818 	add	hl, hl
      00037F 11r00r00               819 	ld	de, #_shadow_OAM
      000382 19                     820 	add	hl, de
                                    821 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000383 78                     822 	ld	a, b
      000384 22                     823 	ld	(hl+), a
      000385 71                     824 	ld	(hl), c
                                    825 ;src/main.c:147: scoreDisplay();
      000386 CDr00r00               826 	call	_scoreDisplay
                                    827 ;src/main.c:149: rollsLeft = 3;
      000389 21r00r00               828 	ld	hl, #_rollsLeft
      00038C 3E 03                  829 	ld	a, #0x03
      00038E 22                     830 	ld	(hl+), a
      00038F AF                     831 	xor	a, a
      000390 77                     832 	ld	(hl), a
                                    833 ;src/main.c:150: turn = 1;
      000391 21r00r00               834 	ld	hl, #_turn
      000394 3E 01                  835 	ld	a, #0x01
      000396 22                     836 	ld	(hl+), a
      000397 AF                     837 	xor	a, a
      000398 77                     838 	ld	(hl), a
                                    839 ;src/main.c:152: turnRollDisplay();
      000399 CDr00r00               840 	call	_turnRollDisplay
                                    841 ;src/main.c:154: SHOW_SPRITES;
      00039C F0r00                  842 	ldh	a, (_LCDC_REG + 0)
      00039E F6 02                  843 	or	a, #0x02
      0003A0 E0r00                  844 	ldh	(_LCDC_REG + 0), a
                                    845 ;src/main.c:155: }
      0003A2 C9                     846 	ret
                                    847 ;src/main.c:158: void newTurn(){
                                    848 ;	---------------------------------
                                    849 ; Function newTurn
                                    850 ; ---------------------------------
      0003A3                        851 _newTurn::
                                    852 ;src/main.c:159: turn++;
      0003A3 21r00r00               853 	ld	hl, #_turn
      0003A6 34                     854 	inc	(hl)
      0003A7 20 02                  855 	jr	NZ, 00138$
      0003A9 23                     856 	inc	hl
      0003AA 34                     857 	inc	(hl)
      0003AB                        858 00138$:
                                    859 ;src/main.c:160: rollsLeft = 3;
      0003AB 21r00r00               860 	ld	hl, #_rollsLeft
      0003AE 3E 03                  861 	ld	a, #0x03
      0003B0 22                     862 	ld	(hl+), a
      0003B1 AF                     863 	xor	a, a
      0003B2 77                     864 	ld	(hl), a
                                    865 ;src/main.c:161: rollsEnabled = 1;
      0003B3 21r00r00               866 	ld	hl, #_rollsEnabled
      0003B6 36 01                  867 	ld	(hl), #0x01
                                    868 ;src/main.c:162: scorecardChangeA = 0;
      0003B8 21r00r00               869 	ld	hl, #_scorecardChangeA
      0003BB 36 00                  870 	ld	(hl), #0x00
                                    871 ;src/main.c:163: scorecardChangeB = 0;
      0003BD 21r00r00               872 	ld	hl, #_scorecardChangeB
      0003C0 36 00                  873 	ld	(hl), #0x00
                                    874 ;src/main.c:164: if(Di1.inPlay == 0){
      0003C2 21r10r00               875 	ld	hl, #_Di1 + 16
      0003C5 7E                     876 	ld	a, (hl)
      0003C6 B7                     877 	or	a, a
      0003C7 20 19                  878 	jr	NZ, 00102$
                                    879 ;src/main.c:165: Di1.inPlay = 1;
      0003C9 36 01                  880 	ld	(hl), #0x01
                                    881 ;src/main.c:166: moveDiceStruct(&Di1, Di1.x, rollPosY);
      0003CB 21r00r00               882 	ld	hl, #_rollPosY
      0003CE 2A                     883 	ld	a, (hl+)
      0003CF 4F                     884 	ld	c, a
      0003D0 46                     885 	ld	b, (hl)
      0003D1 21r08r00               886 	ld	hl, #_Di1 + 8
      0003D4 2A                     887 	ld	a,	(hl+)
      0003D5 66                     888 	ld	h, (hl)
                                    889 ;	spillPairReg hl
      0003D6 6F                     890 	ld	l, a
                                    891 ;	spillPairReg hl
                                    892 ;	spillPairReg hl
      0003D7 C5                     893 	push	bc
      0003D8 E5                     894 	push	hl
      0003D9 11r00r00               895 	ld	de, #_Di1
      0003DC D5                     896 	push	de
      0003DD CDr3Er01               897 	call	_moveDiceStruct
      0003E0 E8 06                  898 	add	sp, #6
      0003E2                        899 00102$:
                                    900 ;src/main.c:168: if(Di2.inPlay == 0){
      0003E2 21r10r00               901 	ld	hl, #_Di2 + 16
      0003E5 7E                     902 	ld	a, (hl)
      0003E6 B7                     903 	or	a, a
      0003E7 20 19                  904 	jr	NZ, 00104$
                                    905 ;src/main.c:169: Di2.inPlay = 1;
      0003E9 36 01                  906 	ld	(hl), #0x01
                                    907 ;src/main.c:170: moveDiceStruct(&Di2, Di2.x, rollPosY);
      0003EB 21r00r00               908 	ld	hl, #_rollPosY
      0003EE 2A                     909 	ld	a, (hl+)
      0003EF 4F                     910 	ld	c, a
      0003F0 46                     911 	ld	b, (hl)
      0003F1 21r08r00               912 	ld	hl, #_Di2 + 8
      0003F4 2A                     913 	ld	a,	(hl+)
      0003F5 66                     914 	ld	h, (hl)
                                    915 ;	spillPairReg hl
      0003F6 6F                     916 	ld	l, a
                                    917 ;	spillPairReg hl
                                    918 ;	spillPairReg hl
      0003F7 C5                     919 	push	bc
      0003F8 E5                     920 	push	hl
      0003F9 11r00r00               921 	ld	de, #_Di2
      0003FC D5                     922 	push	de
      0003FD CDr3Er01               923 	call	_moveDiceStruct
      000400 E8 06                  924 	add	sp, #6
      000402                        925 00104$:
                                    926 ;src/main.c:172: if(Di3.inPlay == 0){
      000402 21r10r00               927 	ld	hl, #_Di3 + 16
      000405 7E                     928 	ld	a, (hl)
      000406 B7                     929 	or	a, a
      000407 20 19                  930 	jr	NZ, 00106$
                                    931 ;src/main.c:173: Di3.inPlay = 1;
      000409 36 01                  932 	ld	(hl), #0x01
                                    933 ;src/main.c:174: moveDiceStruct(&Di3, Di3.x, rollPosY);
      00040B 21r00r00               934 	ld	hl, #_rollPosY
      00040E 2A                     935 	ld	a, (hl+)
      00040F 4F                     936 	ld	c, a
      000410 46                     937 	ld	b, (hl)
      000411 21r08r00               938 	ld	hl, #_Di3 + 8
      000414 2A                     939 	ld	a,	(hl+)
      000415 66                     940 	ld	h, (hl)
                                    941 ;	spillPairReg hl
      000416 6F                     942 	ld	l, a
                                    943 ;	spillPairReg hl
                                    944 ;	spillPairReg hl
      000417 C5                     945 	push	bc
      000418 E5                     946 	push	hl
      000419 11r00r00               947 	ld	de, #_Di3
      00041C D5                     948 	push	de
      00041D CDr3Er01               949 	call	_moveDiceStruct
      000420 E8 06                  950 	add	sp, #6
      000422                        951 00106$:
                                    952 ;src/main.c:176: if(Di4.inPlay == 0){
      000422 21r10r00               953 	ld	hl, #_Di4 + 16
      000425 7E                     954 	ld	a, (hl)
      000426 B7                     955 	or	a, a
      000427 20 19                  956 	jr	NZ, 00108$
                                    957 ;src/main.c:177: Di4.inPlay = 1;
      000429 36 01                  958 	ld	(hl), #0x01
                                    959 ;src/main.c:178: moveDiceStruct(&Di4, Di4.x, rollPosY);
      00042B 21r00r00               960 	ld	hl, #_rollPosY
      00042E 2A                     961 	ld	a, (hl+)
      00042F 4F                     962 	ld	c, a
      000430 46                     963 	ld	b, (hl)
      000431 21r08r00               964 	ld	hl, #_Di4 + 8
      000434 2A                     965 	ld	a,	(hl+)
      000435 66                     966 	ld	h, (hl)
                                    967 ;	spillPairReg hl
      000436 6F                     968 	ld	l, a
                                    969 ;	spillPairReg hl
                                    970 ;	spillPairReg hl
      000437 C5                     971 	push	bc
      000438 E5                     972 	push	hl
      000439 11r00r00               973 	ld	de, #_Di4
      00043C D5                     974 	push	de
      00043D CDr3Er01               975 	call	_moveDiceStruct
      000440 E8 06                  976 	add	sp, #6
      000442                        977 00108$:
                                    978 ;src/main.c:180: if(Di5.inPlay == 0){
      000442 21r10r00               979 	ld	hl, #_Di5 + 16
      000445 7E                     980 	ld	a, (hl)
      000446 B7                     981 	or	a, a
      000447 C0                     982 	ret	NZ
                                    983 ;src/main.c:181: Di5.inPlay = 1;
      000448 36 01                  984 	ld	(hl), #0x01
                                    985 ;src/main.c:182: moveDiceStruct(&Di5, Di5.x, rollPosY);
      00044A 21r00r00               986 	ld	hl, #_rollPosY
      00044D 2A                     987 	ld	a, (hl+)
      00044E 4F                     988 	ld	c, a
      00044F 46                     989 	ld	b, (hl)
      000450 21r08r00               990 	ld	hl, #_Di5 + 8
      000453 2A                     991 	ld	a,	(hl+)
      000454 66                     992 	ld	h, (hl)
                                    993 ;	spillPairReg hl
      000455 6F                     994 	ld	l, a
                                    995 ;	spillPairReg hl
                                    996 ;	spillPairReg hl
      000456 C5                     997 	push	bc
      000457 E5                     998 	push	hl
      000458 11r00r00               999 	ld	de, #_Di5
      00045B D5                    1000 	push	de
      00045C CDr3Er01              1001 	call	_moveDiceStruct
      00045F E8 06                 1002 	add	sp, #6
                                   1003 ;src/main.c:184: }
      000461 C9                    1004 	ret
                                   1005 ;src/main.c:186: void rollTracker(){
                                   1006 ;	---------------------------------
                                   1007 ; Function rollTracker
                                   1008 ; ---------------------------------
      000462                       1009 _rollTracker::
                                   1010 ;src/main.c:187: turnsPassed = 0;
      000462 AF                    1011 	xor	a, a
      000463 21r00r00              1012 	ld	hl, #_turnsPassed
      000466 22                    1013 	ld	(hl+), a
      000467 77                    1014 	ld	(hl), a
                                   1015 ;src/main.c:188: if(rollsLeft == 0){
      000468 21r01r00              1016 	ld	hl, #_rollsLeft + 1
      00046B 3A                    1017 	ld	a, (hl-)
                                   1018 ;src/main.c:190: for(i = 0; i != 14; i++){
      00046C B6                    1019 	or	a,(hl)
      00046D 20 60                 1020 	jr	NZ, 00112$
      00046F 21r00r00              1021 	ld	hl, #_i
      000472 22                    1022 	ld	(hl+), a
      000473 77                    1023 	ld	(hl), a
      000474                       1024 00114$:
                                   1025 ;src/main.c:191: if(scorecard[i] != 255){
      000474 21r00r00              1026 	ld	hl, #_i
      000477 2A                    1027 	ld	a, (hl+)
      000478 4F                    1028 	ld	c, a
      000479 46                    1029 	ld	b, (hl)
      00047A CB 21                 1030 	sla	c
      00047C CB 10                 1031 	rl	b
      00047E 21r00r00              1032 	ld	hl, #_scorecard
      000481 09                    1033 	add	hl, bc
      000482 2A                    1034 	ld	a, (hl+)
      000483 4F                    1035 	ld	c, a
      000484 46                    1036 	ld	b, (hl)
      000485 79                    1037 	ld	a, c
      000486 3C                    1038 	inc	a
      000487 B0                    1039 	or	a, b
      000488 28 08                 1040 	jr	Z, 00115$
                                   1041 ;src/main.c:192: turnsPassed++;
      00048A 21r00r00              1042 	ld	hl, #_turnsPassed
      00048D 34                    1043 	inc	(hl)
      00048E 20 02                 1044 	jr	NZ, 00155$
      000490 23                    1045 	inc	hl
      000491 34                    1046 	inc	(hl)
      000492                       1047 00155$:
      000492                       1048 00115$:
                                   1049 ;src/main.c:190: for(i = 0; i != 14; i++){
      000492 21r00r00              1050 	ld	hl, #_i
      000495 34                    1051 	inc	(hl)
      000496 20 02                 1052 	jr	NZ, 00156$
      000498 23                    1053 	inc	hl
      000499 34                    1054 	inc	(hl)
      00049A                       1055 00156$:
      00049A 21r00r00              1056 	ld	hl, #_i
      00049D 2A                    1057 	ld	a, (hl+)
      00049E D6 0E                 1058 	sub	a, #0x0e
      0004A0 B6                    1059 	or	a, (hl)
      0004A1 20 D1                 1060 	jr	NZ, 00114$
                                   1061 ;src/main.c:195: if(turnsPassed < turn){
      0004A3 11r00r00              1062 	ld	de, #_turnsPassed
      0004A6 21r00r00              1063 	ld	hl, #_turn
      0004A9 1A                    1064 	ld	a, (de)
      0004AA 13                    1065 	inc	de
      0004AB 96                    1066 	sub	a, (hl)
      0004AC 23                    1067 	inc	hl
      0004AD 1A                    1068 	ld	a, (de)
      0004AE 9E                    1069 	sbc	a, (hl)
      0004AF 30 07                 1070 	jr	NC, 00107$
                                   1071 ;src/main.c:196: rollsEnabled = 0;
      0004B1 21r00r00              1072 	ld	hl, #_rollsEnabled
      0004B4 36 00                 1073 	ld	(hl), #0x00
      0004B6 18 23                 1074 	jr	00113$
      0004B8                       1075 00107$:
                                   1076 ;src/main.c:198: else if(turnsPassed == turn){
      0004B8 FAr00r00              1077 	ld	a, (#_turnsPassed)
      0004BB 21r00r00              1078 	ld	hl, #_turn
      0004BE 96                    1079 	sub	a, (hl)
      0004BF 20 1A                 1080 	jr	NZ, 00113$
      0004C1 FAr01r00              1081 	ld	a, (#_turnsPassed + 1)
      0004C4 21r01r00              1082 	ld	hl, #_turn + 1
      0004C7 96                    1083 	sub	a, (hl)
      0004C8 20 11                 1084 	jr	NZ, 00113$
                                   1085 ;src/main.c:199: newTurn();
      0004CA CDrA3r03              1086 	call	_newTurn
      0004CD 18 0C                 1087 	jr	00113$
      0004CF                       1088 00112$:
                                   1089 ;src/main.c:202: else if(rollsLeft > 0){
      0004CF 21r01r00              1090 	ld	hl, #_rollsLeft + 1
      0004D2 3A                    1091 	ld	a, (hl-)
      0004D3 B6                    1092 	or	a, (hl)
      0004D4 28 05                 1093 	jr	Z, 00113$
                                   1094 ;src/main.c:203: rollsEnabled = 1;
      0004D6 21r00r00              1095 	ld	hl, #_rollsEnabled
      0004D9 36 01                 1096 	ld	(hl), #0x01
      0004DB                       1097 00113$:
                                   1098 ;src/main.c:205: turnsPassed = 0;
      0004DB AF                    1099 	xor	a, a
      0004DC 21r00r00              1100 	ld	hl, #_turnsPassed
      0004DF 22                    1101 	ld	(hl+), a
      0004E0 77                    1102 	ld	(hl), a
                                   1103 ;src/main.c:206: }
      0004E1 C9                    1104 	ret
                                   1105 ;src/main.c:208: void playCursorLeft(){
                                   1106 ;	---------------------------------
                                   1107 ; Function playCursorLeft
                                   1108 ; ---------------------------------
      0004E2                       1109 _playCursorLeft::
                                   1110 ;src/main.c:209: if(cursorIndex == 1 || cursorIndex == 2){
      0004E2 21r00r00              1111 	ld	hl, #_cursorIndex
      0004E5 2A                    1112 	ld	a, (hl+)
      0004E6 3D                    1113 	dec	a
      0004E7 B6                    1114 	or	a, (hl)
      0004E8 28 09                 1115 	jr	Z, 00101$
      0004EA 21r00r00              1116 	ld	hl, #_cursorIndex
      0004ED 2A                    1117 	ld	a, (hl+)
      0004EE D6 02                 1118 	sub	a, #0x02
      0004F0 B6                    1119 	or	a, (hl)
      0004F1 20 1F                 1120 	jr	NZ, 00102$
      0004F3                       1121 00101$:
                                   1122 ;src/main.c:210: cursorPosition[0] -= 48;
      0004F3 21r00r00              1123 	ld	hl, #_cursorPosition
      0004F6 2A                    1124 	ld	a, (hl+)
      0004F7 4F                    1125 	ld	c, a
      0004F8 46                    1126 	ld	b, (hl)
      0004F9 79                    1127 	ld	a, c
      0004FA C6 D0                 1128 	add	a, #0xd0
      0004FC 4F                    1129 	ld	c, a
      0004FD 78                    1130 	ld	a, b
      0004FE CE FF                 1131 	adc	a, #0xff
      000500 47                    1132 	ld	b, a
      000501 21r00r00              1133 	ld	hl, #_cursorPosition
      000504 79                    1134 	ld	a, c
      000505 22                    1135 	ld	(hl+), a
      000506 70                    1136 	ld	(hl), b
                                   1137 ;src/main.c:211: cursorIndex -= 1;
      000507 21r00r00              1138 	ld	hl, #_cursorIndex
      00050A 2A                    1139 	ld	a, (hl+)
      00050B 5F                    1140 	ld	e, a
      00050C 3A                    1141 	ld	a, (hl-)
      00050D 57                    1142 	ld	d, a
      00050E 1B                    1143 	dec	de
      00050F 7B                    1144 	ld	a, e
      000510 22                    1145 	ld	(hl+), a
      000511 72                    1146 	ld	(hl), d
      000512                       1147 00102$:
                                   1148 ;src/main.c:213: if(cursorIndex > 3 && cursorIndex <= 7){
      000512 21r00r00              1149 	ld	hl, #_cursorIndex
      000515 3E 03                 1150 	ld	a, #0x03
      000517 96                    1151 	sub	a, (hl)
      000518 23                    1152 	inc	hl
      000519 3E 00                 1153 	ld	a, #0x00
      00051B 9E                    1154 	sbc	a, (hl)
      00051C 30 2B                 1155 	jr	NC, 00105$
      00051E 21r00r00              1156 	ld	hl, #_cursorIndex
      000521 3E 07                 1157 	ld	a, #0x07
      000523 96                    1158 	sub	a, (hl)
      000524 23                    1159 	inc	hl
      000525 3E 00                 1160 	ld	a, #0x00
      000527 9E                    1161 	sbc	a, (hl)
      000528 38 1F                 1162 	jr	C, 00105$
                                   1163 ;src/main.c:214: cursorPosition[0] -= 24;
      00052A 21r00r00              1164 	ld	hl, #_cursorPosition
      00052D 2A                    1165 	ld	a, (hl+)
      00052E 4F                    1166 	ld	c, a
      00052F 46                    1167 	ld	b, (hl)
      000530 79                    1168 	ld	a, c
      000531 C6 E8                 1169 	add	a, #0xe8
      000533 4F                    1170 	ld	c, a
      000534 78                    1171 	ld	a, b
      000535 CE FF                 1172 	adc	a, #0xff
      000537 47                    1173 	ld	b, a
      000538 21r00r00              1174 	ld	hl, #_cursorPosition
      00053B 79                    1175 	ld	a, c
      00053C 22                    1176 	ld	(hl+), a
      00053D 70                    1177 	ld	(hl), b
                                   1178 ;src/main.c:215: cursorIndex -= 1;
      00053E 21r00r00              1179 	ld	hl, #_cursorIndex
      000541 2A                    1180 	ld	a, (hl+)
      000542 5F                    1181 	ld	e, a
      000543 3A                    1182 	ld	a, (hl-)
      000544 57                    1183 	ld	d, a
      000545 1B                    1184 	dec	de
      000546 7B                    1185 	ld	a, e
      000547 22                    1186 	ld	(hl+), a
      000548 72                    1187 	ld	(hl), d
      000549                       1188 00105$:
                                   1189 ;src/main.c:217: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      000549 21r02r00              1190 	ld	hl, #_cursorPosition + 2
      00054C 46                    1191 	ld	b, (hl)
      00054D 21r00r00              1192 	ld	hl, #_cursorPosition
      000550 4E                    1193 	ld	c, (hl)
      000551 21r00r00              1194 	ld	hl, #_cursor
      000554 2A                    1195 	ld	a, (hl+)
      000555 5F                    1196 	ld	e, a
      000556 56                    1197 	ld	d, (hl)
                                   1198 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000557 6B                    1199 	ld	l, e
                                   1200 ;	spillPairReg hl
                                   1201 ;	spillPairReg hl
      000558 26 00                 1202 	ld	h, #0x00
                                   1203 ;	spillPairReg hl
                                   1204 ;	spillPairReg hl
      00055A 29                    1205 	add	hl, hl
      00055B 29                    1206 	add	hl, hl
      00055C 11r00r00              1207 	ld	de, #_shadow_OAM
      00055F 19                    1208 	add	hl, de
                                   1209 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000560 78                    1210 	ld	a, b
      000561 22                    1211 	ld	(hl+), a
      000562 71                    1212 	ld	(hl), c
                                   1213 ;src/main.c:217: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1214 ;src/main.c:218: }
      000563 C9                    1215 	ret
                                   1216 ;src/main.c:221: void playCursorRight(){
                                   1217 ;	---------------------------------
                                   1218 ; Function playCursorRight
                                   1219 ; ---------------------------------
      000564                       1220 _playCursorRight::
                                   1221 ;src/main.c:222: if(cursorIndex == 0 || cursorIndex == 1){
      000564 21r01r00              1222 	ld	hl, #_cursorIndex + 1
      000567 3A                    1223 	ld	a, (hl-)
      000568 B6                    1224 	or	a, (hl)
      000569 28 05                 1225 	jr	Z, 00101$
      00056B 2A                    1226 	ld	a, (hl+)
      00056C 3D                    1227 	dec	a
      00056D B6                    1228 	or	a, (hl)
      00056E 20 1A                 1229 	jr	NZ, 00102$
      000570                       1230 00101$:
                                   1231 ;src/main.c:223: cursorPosition[0] += 48;
      000570 21r00r00              1232 	ld	hl, #_cursorPosition
      000573 2A                    1233 	ld	a, (hl+)
      000574 4F                    1234 	ld	c, a
      000575 46                    1235 	ld	b, (hl)
      000576 21 30 00              1236 	ld	hl, #0x0030
      000579 09                    1237 	add	hl, bc
      00057A 4D                    1238 	ld	c, l
      00057B 44                    1239 	ld	b, h
      00057C 21r00r00              1240 	ld	hl, #_cursorPosition
      00057F 79                    1241 	ld	a, c
      000580 22                    1242 	ld	(hl+), a
      000581 70                    1243 	ld	(hl), b
                                   1244 ;src/main.c:224: cursorIndex += 1;
      000582 21r00r00              1245 	ld	hl, #_cursorIndex
      000585 34                    1246 	inc	(hl)
      000586 20 02                 1247 	jr	NZ, 00127$
      000588 23                    1248 	inc	hl
      000589 34                    1249 	inc	(hl)
      00058A                       1250 00127$:
      00058A                       1251 00102$:
                                   1252 ;src/main.c:226: if(cursorIndex >= 3 && cursorIndex < 7){
      00058A 21r00r00              1253 	ld	hl, #_cursorIndex
      00058D 2A                    1254 	ld	a, (hl+)
      00058E D6 03                 1255 	sub	a, #0x03
      000590 7E                    1256 	ld	a, (hl)
      000591 DE 00                 1257 	sbc	a, #0x00
      000593 38 23                 1258 	jr	C, 00105$
      000595 2B                    1259 	dec	hl
      000596 2A                    1260 	ld	a, (hl+)
      000597 D6 07                 1261 	sub	a, #0x07
      000599 7E                    1262 	ld	a, (hl)
      00059A DE 00                 1263 	sbc	a, #0x00
      00059C 30 1A                 1264 	jr	NC, 00105$
                                   1265 ;src/main.c:227: cursorPosition[0] += 24;
      00059E 21r00r00              1266 	ld	hl, #_cursorPosition
      0005A1 2A                    1267 	ld	a, (hl+)
      0005A2 4F                    1268 	ld	c, a
      0005A3 46                    1269 	ld	b, (hl)
      0005A4 21 18 00              1270 	ld	hl, #0x0018
      0005A7 09                    1271 	add	hl, bc
      0005A8 4D                    1272 	ld	c, l
      0005A9 44                    1273 	ld	b, h
      0005AA 21r00r00              1274 	ld	hl, #_cursorPosition
      0005AD 79                    1275 	ld	a, c
      0005AE 22                    1276 	ld	(hl+), a
      0005AF 70                    1277 	ld	(hl), b
                                   1278 ;src/main.c:228: cursorIndex += 1;
      0005B0 21r00r00              1279 	ld	hl, #_cursorIndex
      0005B3 34                    1280 	inc	(hl)
      0005B4 20 02                 1281 	jr	NZ, 00128$
      0005B6 23                    1282 	inc	hl
      0005B7 34                    1283 	inc	(hl)
      0005B8                       1284 00128$:
      0005B8                       1285 00105$:
                                   1286 ;src/main.c:230: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      0005B8 21r02r00              1287 	ld	hl, #_cursorPosition + 2
      0005BB 46                    1288 	ld	b, (hl)
      0005BC 21r00r00              1289 	ld	hl, #_cursorPosition
      0005BF 4E                    1290 	ld	c, (hl)
      0005C0 21r00r00              1291 	ld	hl, #_cursor
      0005C3 2A                    1292 	ld	a, (hl+)
      0005C4 5F                    1293 	ld	e, a
      0005C5 56                    1294 	ld	d, (hl)
                                   1295 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      0005C6 6B                    1296 	ld	l, e
                                   1297 ;	spillPairReg hl
                                   1298 ;	spillPairReg hl
      0005C7 26 00                 1299 	ld	h, #0x00
                                   1300 ;	spillPairReg hl
                                   1301 ;	spillPairReg hl
      0005C9 29                    1302 	add	hl, hl
      0005CA 29                    1303 	add	hl, hl
      0005CB 11r00r00              1304 	ld	de, #_shadow_OAM
      0005CE 19                    1305 	add	hl, de
                                   1306 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      0005CF 78                    1307 	ld	a, b
      0005D0 22                    1308 	ld	(hl+), a
      0005D1 71                    1309 	ld	(hl), c
                                   1310 ;src/main.c:230: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1311 ;src/main.c:231: }
      0005D2 C9                    1312 	ret
                                   1313 ;src/main.c:234: void toggleDi(){
                                   1314 ;	---------------------------------
                                   1315 ; Function toggleDi
                                   1316 ; ---------------------------------
      0005D3                       1317 _toggleDi::
                                   1318 ;src/main.c:235: switch(cursorIndex){
      0005D3 21r00r00              1319 	ld	hl, #_cursorIndex
      0005D6 2A                    1320 	ld	a, (hl+)
      0005D7 D6 03                 1321 	sub	a, #0x03
      0005D9 B6                    1322 	or	a, (hl)
      0005DA 28 28                 1323 	jr	Z, 00101$
      0005DC 21r00r00              1324 	ld	hl, #_cursorIndex
      0005DF 2A                    1325 	ld	a, (hl+)
      0005E0 D6 04                 1326 	sub	a, #0x04
      0005E2 B6                    1327 	or	a, (hl)
      0005E3 28 5D                 1328 	jr	Z, 00107$
      0005E5 21r00r00              1329 	ld	hl, #_cursorIndex
      0005E8 2A                    1330 	ld	a, (hl+)
      0005E9 D6 05                 1331 	sub	a, #0x05
      0005EB B6                    1332 	or	a, (hl)
      0005EC CAr80r06              1333 	jp	Z,00113$
      0005EF 21r00r00              1334 	ld	hl, #_cursorIndex
      0005F2 2A                    1335 	ld	a, (hl+)
      0005F3 D6 06                 1336 	sub	a, #0x06
      0005F5 B6                    1337 	or	a, (hl)
      0005F6 CArBEr06              1338 	jp	Z,00119$
      0005F9 21r00r00              1339 	ld	hl, #_cursorIndex
      0005FC 2A                    1340 	ld	a, (hl+)
      0005FD D6 07                 1341 	sub	a, #0x07
      0005FF B6                    1342 	or	a, (hl)
      000600 CArFCr06              1343 	jp	Z,00125$
      000603 C9                    1344 	ret
                                   1345 ;src/main.c:236: case 3:
      000604                       1346 00101$:
                                   1347 ;src/main.c:237: if(Di1.inPlay == 1){
      000604 21r10r00              1348 	ld	hl, #_Di1 + 16
      000607 4E                    1349 	ld	c, (hl)
                                   1350 ;src/main.c:239: moveDiceStruct(&Di1, Di1.x, heldPosY);
                                   1351 ;src/main.c:237: if(Di1.inPlay == 1){
      000608 79                    1352 	ld	a, c
                                   1353 ;src/main.c:238: Di1.inPlay = 0;
      000609 3D                    1354 	dec	a
      00060A 20 19                 1355 	jr	NZ, 00105$
      00060C 77                    1356 	ld	(hl),a
                                   1357 ;src/main.c:239: moveDiceStruct(&Di1, Di1.x, heldPosY);
      00060D 21r00r00              1358 	ld	hl, #_heldPosY
      000610 2A                    1359 	ld	a, (hl+)
      000611 4F                    1360 	ld	c, a
      000612 46                    1361 	ld	b, (hl)
      000613 21r08r00              1362 	ld	hl, #(_Di1 + 8)
      000616 2A                    1363 	ld	a,	(hl+)
      000617 66                    1364 	ld	h, (hl)
                                   1365 ;	spillPairReg hl
      000618 6F                    1366 	ld	l, a
                                   1367 ;	spillPairReg hl
                                   1368 ;	spillPairReg hl
      000619 C5                    1369 	push	bc
      00061A E5                    1370 	push	hl
      00061B 11r00r00              1371 	ld	de, #_Di1
      00061E D5                    1372 	push	de
      00061F CDr3Er01              1373 	call	_moveDiceStruct
      000622 E8 06                 1374 	add	sp, #6
      000624 C9                    1375 	ret
      000625                       1376 00105$:
                                   1377 ;src/main.c:241: else if(Di1.inPlay == 0){
      000625 79                    1378 	ld	a, c
      000626 B7                    1379 	or	a, a
      000627 C0                    1380 	ret	NZ
                                   1381 ;src/main.c:242: Di1.inPlay = 1;
      000628 36 01                 1382 	ld	(hl), #0x01
                                   1383 ;src/main.c:243: moveDiceStruct(&Di1, Di1.x, rollPosY);
      00062A 21r00r00              1384 	ld	hl, #_rollPosY
      00062D 2A                    1385 	ld	a, (hl+)
      00062E 4F                    1386 	ld	c, a
      00062F 46                    1387 	ld	b, (hl)
      000630 21r08r00              1388 	ld	hl, #(_Di1 + 8)
      000633 2A                    1389 	ld	a,	(hl+)
      000634 66                    1390 	ld	h, (hl)
                                   1391 ;	spillPairReg hl
      000635 6F                    1392 	ld	l, a
                                   1393 ;	spillPairReg hl
                                   1394 ;	spillPairReg hl
      000636 C5                    1395 	push	bc
      000637 E5                    1396 	push	hl
      000638 11r00r00              1397 	ld	de, #_Di1
      00063B D5                    1398 	push	de
      00063C CDr3Er01              1399 	call	_moveDiceStruct
      00063F E8 06                 1400 	add	sp, #6
                                   1401 ;src/main.c:245: break;
      000641 C9                    1402 	ret
                                   1403 ;src/main.c:246: case 4:
      000642                       1404 00107$:
                                   1405 ;src/main.c:247: if(Di2.inPlay == 1){
      000642 21r10r00              1406 	ld	hl, #_Di2 + 16
      000645 4E                    1407 	ld	c, (hl)
                                   1408 ;src/main.c:249: moveDiceStruct(&Di2, Di2.x, heldPosY);
                                   1409 ;src/main.c:247: if(Di2.inPlay == 1){
      000646 79                    1410 	ld	a, c
                                   1411 ;src/main.c:248: Di2.inPlay = 0;
      000647 3D                    1412 	dec	a
      000648 20 19                 1413 	jr	NZ, 00111$
      00064A 77                    1414 	ld	(hl),a
                                   1415 ;src/main.c:249: moveDiceStruct(&Di2, Di2.x, heldPosY);
      00064B 21r00r00              1416 	ld	hl, #_heldPosY
      00064E 2A                    1417 	ld	a, (hl+)
      00064F 4F                    1418 	ld	c, a
      000650 46                    1419 	ld	b, (hl)
      000651 21r08r00              1420 	ld	hl, #(_Di2 + 8)
      000654 2A                    1421 	ld	a,	(hl+)
      000655 66                    1422 	ld	h, (hl)
                                   1423 ;	spillPairReg hl
      000656 6F                    1424 	ld	l, a
                                   1425 ;	spillPairReg hl
                                   1426 ;	spillPairReg hl
      000657 C5                    1427 	push	bc
      000658 E5                    1428 	push	hl
      000659 11r00r00              1429 	ld	de, #_Di2
      00065C D5                    1430 	push	de
      00065D CDr3Er01              1431 	call	_moveDiceStruct
      000660 E8 06                 1432 	add	sp, #6
      000662 C9                    1433 	ret
      000663                       1434 00111$:
                                   1435 ;src/main.c:251: else if(Di2.inPlay == 0){
      000663 79                    1436 	ld	a, c
      000664 B7                    1437 	or	a, a
      000665 C0                    1438 	ret	NZ
                                   1439 ;src/main.c:252: Di2.inPlay = 1;
      000666 36 01                 1440 	ld	(hl), #0x01
                                   1441 ;src/main.c:253: moveDiceStruct(&Di2, Di2.x, rollPosY);
      000668 21r00r00              1442 	ld	hl, #_rollPosY
      00066B 2A                    1443 	ld	a, (hl+)
      00066C 4F                    1444 	ld	c, a
      00066D 46                    1445 	ld	b, (hl)
      00066E 21r08r00              1446 	ld	hl, #(_Di2 + 8)
      000671 2A                    1447 	ld	a,	(hl+)
      000672 66                    1448 	ld	h, (hl)
                                   1449 ;	spillPairReg hl
      000673 6F                    1450 	ld	l, a
                                   1451 ;	spillPairReg hl
                                   1452 ;	spillPairReg hl
      000674 C5                    1453 	push	bc
      000675 E5                    1454 	push	hl
      000676 11r00r00              1455 	ld	de, #_Di2
      000679 D5                    1456 	push	de
      00067A CDr3Er01              1457 	call	_moveDiceStruct
      00067D E8 06                 1458 	add	sp, #6
                                   1459 ;src/main.c:255: break;
      00067F C9                    1460 	ret
                                   1461 ;src/main.c:256: case 5:
      000680                       1462 00113$:
                                   1463 ;src/main.c:257: if(Di3.inPlay == 1){
      000680 21r10r00              1464 	ld	hl, #_Di3 + 16
      000683 4E                    1465 	ld	c, (hl)
                                   1466 ;src/main.c:259: moveDiceStruct(&Di3, Di3.x, heldPosY);
                                   1467 ;src/main.c:257: if(Di3.inPlay == 1){
      000684 79                    1468 	ld	a, c
                                   1469 ;src/main.c:258: Di3.inPlay = 0;
      000685 3D                    1470 	dec	a
      000686 20 19                 1471 	jr	NZ, 00117$
      000688 77                    1472 	ld	(hl),a
                                   1473 ;src/main.c:259: moveDiceStruct(&Di3, Di3.x, heldPosY);
      000689 21r00r00              1474 	ld	hl, #_heldPosY
      00068C 2A                    1475 	ld	a, (hl+)
      00068D 4F                    1476 	ld	c, a
      00068E 46                    1477 	ld	b, (hl)
      00068F 21r08r00              1478 	ld	hl, #(_Di3 + 8)
      000692 2A                    1479 	ld	a,	(hl+)
      000693 66                    1480 	ld	h, (hl)
                                   1481 ;	spillPairReg hl
      000694 6F                    1482 	ld	l, a
                                   1483 ;	spillPairReg hl
                                   1484 ;	spillPairReg hl
      000695 C5                    1485 	push	bc
      000696 E5                    1486 	push	hl
      000697 11r00r00              1487 	ld	de, #_Di3
      00069A D5                    1488 	push	de
      00069B CDr3Er01              1489 	call	_moveDiceStruct
      00069E E8 06                 1490 	add	sp, #6
      0006A0 C9                    1491 	ret
      0006A1                       1492 00117$:
                                   1493 ;src/main.c:261: else if(Di3.inPlay == 0){
      0006A1 79                    1494 	ld	a, c
      0006A2 B7                    1495 	or	a, a
      0006A3 C0                    1496 	ret	NZ
                                   1497 ;src/main.c:262: Di3.inPlay = 1;
      0006A4 36 01                 1498 	ld	(hl), #0x01
                                   1499 ;src/main.c:263: moveDiceStruct(&Di3, Di3.x, rollPosY);
      0006A6 21r00r00              1500 	ld	hl, #_rollPosY
      0006A9 2A                    1501 	ld	a, (hl+)
      0006AA 4F                    1502 	ld	c, a
      0006AB 46                    1503 	ld	b, (hl)
      0006AC 21r08r00              1504 	ld	hl, #(_Di3 + 8)
      0006AF 2A                    1505 	ld	a,	(hl+)
      0006B0 66                    1506 	ld	h, (hl)
                                   1507 ;	spillPairReg hl
      0006B1 6F                    1508 	ld	l, a
                                   1509 ;	spillPairReg hl
                                   1510 ;	spillPairReg hl
      0006B2 C5                    1511 	push	bc
      0006B3 E5                    1512 	push	hl
      0006B4 11r00r00              1513 	ld	de, #_Di3
      0006B7 D5                    1514 	push	de
      0006B8 CDr3Er01              1515 	call	_moveDiceStruct
      0006BB E8 06                 1516 	add	sp, #6
                                   1517 ;src/main.c:265: break;
      0006BD C9                    1518 	ret
                                   1519 ;src/main.c:266: case 6:
      0006BE                       1520 00119$:
                                   1521 ;src/main.c:267: if(Di4.inPlay == 1){
      0006BE 21r10r00              1522 	ld	hl, #_Di4 + 16
      0006C1 4E                    1523 	ld	c, (hl)
                                   1524 ;src/main.c:269: moveDiceStruct(&Di4, Di4.x, heldPosY);
                                   1525 ;src/main.c:267: if(Di4.inPlay == 1){
      0006C2 79                    1526 	ld	a, c
                                   1527 ;src/main.c:268: Di4.inPlay = 0;
      0006C3 3D                    1528 	dec	a
      0006C4 20 19                 1529 	jr	NZ, 00123$
      0006C6 77                    1530 	ld	(hl),a
                                   1531 ;src/main.c:269: moveDiceStruct(&Di4, Di4.x, heldPosY);
      0006C7 21r00r00              1532 	ld	hl, #_heldPosY
      0006CA 2A                    1533 	ld	a, (hl+)
      0006CB 4F                    1534 	ld	c, a
      0006CC 46                    1535 	ld	b, (hl)
      0006CD 21r08r00              1536 	ld	hl, #(_Di4 + 8)
      0006D0 2A                    1537 	ld	a,	(hl+)
      0006D1 66                    1538 	ld	h, (hl)
                                   1539 ;	spillPairReg hl
      0006D2 6F                    1540 	ld	l, a
                                   1541 ;	spillPairReg hl
                                   1542 ;	spillPairReg hl
      0006D3 C5                    1543 	push	bc
      0006D4 E5                    1544 	push	hl
      0006D5 11r00r00              1545 	ld	de, #_Di4
      0006D8 D5                    1546 	push	de
      0006D9 CDr3Er01              1547 	call	_moveDiceStruct
      0006DC E8 06                 1548 	add	sp, #6
      0006DE C9                    1549 	ret
      0006DF                       1550 00123$:
                                   1551 ;src/main.c:271: else if(Di4.inPlay == 0){
      0006DF 79                    1552 	ld	a, c
      0006E0 B7                    1553 	or	a, a
      0006E1 C0                    1554 	ret	NZ
                                   1555 ;src/main.c:272: Di4.inPlay = 1;
      0006E2 36 01                 1556 	ld	(hl), #0x01
                                   1557 ;src/main.c:273: moveDiceStruct(&Di4, Di4.x, rollPosY);
      0006E4 21r00r00              1558 	ld	hl, #_rollPosY
      0006E7 2A                    1559 	ld	a, (hl+)
      0006E8 4F                    1560 	ld	c, a
      0006E9 46                    1561 	ld	b, (hl)
      0006EA 21r08r00              1562 	ld	hl, #(_Di4 + 8)
      0006ED 2A                    1563 	ld	a,	(hl+)
      0006EE 66                    1564 	ld	h, (hl)
                                   1565 ;	spillPairReg hl
      0006EF 6F                    1566 	ld	l, a
                                   1567 ;	spillPairReg hl
                                   1568 ;	spillPairReg hl
      0006F0 C5                    1569 	push	bc
      0006F1 E5                    1570 	push	hl
      0006F2 11r00r00              1571 	ld	de, #_Di4
      0006F5 D5                    1572 	push	de
      0006F6 CDr3Er01              1573 	call	_moveDiceStruct
      0006F9 E8 06                 1574 	add	sp, #6
                                   1575 ;src/main.c:275: break;
      0006FB C9                    1576 	ret
                                   1577 ;src/main.c:276: case 7:
      0006FC                       1578 00125$:
                                   1579 ;src/main.c:277: if(Di5.inPlay == 1){
      0006FC 21r10r00              1580 	ld	hl, #_Di5 + 16
      0006FF 4E                    1581 	ld	c, (hl)
                                   1582 ;src/main.c:279: moveDiceStruct(&Di5, Di5.x, heldPosY);
                                   1583 ;src/main.c:277: if(Di5.inPlay == 1){
      000700 79                    1584 	ld	a, c
                                   1585 ;src/main.c:278: Di5.inPlay = 0;
      000701 3D                    1586 	dec	a
      000702 20 19                 1587 	jr	NZ, 00129$
      000704 77                    1588 	ld	(hl),a
                                   1589 ;src/main.c:279: moveDiceStruct(&Di5, Di5.x, heldPosY);
      000705 21r00r00              1590 	ld	hl, #_heldPosY
      000708 2A                    1591 	ld	a, (hl+)
      000709 4F                    1592 	ld	c, a
      00070A 46                    1593 	ld	b, (hl)
      00070B 21r08r00              1594 	ld	hl, #(_Di5 + 8)
      00070E 2A                    1595 	ld	a,	(hl+)
      00070F 66                    1596 	ld	h, (hl)
                                   1597 ;	spillPairReg hl
      000710 6F                    1598 	ld	l, a
                                   1599 ;	spillPairReg hl
                                   1600 ;	spillPairReg hl
      000711 C5                    1601 	push	bc
      000712 E5                    1602 	push	hl
      000713 11r00r00              1603 	ld	de, #_Di5
      000716 D5                    1604 	push	de
      000717 CDr3Er01              1605 	call	_moveDiceStruct
      00071A E8 06                 1606 	add	sp, #6
      00071C C9                    1607 	ret
      00071D                       1608 00129$:
                                   1609 ;src/main.c:281: else if(Di5.inPlay == 0){
      00071D 79                    1610 	ld	a, c
      00071E B7                    1611 	or	a, a
      00071F C0                    1612 	ret	NZ
                                   1613 ;src/main.c:282: Di5.inPlay = 1;
      000720 36 01                 1614 	ld	(hl), #0x01
                                   1615 ;src/main.c:283: moveDiceStruct(&Di5, Di5.x, rollPosY);
      000722 21r00r00              1616 	ld	hl, #_rollPosY
      000725 2A                    1617 	ld	a, (hl+)
      000726 4F                    1618 	ld	c, a
      000727 46                    1619 	ld	b, (hl)
      000728 21r08r00              1620 	ld	hl, #(_Di5 + 8)
      00072B 2A                    1621 	ld	a,	(hl+)
      00072C 66                    1622 	ld	h, (hl)
                                   1623 ;	spillPairReg hl
      00072D 6F                    1624 	ld	l, a
                                   1625 ;	spillPairReg hl
                                   1626 ;	spillPairReg hl
      00072E C5                    1627 	push	bc
      00072F E5                    1628 	push	hl
      000730 11r00r00              1629 	ld	de, #_Di5
      000733 D5                    1630 	push	de
      000734 CDr3Er01              1631 	call	_moveDiceStruct
      000737 E8 06                 1632 	add	sp, #6
                                   1633 ;src/main.c:286: }
                                   1634 ;src/main.c:287: }
      000739 C9                    1635 	ret
                                   1636 ;src/main.c:290: void rollCheck(){
                                   1637 ;	---------------------------------
                                   1638 ; Function rollCheck
                                   1639 ; ---------------------------------
      00073A                       1640 _rollCheck::
                                   1641 ;src/main.c:291: if(rollsEnabled == 0){
      00073A FAr00r00              1642 	ld	a, (#_rollsEnabled)
      00073D B7                    1643 	or	a, a
      00073E 20 13                 1644 	jr	NZ, 00107$
                                   1645 ;src/main.c:292: if(scorecardChangeA != scorecardChangeB){
      000740 FAr00r00              1646 	ld	a, (#_scorecardChangeA)
      000743 21r00r00              1647 	ld	hl, #_scorecardChangeB
      000746 96                    1648 	sub	a, (hl)
                                   1649 ;src/main.c:293: newTurn();
      000747 C2rA3r03              1650 	jp	NZ,_newTurn
                                   1651 ;src/main.c:297: cardView(backgroundMap);
      00074A 11r00r00              1652 	ld	de, #_backgroundMap
      00074D D5                    1653 	push	de
      00074E CDr00r00              1654 	call	_cardView
      000751 E1                    1655 	pop	hl
      000752 C9                    1656 	ret
      000753                       1657 00107$:
                                   1658 ;src/main.c:300: else if(rollsEnabled == 1){
      000753 21r00r00              1659 	ld	hl, #_rollsEnabled
      000756 7E                    1660 	ld	a, (hl)
      000757 3D                    1661 	dec	a
      000758 CAr97r00              1662 	jp	Z,_diceToRoll
                                   1663 ;src/main.c:301: diceToRoll();
      00075B C9                    1664 	ret
                                   1665 ;src/main.c:303: }
      00075C C9                    1666 	ret
                                   1667 ;src/main.c:306: void playCursorA(){
                                   1668 ;	---------------------------------
                                   1669 ; Function playCursorA
                                   1670 ; ---------------------------------
      00075D                       1671 _playCursorA::
                                   1672 ;src/main.c:308: if(cursorIndex == 0){
      00075D 21r01r00              1673 	ld	hl, #_cursorIndex + 1
      000760 3A                    1674 	ld	a, (hl-)
      000761 B6                    1675 	or	a, (hl)
      000762 20 0C                 1676 	jr	NZ, 00125$
                                   1677 ;src/main.c:309: rollTracker();
      000764 CDr62r04              1678 	call	_rollTracker
                                   1679 ;src/main.c:310: rollCheck();
      000767 CDr3Ar07              1680 	call	_rollCheck
                                   1681 ;src/main.c:311: turnRollDisplay();
      00076A CDr00r00              1682 	call	_turnRollDisplay
      00076D C3r03r08              1683 	jp	00126$
      000770                       1684 00125$:
                                   1685 ;src/main.c:314: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      000770 21r00r00              1686 	ld	hl, #_rollsLeft
      000773 2A                    1687 	ld	a, (hl+)
      000774 D6 03                 1688 	sub	a, #0x03
      000776 B6                    1689 	or	a, (hl)
      000777 3E 01                 1690 	ld	a, #0x01
      000779 28 01                 1691 	jr	Z, 00186$
      00077B AF                    1692 	xor	a, a
      00077C                       1693 00186$:
      00077C 5F                    1694 	ld	e, a
      00077D FAr00r00              1695 	ld	a, (#_scorecardChangeA)
      000780 21r00r00              1696 	ld	hl, #_scorecardChangeB
      000783 96                    1697 	sub	a, (hl)
      000784 3E 01                 1698 	ld	a, #0x01
      000786 28 01                 1699 	jr	Z, 00188$
      000788 AF                    1700 	xor	a, a
      000789                       1701 00188$:
      000789 4F                    1702 	ld	c, a
                                   1703 ;src/main.c:315: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      00078A 21r00r00              1704 	ld	hl, #_rollsLeft
      00078D 2A                    1705 	ld	a, (hl+)
      00078E D6 03                 1706 	sub	a, #0x03
      000790 7E                    1707 	ld	a, (hl)
      000791 DE 00                 1708 	sbc	a, #0x00
      000793 3E 00                 1709 	ld	a, #0x00
      000795 17                    1710 	rla
      000796 47                    1711 	ld	b, a
                                   1712 ;src/main.c:313: else if(cursorIndex == 1){
      000797 21r00r00              1713 	ld	hl, #_cursorIndex
      00079A 2A                    1714 	ld	a, (hl+)
      00079B 3D                    1715 	dec	a
                                   1716 ;src/main.c:314: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      00079C B6                    1717 	or	a,(hl)
      00079D 20 27                 1718 	jr	NZ, 00122$
      00079F B3                    1719 	or	a,e
      0007A0 C0                    1720 	ret	NZ
      0007A1 CB 41                 1721 	bit	0, c
      0007A3 C8                    1722 	ret	Z
                                   1723 ;src/main.c:315: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      0007A4 78                    1724 	ld	a, b
      0007A5 B7                    1725 	or	a, a
      0007A6 28 5B                 1726 	jr	Z, 00126$
      0007A8 79                    1727 	ld	a, c
      0007A9 B7                    1728 	or	a, a
      0007AA 28 57                 1729 	jr	Z, 00126$
                                   1730 ;src/main.c:316: cursorPosition[0] = 40;
      0007AC 21r00r00              1731 	ld	hl, #_cursorPosition
      0007AF 3E 28                 1732 	ld	a, #0x28
      0007B1 22                    1733 	ld	(hl+), a
      0007B2 36 00                 1734 	ld	(hl), #0x00
                                   1735 ;src/main.c:317: cursorPosition[1] = 128;
      0007B4 21r02r00              1736 	ld	hl, #(_cursorPosition + 2)
      0007B7 3E 80                 1737 	ld	a, #0x80
      0007B9 22                    1738 	ld	(hl+), a
      0007BA 36 00                 1739 	ld	(hl), #0x00
                                   1740 ;src/main.c:318: cursorIndex = 3;
      0007BC 21r00r00              1741 	ld	hl, #_cursorIndex
      0007BF 3E 03                 1742 	ld	a, #0x03
      0007C1 22                    1743 	ld	(hl+), a
      0007C2 AF                    1744 	xor	a, a
      0007C3 77                    1745 	ld	(hl), a
      0007C4 18 3D                 1746 	jr	00126$
      0007C6                       1747 00122$:
                                   1748 ;src/main.c:321: else if(cursorIndex == 2){
      0007C6 21r00r00              1749 	ld	hl, #_cursorIndex
      0007C9 2A                    1750 	ld	a, (hl+)
      0007CA D6 02                 1751 	sub	a, #0x02
                                   1752 ;src/main.c:322: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      0007CC B6                    1753 	or	a,(hl)
      0007CD 20 1C                 1754 	jr	NZ, 00119$
      0007CF B3                    1755 	or	a,e
      0007D0 C0                    1756 	ret	NZ
      0007D1 CB 41                 1757 	bit	0, c
      0007D3 C8                    1758 	ret	Z
                                   1759 ;src/main.c:323: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      0007D4 78                    1760 	ld	a, b
      0007D5 B7                    1761 	or	a, a
      0007D6 28 2B                 1762 	jr	Z, 00126$
      0007D8 79                    1763 	ld	a, c
      0007D9 B7                    1764 	or	a, a
      0007DA 28 27                 1765 	jr	Z, 00126$
                                   1766 ;src/main.c:324: viewMode = 1;
      0007DC 21r00r00              1767 	ld	hl, #_viewMode
      0007DF 36 01                 1768 	ld	(hl), #0x01
                                   1769 ;src/main.c:325: cardView(backgroundMap);
      0007E1 11r00r00              1770 	ld	de, #_backgroundMap
      0007E4 D5                    1771 	push	de
      0007E5 CDr00r00              1772 	call	_cardView
      0007E8 E1                    1773 	pop	hl
      0007E9 18 18                 1774 	jr	00126$
      0007EB                       1775 00119$:
                                   1776 ;src/main.c:328: else if(cursorIndex >= 3 && cursorIndex <= 7){
      0007EB 21r00r00              1777 	ld	hl, #_cursorIndex
      0007EE 2A                    1778 	ld	a, (hl+)
      0007EF D6 03                 1779 	sub	a, #0x03
      0007F1 7E                    1780 	ld	a, (hl)
      0007F2 DE 00                 1781 	sbc	a, #0x00
      0007F4 38 0D                 1782 	jr	C, 00126$
      0007F6 2B                    1783 	dec	hl
      0007F7 3E 07                 1784 	ld	a, #0x07
      0007F9 96                    1785 	sub	a, (hl)
      0007FA 23                    1786 	inc	hl
      0007FB 3E 00                 1787 	ld	a, #0x00
      0007FD 9E                    1788 	sbc	a, (hl)
      0007FE 38 03                 1789 	jr	C, 00126$
                                   1790 ;src/main.c:329: toggleDi();
      000800 CDrD3r05              1791 	call	_toggleDi
      000803                       1792 00126$:
                                   1793 ;src/main.c:331: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      000803 21r02r00              1794 	ld	hl, #_cursorPosition + 2
      000806 46                    1795 	ld	b, (hl)
      000807 21r00r00              1796 	ld	hl, #_cursorPosition
      00080A 4E                    1797 	ld	c, (hl)
      00080B 21r00r00              1798 	ld	hl, #_cursor
      00080E 2A                    1799 	ld	a, (hl+)
      00080F 5F                    1800 	ld	e, a
      000810 56                    1801 	ld	d, (hl)
                                   1802 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000811 6B                    1803 	ld	l, e
                                   1804 ;	spillPairReg hl
                                   1805 ;	spillPairReg hl
      000812 26 00                 1806 	ld	h, #0x00
                                   1807 ;	spillPairReg hl
                                   1808 ;	spillPairReg hl
      000814 29                    1809 	add	hl, hl
      000815 29                    1810 	add	hl, hl
      000816 11r00r00              1811 	ld	de, #_shadow_OAM
      000819 19                    1812 	add	hl, de
                                   1813 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      00081A 78                    1814 	ld	a, b
      00081B 22                    1815 	ld	(hl+), a
      00081C 71                    1816 	ld	(hl), c
                                   1817 ;src/main.c:331: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1818 ;src/main.c:332: }
      00081D C9                    1819 	ret
                                   1820 ;src/main.c:334: void playCursorB(){
                                   1821 ;	---------------------------------
                                   1822 ; Function playCursorB
                                   1823 ; ---------------------------------
      00081E                       1824 _playCursorB::
                                   1825 ;src/main.c:335: if(cursorIndex >= 3 && cursorIndex <= 7){
      00081E 21r00r00              1826 	ld	hl, #_cursorIndex
      000821 2A                    1827 	ld	a, (hl+)
      000822 D6 03                 1828 	sub	a, #0x03
      000824 7E                    1829 	ld	a, (hl)
      000825 DE 00                 1830 	sbc	a, #0x00
      000827 38 20                 1831 	jr	C, 00102$
      000829 2B                    1832 	dec	hl
      00082A 3E 07                 1833 	ld	a, #0x07
      00082C 96                    1834 	sub	a, (hl)
      00082D 23                    1835 	inc	hl
      00082E 3E 00                 1836 	ld	a, #0x00
      000830 9E                    1837 	sbc	a, (hl)
      000831 38 16                 1838 	jr	C, 00102$
                                   1839 ;src/main.c:336: cursorPosition[0] = 16;
      000833 21r00r00              1840 	ld	hl, #_cursorPosition
      000836 3E 10                 1841 	ld	a, #0x10
      000838 22                    1842 	ld	(hl+), a
      000839 36 00                 1843 	ld	(hl), #0x00
                                   1844 ;src/main.c:337: cursorPosition[1] = 144;
      00083B 21r02r00              1845 	ld	hl, #(_cursorPosition + 2)
      00083E 3E 90                 1846 	ld	a, #0x90
      000840 22                    1847 	ld	(hl+), a
      000841 36 00                 1848 	ld	(hl), #0x00
                                   1849 ;src/main.c:338: cursorIndex = 0;
      000843 AF                    1850 	xor	a, a
      000844 21r00r00              1851 	ld	hl, #_cursorIndex
      000847 22                    1852 	ld	(hl+), a
      000848 77                    1853 	ld	(hl), a
      000849                       1854 00102$:
                                   1855 ;src/main.c:340: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
      000849 21r02r00              1856 	ld	hl, #_cursorPosition + 2
      00084C 46                    1857 	ld	b, (hl)
      00084D 21r00r00              1858 	ld	hl, #_cursorPosition
      000850 4E                    1859 	ld	c, (hl)
      000851 21r00r00              1860 	ld	hl, #_cursor
      000854 2A                    1861 	ld	a, (hl+)
      000855 5F                    1862 	ld	e, a
      000856 56                    1863 	ld	d, (hl)
                                   1864 ;/opt/gbdk/include/gb/gb.h:1399: OAM_item_t * itm = &shadow_OAM[nb];
      000857 6B                    1865 	ld	l, e
                                   1866 ;	spillPairReg hl
                                   1867 ;	spillPairReg hl
      000858 26 00                 1868 	ld	h, #0x00
                                   1869 ;	spillPairReg hl
                                   1870 ;	spillPairReg hl
      00085A 29                    1871 	add	hl, hl
      00085B 29                    1872 	add	hl, hl
      00085C 11r00r00              1873 	ld	de, #_shadow_OAM
      00085F 19                    1874 	add	hl, de
                                   1875 ;/opt/gbdk/include/gb/gb.h:1400: itm->y=y, itm->x=x;
      000860 78                    1876 	ld	a, b
      000861 22                    1877 	ld	(hl+), a
      000862 71                    1878 	ld	(hl), c
                                   1879 ;src/main.c:340: move_sprite(cursor, cursorPosition[0], cursorPosition[1]);
                                   1880 ;src/main.c:341: }
      000863 C9                    1881 	ret
                                   1882 ;src/main.c:343: void playCursorSelect(){
                                   1883 ;	---------------------------------
                                   1884 ; Function playCursorSelect
                                   1885 ; ---------------------------------
      000864                       1886 _playCursorSelect::
                                   1887 ;src/main.c:344: quickSwitch = 1;
      000864 21r00r00              1888 	ld	hl, #_quickSwitch
      000867 36 01                 1889 	ld	(hl), #0x01
                                   1890 ;src/main.c:345: if(rollsLeft == 3 || scorecardChangeA != scorecardChangeB) return;
      000869 21r00r00              1891 	ld	hl, #_rollsLeft
      00086C 2A                    1892 	ld	a, (hl+)
      00086D D6 03                 1893 	sub	a, #0x03
      00086F B6                    1894 	or	a, (hl)
      000870 C8                    1895 	ret	Z
      000871 FAr00r00              1896 	ld	a, (#_scorecardChangeA)
      000874 21r00r00              1897 	ld	hl, #_scorecardChangeB
      000877 96                    1898 	sub	a, (hl)
      000878 3E 01                 1899 	ld	a, #0x01
      00087A 28 01                 1900 	jr	Z, 00127$
      00087C AF                    1901 	xor	a, a
      00087D                       1902 00127$:
      00087D 4F                    1903 	ld	c, a
      00087E CB 41                 1904 	bit	0, c
      000880 C8                    1905 	ret	Z
                                   1906 ;src/main.c:346: else if(rollsLeft < 3 && scorecardChangeA == scorecardChangeB){
      000881 21r00r00              1907 	ld	hl, #_rollsLeft
      000884 2A                    1908 	ld	a, (hl+)
      000885 D6 03                 1909 	sub	a, #0x03
      000887 7E                    1910 	ld	a, (hl)
      000888 DE 00                 1911 	sbc	a, #0x00
      00088A D0                    1912 	ret	NC
      00088B 79                    1913 	ld	a, c
      00088C B7                    1914 	or	a, a
      00088D C8                    1915 	ret	Z
                                   1916 ;src/main.c:347: viewMode = 1;
      00088E 21r00r00              1917 	ld	hl, #_viewMode
      000891 36 01                 1918 	ld	(hl), #0x01
                                   1919 ;src/main.c:348: cardView(backgroundMap);
      000893 11r00r00              1920 	ld	de, #_backgroundMap
      000896 D5                    1921 	push	de
      000897 CDr00r00              1922 	call	_cardView
      00089A E1                    1923 	pop	hl
                                   1924 ;src/main.c:350: }
      00089B C9                    1925 	ret
                                   1926 ;src/main.c:354: void playCursor(){
                                   1927 ;	---------------------------------
                                   1928 ; Function playCursor
                                   1929 ; ---------------------------------
      00089C                       1930 _playCursor::
                                   1931 ;src/main.c:355: switch(joypad()){
      00089C CDr00r00              1932 	call	_joypad
      00089F 7B                    1933 	ld	a, e
      0008A0 FE 01                 1934 	cp	a, #0x01
      0008A2 28 1C                 1935 	jr	Z, 00102$
      0008A4 FE 02                 1936 	cp	a, #0x02
      0008A6 28 12                 1937 	jr	Z, 00101$
      0008A8 FE 10                 1938 	cp	a, #0x10
      0008AA 28 1A                 1939 	jr	Z, 00103$
      0008AC FE 20                 1940 	cp	a, #0x20
      0008AE 28 1C                 1941 	jr	Z, 00104$
      0008B0 FE 40                 1942 	cp	a, #0x40
      0008B2 28 1E                 1943 	jr	Z, 00106$
      0008B4 D6 80                 1944 	sub	a, #0x80
      0008B6 CAr00r00              1945 	jp	Z,_waitpadup
      0008B9 C9                    1946 	ret
                                   1947 ;src/main.c:356: case J_LEFT:
      0008BA                       1948 00101$:
                                   1949 ;src/main.c:357: playCursorLeft();
      0008BA CDrE2r04              1950 	call	_playCursorLeft
                                   1951 ;src/main.c:358: waitpadup();
                                   1952 ;src/main.c:359: break;
      0008BD C3r00r00              1953 	jp	_waitpadup
                                   1954 ;src/main.c:360: case J_RIGHT:
      0008C0                       1955 00102$:
                                   1956 ;src/main.c:361: playCursorRight();
      0008C0 CDr64r05              1957 	call	_playCursorRight
                                   1958 ;src/main.c:362: waitpadup();
                                   1959 ;src/main.c:363: break;
      0008C3 C3r00r00              1960 	jp	_waitpadup
                                   1961 ;src/main.c:364: case J_A:
      0008C6                       1962 00103$:
                                   1963 ;src/main.c:365: playCursorA();
      0008C6 CDr5Dr07              1964 	call	_playCursorA
                                   1965 ;src/main.c:366: waitpadup();
                                   1966 ;src/main.c:367: break;
      0008C9 C3r00r00              1967 	jp	_waitpadup
                                   1968 ;src/main.c:368: case J_B:
      0008CC                       1969 00104$:
                                   1970 ;src/main.c:369: playCursorB();
      0008CC CDr1Er08              1971 	call	_playCursorB
                                   1972 ;src/main.c:370: waitpadup();
                                   1973 ;src/main.c:371: break;
                                   1974 ;src/main.c:372: case J_START:
                                   1975 ;src/main.c:374: waitpadup();
                                   1976 ;src/main.c:375: break;
      0008CF C3r00r00              1977 	jp	_waitpadup
                                   1978 ;src/main.c:376: case J_SELECT:
      0008D2                       1979 00106$:
                                   1980 ;src/main.c:377: playCursorSelect();
      0008D2 CDr64r08              1981 	call	_playCursorSelect
                                   1982 ;src/main.c:378: waitpadup();
                                   1983 ;src/main.c:380: }
                                   1984 ;src/main.c:381: }
      0008D5 C3r00r00              1985 	jp	_waitpadup
                                   1986 ;src/main.c:384: void main(){
                                   1987 ;	---------------------------------
                                   1988 ; Function main
                                   1989 ; ---------------------------------
      0008D8                       1990 _main::
                                   1991 ;src/main.c:385: initGame();
      0008D8 CDrCAr02              1992 	call	_initGame
                                   1993 ;src/main.c:387: DISPLAY_ON;
      0008DB F0r00                 1994 	ldh	a, (_LCDC_REG + 0)
      0008DD F6 80                 1995 	or	a, #0x80
      0008DF E0r00                 1996 	ldh	(_LCDC_REG + 0), a
                                   1997 ;src/main.c:389: while(1){
      0008E1                       1998 00107$:
                                   1999 ;src/main.c:390: if(viewMode == 0){
      0008E1 FAr00r00              2000 	ld	a, (#_viewMode)
      0008E4 B7                    2001 	or	a, a
      0008E5 20 05                 2002 	jr	NZ, 00104$
                                   2003 ;src/main.c:391: playCursor();
      0008E7 CDr9Cr08              2004 	call	_playCursor
      0008EA 18 F5                 2005 	jr	00107$
      0008EC                       2006 00104$:
                                   2007 ;src/main.c:393: else if(viewMode == 1){
      0008EC FAr00r00              2008 	ld	a, (#_viewMode)
      0008EF 3D                    2009 	dec	a
      0008F0 20 EF                 2010 	jr	NZ, 00107$
                                   2011 ;src/main.c:394: cardCursor();
      0008F2 CDr00r00              2012 	call	_cardCursor
                                   2013 ;src/main.c:397: }
      0008F5 18 EA                 2014 	jr	00107$
                                   2015 	.area _CODE
                                   2016 	.area _INITIALIZER
                                   2017 	.area _CABS (ABS)
